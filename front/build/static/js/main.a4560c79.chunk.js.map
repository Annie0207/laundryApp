{"version":3,"sources":["components/signups/SignUpCustomerForm.module.css","components/customer/newLaundryRequests/LaundryRequestForm.module.css","components/customer/customerDetailsAndRequests/CustomerDetailsForm.module.css","components/login/LoginForm.module.css","components/layout/MainNavigation.module.css","components/ui/Card.module.css","components/layout/Layout.module.css","components/customer/newLaundryRequests/LaundryCustomerConfirm.module.css","store/UserLoginContext.js","images/homeLandingLaundry.jpg","pages/Home.js","pages/RedirectHome.js","images/laundryUser.jpg","images/laundryProvider.jpg","components/ui/Card.js","pages/SignUp.js","components/login/LoginForm.js","pages/Login.js","components/signups/SignUpProviderForm.js","pages/SignUpProviders.js","components/signups/SignUpCustomerForm.js","pages/SignUpCustomers.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/customer/customerDetailsAndRequests/CustomerLaundryRequestDetails.js","components/customer/customerDetailsAndRequests/CustomerDetailsForm.js","pages/CustomerDetailsPage.js","components/customer/newLaundryRequests/LaundryRequestForm.js","components/customer/newLaundryRequests/LaundryCustomerConfirm.js","pages/CustomerRequestService.js","components/provider/EditService.js","components/provider/Button.js","components/provider/Service.js","components/provider/Services.js","pages/ProviderPage.js","pages/ProviderDetailsPage.js","App.js","index.js"],"names":["module","exports","UserLoginContext","createContext","userDetails","loginStatus","loginSuccess","localStorage","getItem","UserLoginContextProvider","props","setUserDetails","useState","setLoginStatus","findUserDetails","async","response","fetch","method","headers","body","JSON","stringify","data","json","useEffect","userType","credentials","email","setData","context","addUserDetailsHandler","details","key","value","Object","entries","removeUserDetailsHandler","bool","user","Provider","children","Home","className","style","height","width","objectFit","src","homeLandingLaundry","alt","href","RedirectHome","navigate","useNavigate","setTimeout","Card","classes","card","SignUp","to","laundryProvider","laundryUser","LoginForm","errorMessage","setErrorMessage","emailRef","useRef","passwordRef","userContext","useContext","form","onSubmit","event","preventDefault","loginData","current","password","loginHandler","error","setItem","control","htmlFor","type","placeholder","required","name","ref","actions","Login","SignUpProviderForm","postProviderData","providerInfo","setProviderInfo","companyName","firstName","lastName","phoneNumber","address","city","state","zipCode","confirmPassword","handleChange","target","id","onChange","pattern","SignUpProviders","SignUpCustomerForm","passwordErrorMessage","setPasswordErrorMessage","emailErrorMessage","setEmailErrorMessage","firstNameRef","lastNameRef","confirmPasswordRef","cityRef","zipCodeRef","stateRef","phoneNumberRef","passwordChangeHandler","customerFirstName","customerLastName","customerEmail","customerPassword","customerConfirmPassword","customerCity","customerZipCode","customerState","customerPhoneNumber","customerData","createCustomerFetch","includes","findEmailFetch","undefined","SignUpCustomers","MainNavigation","logoutHandler","clear","linksRender","push","logout","onClick","header","logo","Layout","main","allCustomerRequests","currencyFormatter","Intl","NumberFormat","currency","CustomerLaundryRequestDetails","customerRequestsRender","allCustomerLaundryRequestsFetch","console","log","sort","a","b","Date","parse","date","forEach","request","providerEmail","providerAccepted","toString","serviceComplete","format","totalCost","CustomerDetailsForm","formEdit","setFormEdit","buttonText","setButtonText","customerDataChanged","updateUserDetailsFetch","defaultValue","disabled","CustomerDetailsPage","LaundryRequestForm","poundsOfLaundryRef","foldRef","poundsOfDryCleanRef","deliveryRef","dateRef","dateErrorMessage","setDateErrorMesssage","dryCleanForm","setDryCleanForm","washForm","setWashForm","poundsOfLaundry","fold","checked","poundsOfDryClean","delivery","toLocaleDateString","laundryRequestData","wash","dryClean","laundryRequestFetch","checkBoxControl","textControl","providerCards","length","setSortPriceLowHighFunc","setSortPriceHighLowFunc","setSortDistanceFunc","LaundryCustomerConfirm","washPrice","poundsRequestedWash","dryCleanPrice","poundsRequesteddryClean","deliveryPrice","foldPrice","requestObject","servicesRequestedObject","servicesRequested","provider","serviceObjects","price","parseFloat","perPound","poundsRequested","customer","laundryCustomerConfirmFetch","availableProviders","CustomerRequestService","providerCardRender","gotProivders","setGotProivders","sortPriceLowHigh","setSortPriceLowHigh","sortPriceHighLow","setSortPriceHighLow","sortDistance","setSortDistance","laundryCost","dryCleanCost","foldingCost","deliveryCost","Math","abs","EditService","serviceItem","modifyServiceDisplay","onServiceEdit","deleteService","submitEdit","services","serviceOptions","setServiceOptions","Set","serviceOpt","updateServices","serivceOpt","service","has","delete","handleInputChange","e","serviceID","showEdit","options","add","selected","renderOptions","output","renderPerPoundBox","step","min","max","Button","handleClick","showDetails","Service","setServices","Services","s","i","splice","postService","updated","map","index","renderServices","newService","ProviderPage","res","getProviderServices","loadServices","toModify","update","item","ProviderDetailsPage","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4560c79.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SignUpCustomerForm_form__HR3OO\",\"error\":\"SignUpCustomerForm_error__3CD6u\",\"control\":\"SignUpCustomerForm_control__2TBwh\",\"actions\":\"SignUpCustomerForm_actions__27TDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LaundryRequestForm_form__-Bhjx\",\"error\":\"LaundryRequestForm_error__2Xq1J\",\"textControl\":\"LaundryRequestForm_textControl__39e9E\",\"checkBoxControl\":\"LaundryRequestForm_checkBoxControl__bPezt\",\"actions\":\"LaundryRequestForm_actions__l5BM4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CustomerDetailsForm_form__3wqGk\",\"error\":\"CustomerDetailsForm_error__2BiXN\",\"control\":\"CustomerDetailsForm_control__opoa3\",\"actions\":\"CustomerDetailsForm_actions__1emt0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__1c99a\",\"error\":\"LoginForm_error__i9owo\",\"control\":\"LoginForm_control__3T3Ps\",\"actions\":\"LoginForm_actions__33BbP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"active\":\"MainNavigation_active__oN3Ka\",\"logout\":\"MainNavigation_logout__3fhIF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3_jzl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"LaundryCustomerConfirm_actions__283hK\"};","/* MICHAEL CHANG */\n\nimport { createContext, useState, useEffect } from \"react\";\n\n// create context\nconst UserLoginContext = createContext({\n  userDetails: {},\n  loginStatus: false,\n});\n\n// check localStorage\nconst loginSuccess = localStorage.getItem(\"loginSuccess\");\n\nexport function UserLoginContextProvider(props) {\n  const [userDetails, setUserDetails] = useState({});\n  const [loginStatus, setLoginStatus] = useState(false);\n\n  function setLoginStatusCtx(bool) {\n    setLoginStatus(bool);\n  }\n\n  function setUserDetailsCtx(user) {\n    setUserDetails(user);\n  }\n\n  function addUserDetailsHandler(details) {\n    for (const [key, value] of Object.entries(details)) {\n      setUserDetails({ ...userDetails, [key]: value });\n    }\n  }\n\n  function removeUserDetailsHandler() {\n    setUserDetails();\n  }\n\n  // fetch for userDetails\n  const findUserDetails = async (data) => {\n    const response = await fetch(\"/api/findUserDetails\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n    return await response.json();\n  };\n\n  // if localStorage is \"true\" (NOTE: localStorage only stores strings)\n  useEffect(() => {\n    if (loginSuccess === \"true\") {\n      const setData = async () => {\n        const userType = localStorage.getItem(\"userType\");\n        const email = localStorage.getItem(\"email\");\n        const credentials = { email: email, userType: userType };\n        setUserDetails(await findUserDetails(credentials));\n        setLoginStatus(true);\n      };\n      setData();\n    }\n  }, []);\n\n  const context = {\n    userDetails: userDetails,\n    loginStatus: loginStatus,\n    addUserDetailsHandler: addUserDetailsHandler,\n    removeUserDetailsHandler: removeUserDetailsHandler,\n    findUserDetails: findUserDetails,\n    setLoginStatus: setLoginStatusCtx,\n    setUserDetails: setUserDetailsCtx,\n  };\n\n  return (\n    <UserLoginContext.Provider value={context}>\n      {props.children}\n    </UserLoginContext.Provider>\n  );\n}\n\nexport default UserLoginContext;\n","export default __webpack_public_path__ + \"static/media/homeLandingLaundry.315cce71.jpg\";","/* MICHAEL CHANG & DANIEL LISKO */\n\nimport homeLandingLaundry from \"../images/homeLandingLaundry.jpg\";\n\nfunction Home() {\n  return (\n    <div>\n      <h1>Hamper Dash</h1>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <p>\n            Welcome to Hamper Dash!! We connect you to the best launderers\n            around so you can save time and focus on what matters, instead of\n            laundry chores. We offer registration as a laundry provider (to\n            provide laundry services) on our platform, or as a laundry user (get\n            your laundry cleaned).\n          </p>\n        </div>\n        <div className=\"col-12\">\n          <img\n            style={{\n              height: \"100%\",\n              width: \"100%\",\n              objectFit: \"contain\",\n            }}\n            src={homeLandingLaundry}\n            alt=\"Nice and neat laundry room\"\n          />\n          Picture from{\" \"}\n          <a href=\"https://www.rd.com/wp-content/uploads/2021/09/GettyImages-1181334518-MLedit.jpg?resize=700,467\">\n            rd.com\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/* MICHAEL CHANG */\n\nimport { useNavigate } from \"react-router-dom\";\n\nfunction RedirectHome() {\n  const navigate = useNavigate();\n\n  function delayedRedirectHome() {\n    setTimeout(() => {\n      navigate(\"/\");\n    }, 3000);\n  }\n\n  delayedRedirectHome();\n\n  return (\n    <div>\n      <p>Thanks! Redirecting to Home....</p>\n    </div>\n  );\n}\n\nexport default RedirectHome;\n","export default __webpack_public_path__ + \"static/media/laundryUser.542ff844.jpg\";","export default __webpack_public_path__ + \"static/media/laundryProvider.941f55cc.jpg\";","// MICHAEL CHANG & DANIEL LISKO\n\nimport classes from \"./Card.module.css\";\n\nfunction Card(props) {\n  return <div className={classes.card}>{props.children}</div>;\n}\n\nexport default Card;\n","/* MICHAEL CHANG & DANIEL LISKO*/\n\nimport laundryUser from \"../images/laundryUser.jpg\";\nimport laundryProvider from \"../images/laundryProvider.jpg\";\n\nimport { Link } from \"react-router-dom\";\nimport Card from \"../components/ui/Card\";\n\nfunction SignUp() {\n  return (\n    <div>\n      <h1>Sign Up Page</h1>\n      <div className=\"row\">\n        <div className=\"col-6 d-flex justify-content-center\">\n          <Card>\n            <div className=\"d-flex justify-content-center\">\n              <h4>I am a laundry provider! I can wash!</h4>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n              <Link to=\"/signUpProviders\">\n                <strong>Providers Sign Up</strong>\n              </Link>\n            </div>\n            <div>\n              <img\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  objectFit: \"contain\",\n                }}\n                src={laundryProvider}\n                alt=\"Worker holding freshly cleaned towels at a laundry provider business\"\n              />\n              Picture from{\" \"}\n              <a href=\"https://boltlaundry.com/wp-content/uploads/2021/01/Commercial-Laundry-Service-In-Knoxville-TN.jpg\">\n                boltlaundry.com\n              </a>\n            </div>\n          </Card>\n        </div>\n        <div className=\"col-6 \">\n          <Card>\n            <div className=\"d-flex justify-content-center\">\n              <h4>I like my laundry clean and spotless!</h4>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n              <Link to=\"/signUpCustomers\">\n                <strong>Customers Sign Up</strong>\n              </Link>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n              <img\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  objectFit: \"contain\",\n                }}\n                src={laundryUser}\n                alt=\"Woman doing laundry with a smile\"\n              />\n            </div>\n            <div>\n              Picture from{\" \"}\n              <a href=\"https://www.wash.com/wp-content/uploads/2019/04/woman-doing-laundry.jpg\">\n                wash.com\n              </a>\n            </div>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n","//MICHAEL CHANG\n\nimport { useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Card from \"../ui/Card\";\nimport classes from \"./LoginForm.module.css\";\n\nimport { useContext } from \"react\";\nimport UserLoginContext from \"../../store/UserLoginContext\";\n\nfunction LoginForm(props) {\n  // initailize react hooks\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n\n  // onSubmit customer form handler\n  const loginSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    const loginEmail = emailRef.current.value;\n    const loginPassword = passwordRef.current.value;\n\n    const loginData = {\n      email: loginEmail,\n      password: loginPassword,\n    };\n\n    const response = await props.loginHandler(loginData);\n\n    // if the response is an error\n    if (response.error) {\n      setErrorMessage(response.error);\n    } else {\n      // set localStorage with customer info\n      localStorage.setItem(\"email\", response.email);\n      localStorage.setItem(\"userType\", response.userType);\n      localStorage.setItem(\"loginSuccess\", true);\n\n      const setData = async () => {\n        const userType = localStorage.getItem(\"userType\");\n        const email = localStorage.getItem(\"email\");\n        const credentials = { email: email, userType: userType };\n        userContext.setUserDetails(\n          await userContext.findUserDetails(credentials)\n        );\n        userContext.setLoginStatus(true);\n      };\n      setData();\n\n      //navigate to Customer Request page or Provider Service Page\n      if (response.userType === \"customer\") {\n        navigate(\"/CustomerRequestService\");\n      } else {\n        navigate(\"/ProviderPage\");\n      }\n    }\n  };\n\n  // form component\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={loginSubmitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">E-mail</label>\n          <input\n            type=\"email\"\n            placeholder=\"email@email.com\"\n            required\n            name=\"email\"\n            ref={emailRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            name=\"password\"\n            ref={passwordRef}\n          />\n        </div>\n        <div className={classes.error}>\n          <p>{errorMessage}</p>\n        </div>\n        <div className={classes.actions}>\n          <button>Login</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default LoginForm;\n","/* MICHAEL CHANG */\nimport PropTypes from \"prop-types\";\nimport LoginForm from \"../components/login/LoginForm\";\n\nfunction Login() {\n  async function loginHandler(data) {\n    const response = await fetch(\"/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    return await response.json();\n  }\n\n  return (\n    <div>\n      <h1>Login Page</h1>\n\n      <LoginForm loginHandler={loginHandler} />\n    </div>\n  );\n}\n\nLogin.propTypes = {\n  loginHandler: PropTypes.func,\n};\n\nexport default Login;\n","// DANIEL LISKO\n\nimport Card from \"../ui/Card\";\nimport \"./SignUpProvide.css\";\nimport { useState } from \"react\";\n\nconst SignUpProviderForm = ({ postProviderData }) => {\n  const [providerInfo, setProviderInfo] = useState({\n    userType: \"provider\",\n    companyName: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phoneNumber: \"\",\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    zipCode: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const handleChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setProviderInfo({ ...providerInfo, [name]: value });\n  };\n\n  //Hanle submit\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    postProviderData(providerInfo);\n  };\n\n  return (\n    <Card>\n      <form onSubmit={handleSubmit}>\n        <h2>Contact Info</h2>\n        <div className=\"fullLengthIn\">\n          <label htmlFor=\"companyName\">Company Name</label>\n          <input\n            type=\"text\"\n            name=\"companyName\"\n            id=\"companyName\"\n            placeholder=\"Enter Company Name\"\n            value={providerInfo.companyName}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <div className=\"inline\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input\n              type=\"text\"\n              name=\"firstName\"\n              value={providerInfo.firstName}\n              id=\"firstName\"\n              placeholder=\"Enter First Name\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"inline\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input\n              type=\"text\"\n              name=\"lastName\"\n              value={providerInfo.lastName}\n              id=\"lastName\"\n              placeholder=\"Enter Last Name\"\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n        <div>\n          <div className=\"inline\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter Email\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"inline\">\n            <label htmlFor=\"phoneNumber\">Phone</label>\n            <input\n              type=\"tel\"\n              name=\"phoneNumber\"\n              id=\"phoneNumber\"\n              pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n              placeholder=\"XXX-XXX-XXXX\"\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n        <h2>Address</h2>\n        <div>\n          <div className=\"fullLengthIn\">\n            <label htmlFor=\"address\">Address Line 1</label>\n            <input\n              name=\"address\"\n              id=\"address1\"\n              type=\"text\"\n              onChange={handleChange}\n            />\n          </div>\n\n          <div className=\"inline\">\n            <label htmlFor=\"city\">City</label>\n            <input name=\"city\" id=\"city\" type=\"text\" onChange={handleChange} />\n          </div>\n          <div className=\"inline\">\n            <label htmlFor=\"state\">State</label>\n            <input\n              name=\"state\"\n              id=\"state\"\n              type=\"text\"\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"zipCode\">Zip Code</label>\n          </div>\n          <input\n            name=\"zipCode\"\n            id=\"zipCode\"\n            type=\"number\"\n            onChange={handleChange}\n          />\n        </div>\n        <h2>Password</h2>\n\n        <div>\n          <div className=\"inline\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              name=\"password\"\n              id=\"password\"\n              type=\"password\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"inline\">\n            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n            <input\n              name=\"confirmPassword\"\n              id=\"confirmPassword\"\n              type=\"password\"\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n        <div className=\"flex-parent jc-center\">\n          <button type=\"submit\">Create Account</button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default SignUpProviderForm;\n","/* DANIEL LISKO */\n\nimport ProviderForm from \"../components/signups/SignUpProviderForm\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst SignUpProviders = () => {\n  let navigate = useNavigate();\n  const postProviderData = async (data) => {\n    delete data.confirmPassword;\n\n    fetch(\"api/createCustomer\", {\n      method: \"POST\", // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n    navigate(\"/\");\n  };\n\n  return (\n    <div>\n      <h1>Laundry Service Provider Sign Up</h1>\n      <ProviderForm postProviderData={postProviderData} />\n    </div>\n  );\n};\n\nexport default SignUpProviders;\n","// MICHAEL CHANG\n\nimport { useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Card from \"../ui/Card\";\nimport classes from \"./SignUpCustomerForm.module.css\";\n\nfunction SignUpCustomerForm(props) {\n  // state variables\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(\"\");\n  const [emailErrorMessage, setEmailErrorMessage] = useState(\"\");\n\n  // navigate variable\n  const navigate = useNavigate();\n\n  // reference varaibles\n  const firstNameRef = useRef();\n  const lastNameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const confirmPasswordRef = useRef();\n  const cityRef = useRef();\n  const zipCodeRef = useRef();\n  const stateRef = useRef();\n  const phoneNumberRef = useRef();\n\n  // onChange password && confirmPassword input handler\n  const passwordChangeHandler = async (event) => {\n    const password = passwordRef.current.value;\n    const confirmPassword = confirmPasswordRef.current.value;\n\n    if (password !== confirmPassword) {\n      setPasswordErrorMessage(\"Passwords do not match!\");\n    } else {\n      setPasswordErrorMessage(\"\");\n    }\n  };\n\n  // onChange email input handler\n  const emailChangeHandler = async (event) => {\n    const email = emailRef.current.value;\n\n    if (email.includes(\"@\") && email.includes(\".\")) {\n      const response = await props.findEmailFetch(email);\n\n      if (response === null || response === undefined) {\n        setEmailErrorMessage(\"\");\n      } else {\n        setEmailErrorMessage(\"Email already registered please login!\");\n      }\n    } else {\n      return;\n    }\n  };\n\n  // onSubmit customer form handler\n  const customerSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    const customerFirstName = firstNameRef.current.value;\n    const customerLastName = lastNameRef.current.value;\n    const customerEmail = emailRef.current.value;\n    const customerPassword = passwordRef.current.value;\n    const customerConfirmPassword = confirmPasswordRef.current.value;\n    const customerCity = cityRef.current.value;\n    const customerZipCode = zipCodeRef.current.value;\n    const customerState = stateRef.current.value;\n    const customerPhoneNumber = phoneNumberRef.current.value;\n\n    if (customerPassword !== customerConfirmPassword) {\n      setPasswordErrorMessage(\"Passwords do not match!\");\n      return;\n    } else {\n      setPasswordErrorMessage(\"\");\n      const customerData = {\n        firstName: customerFirstName,\n        lastName: customerLastName,\n        email: customerEmail,\n        city: customerCity,\n        zipCode: customerZipCode,\n        state: customerState,\n        phoneNumber: customerPhoneNumber,\n        password: customerPassword,\n        userType: \"customer\",\n      };\n\n      const response = await props.createCustomerFetch(customerData);\n\n      if (response) {\n        setEmailErrorMessage(\"\");\n        navigate(\"/redirectHome\");\n      } else {\n        setEmailErrorMessage(\"Email already registered please login!\");\n      }\n    }\n  };\n\n  // form component\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={customerSubmitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"firstname\">First Name</label>\n          <input\n            type=\"text\"\n            placeholder=\"First Name\"\n            required\n            name=\"firstname\"\n            ref={firstNameRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"lastname\">Last Name</label>\n          <input\n            type=\"text\"\n            placeholder=\"Last Name\"\n            required\n            name=\"lastname\"\n            ref={lastNameRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">E-mail</label>\n          <input\n            type=\"email\"\n            placeholder=\"email@email.com\"\n            required\n            name=\"email\"\n            ref={emailRef}\n            onChange={emailChangeHandler}\n          />\n        </div>\n        <div className={classes.error}>\n          <p>{emailErrorMessage}</p>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            name=\"password\"\n            ref={passwordRef}\n            onChange={passwordChangeHandler}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"confirmPassword\">Confirm Password</label>\n          <input\n            type=\"password\"\n            placeholder=\"Re-enter Password\"\n            required\n            name=\"confirmPassword\"\n            ref={confirmPasswordRef}\n            onChange={passwordChangeHandler}\n          />\n        </div>\n        <div className={classes.error}>\n          <p>{passwordErrorMessage}</p>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"city\">City</label>\n          <input\n            type=\"text\"\n            placeholder=\"City Name\"\n            required\n            name=\"city\"\n            ref={cityRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"zipCode\">Zip Code</label>\n          <input\n            type=\"text\"\n            pattern=\"[0-9]{5}\"\n            placeholder=\"Zip Code (eg. 12345)\"\n            required\n            name=\"zipCode\"\n            ref={zipCodeRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"state\">State</label>\n          <input\n            type=\"text\"\n            pattern=\"(A[KLRZ]|C[AOT]|D[CE]|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|PA|RI|S[CD]|T[NX]|UT|V[AT]|W[AIVY])\"\n            placeholder=\"State Abbreviation (eg. CA, NY, AZ, etc.)\"\n            required\n            name=\"state\"\n            ref={stateRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"phone\">Phone Number</label>\n          <input\n            type=\"tel\"\n            pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n            placeholder=\"123-456-7890\"\n            required\n            name=\"phone\"\n            ref={phoneNumberRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          <button>Create Account</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default SignUpCustomerForm;\n","/* MICHAEL CHANG */\n\nimport PropTypes from \"prop-types\";\nimport SignUpCustomerForm from \"../components/signups/SignUpCustomerForm\";\n\nfunction SignUpCustomers() {\n  async function createCustomerFetch(data) {\n    const response = await fetch(\"/api/createCustomer\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    return await response.json();\n  }\n\n  async function findEmailFetch(data) {\n    const response = await fetch(\"/api/findEmailExists\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"text/plain\",\n      },\n      body: data,\n    });\n    return await response.json();\n  }\n  return (\n    <div>\n      <h1>Customers Sign Up Page</h1>\n      <SignUpCustomerForm\n        createCustomerFetch={createCustomerFetch}\n        findEmailFetch={findEmailFetch}\n      />\n    </div>\n  );\n}\n\nSignUpCustomers.propTypes = {\n  createCustomerFetch: PropTypes.func,\n  findEmailFetch: PropTypes.func,\n\n};\n\nexport default SignUpCustomers;\n","// MICHAEL CHANG & DANIEL LISKO\n\nimport { Link, useNavigate } from \"react-router-dom\";\nimport classes from \"./MainNavigation.module.css\";\n\nimport { useContext } from \"react\";\nimport UserLoginContext from \"../../store/UserLoginContext\";\n\nfunction MainNavigation() {\n  const navigate = useNavigate();\n\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n\n  // reset states for logout and clear localStorage\n  const logoutHandler = (event) => {\n    localStorage.clear();\n    userContext.setLoginStatus(false);\n    navigate(\"/\");\n  };\n\n  let linksRender = [];\n\n  const logoutLink = () => {\n    return (\n      <li key=\"logout\">\n        <button\n          className={classes.logout}\n          onClick={logoutHandler}\n          type=\"button\"\n        >\n          Log out\n        </button>\n      </li>\n    );\n  };\n\n  // if loginSuccess state is true replace Login Link to Customer/Provider Detail Page Link\n  // !== undefined IS A HACK...REFER TO APP.js FETCH RUNS 2 times\n\n  if (userContext.userDetails && userContext.loginStatus) {\n    if (userContext.userDetails.userType === \"customer\") {\n      linksRender.push(\n        <li key=\"customerRequestService\">\n          <Link to=\"/CustomerRequestService\">Request Laundry</Link>\n        </li>\n      );\n      linksRender.push(\n        <li key=\"customerDetailsPage\">\n          <Link to=\"/CustomerDetailsPage\">{`${userContext.userDetails.firstName} ${userContext.userDetails.lastName}`}</Link>\n        </li>\n      );\n    } else {\n      linksRender.push(\n        <li key=\"providerPage\">\n          <Link to=\"/ProviderPage\">{`${userContext.userDetails.companyName}`}</Link>\n        </li>\n      );\n      linksRender.push(\n        <li key=\"providerDetailsPage\">\n          <Link to=\"/ProviderDetailsPage\">{`${userContext.userDetails.firstName} ${userContext.userDetails.lastName}`}</Link>\n        </li>\n      );\n    }\n    linksRender.push(logoutLink());\n\n    // else set default navigation bar\n  } else {\n    linksRender.push(\n      <li key=\"login\">\n        <Link to=\"/Login\">Login</Link>\n      </li>\n    );\n  }\n\n  // MainNavgiation component\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>Hamper Dash</div>\n      </Link>\n      <nav>\n        <ul>\n          <li key=\"home\">\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li key=\"signup\">\n            <Link to=\"/SignUp\">Sign Up</Link>\n          </li>\n          {linksRender}\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default MainNavigation;\n","// MICHAEL CHANG & DANIEL LISKO\n\nimport MainNavigation from \"./MainNavigation\";\nimport classes from \"./Layout.module.css\";\n\nfunction Layout(props) {\n  return (\n    <div>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </div>\n  );\n}\n\nexport default Layout;\n","/* MICHAEL CHANG */\nimport Card from \"../../ui/Card\";\n\nimport { useContext } from \"react\";\nimport UserLoginContext from \"../../../store/UserLoginContext\";\n\nlet allCustomerRequests = [];\n\nconst currencyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n});\n\nfunction CustomerLaundryRequestDetails() {\n  // array for card render\n  let customerRequestsRender = [];\n\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n  const customerEmail = { customerEmail: userContext.userDetails.email };\n\n  // fetch requests from DB\n  const allCustomerLaundryRequestsFetch = async (data) => {\n    const response = await fetch(\"/api/allCustomerLaundryRequest\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    allCustomerRequests = await response.json();\n  };\n\n  // this should be AWAITed....\n  allCustomerLaundryRequestsFetch(customerEmail);\n  console.log(allCustomerRequests);\n  // sort the cards from latest to earliest\n  allCustomerRequests.sort((a, b) => Date.parse(b.date) - Date.parse(a.date));\n\n  allCustomerRequests.forEach((request) => {\n    customerRequestsRender.push([\n      <div className=\"mt-2\">\n        <Card>\n          <h3 className=\"d-flex justify-content-center\">\n            {request.providerEmail}\n          </h3>\n          <div className=\"row\">\n            <span className=\"col-6\">\n              <strong>Date: </strong> {request.date}\n            </span>\n            <span className=\"col-6\">\n              <strong>Provider Accepted: </strong>{\" \"}\n              {request.providerAccepted.toString()}\n            </span>\n            <span className=\"col-6\">\n              <strong>Job Completed: </strong>{\" \"}\n              {request.serviceComplete.toString()}\n            </span>\n            <span className=\"col-6\">\n              <strong>Total Cost: </strong>\n              {currencyFormatter.format(request.totalCost)}\n            </span>\n          </div>\n        </Card>\n      </div>,\n    ]);\n  });\n\n  // form component\n  return <div>{customerRequestsRender}</div>;\n}\n\nexport default CustomerLaundryRequestDetails;\n","/* MICHAEL CHANG */\n\nimport Card from \"../../ui/Card\";\nimport classes from \"./CustomerDetailsForm.module.css\";\nimport { useState, useRef } from \"react\";\nimport { useContext } from \"react\";\nimport UserLoginContext from \"../../../store/UserLoginContext\";\nimport CustomerLaundryRequestDetails from \"./CustomerLaundryRequestDetails\";\n\nfunction CustomerDetailsForm() {\n  const [formEdit, setFormEdit] = useState(true);\n  const [buttonText, setButtonText] = useState(\"Edit\");\n  const firstNameRef = useRef();\n  const lastNameRef = useRef();\n  const cityRef = useRef();\n  const zipCodeRef = useRef();\n  const stateRef = useRef();\n  const phoneNumberRef = useRef();\n\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n\n  // fetch to update userDetails in DB\n  const updateUserDetailsFetch = async (data) => {\n    await fetch(\"/api/updateUserDetails\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  };\n\n  const buttonClickHandler = (event) => {\n    event.preventDefault();\n\n    const customerFirstName = firstNameRef.current.value;\n    const customerLastName = lastNameRef.current.value;\n    const customerCity = cityRef.current.value;\n    const customerZipCode = zipCodeRef.current.value;\n    const customerState = stateRef.current.value;\n    const customerPhoneNumber = phoneNumberRef.current.value;\n\n    if (!formEdit && buttonText === \"Save\") {\n      const customerDataChanged = {\n        firstName: customerFirstName,\n        lastName: customerLastName,\n        city: customerCity,\n        zipCode: customerZipCode,\n        state: customerState,\n        phoneNumber: customerPhoneNumber,\n        email: userContext.userDetails.email,\n        userType: userContext.userDetails.userType,\n      };\n\n      updateUserDetailsFetch(customerDataChanged);\n      userContext.setUserDetails({\n        ...userContext.userDetails,\n        ...customerDataChanged,\n      });\n    }\n\n    if (formEdit) {\n      setFormEdit(false);\n      setButtonText(\"Save\");\n    } else {\n      setFormEdit(true);\n      setButtonText(\"Edit\");\n    }\n  };\n\n  // form component\n  return (\n    <div className=\"row\">\n      <div className=\"col-6\">\n        <Card>\n          <form className={classes.form} onSubmit={buttonClickHandler}>\n            <div className={classes.control}>\n              <label htmlFor=\"firstname\">First Name</label>\n              <input\n                type=\"text\"\n                placeholder=\"First Name\"\n                required\n                name=\"firstname\"\n                defaultValue={userContext.userDetails.firstName}\n                disabled={formEdit}\n                ref={firstNameRef}\n              />\n            </div>\n            <div className={classes.control}>\n              <label htmlFor=\"lastname\">Last Name</label>\n              <input\n                type=\"text\"\n                placeholder=\"Last Name\"\n                required\n                name=\"lastname\"\n                defaultValue={userContext.userDetails.lastName}\n                disabled={formEdit}\n                ref={lastNameRef}\n              />\n            </div>\n            <div className={classes.control}>\n              <label htmlFor=\"city\">City</label>\n              <input\n                type=\"text\"\n                placeholder=\"City Name\"\n                required\n                name=\"city\"\n                defaultValue={userContext.userDetails.city}\n                disabled={formEdit}\n                ref={cityRef}\n              />\n            </div>\n            <div className={classes.control}>\n              <label htmlFor=\"zipCode\">Zip Code</label>\n              <input\n                type=\"text\"\n                pattern=\"[0-9]{5}\"\n                placeholder=\"Zip Code (eg. 12345)\"\n                required\n                name=\"zipCode\"\n                defaultValue={userContext.userDetails.zipCode}\n                disabled={formEdit}\n                ref={zipCodeRef}\n              />\n            </div>\n            <div className={classes.control}>\n              <label htmlFor=\"state\">State</label>\n              <input\n                type=\"text\"\n                pattern=\"(A[KLRZ]|C[AOT]|D[CE]|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|PA|RI|S[CD]|T[NX]|UT|V[AT]|W[AIVY])\"\n                placeholder=\"State Abbreviation (eg. CA, NY, AZ, etc.)\"\n                required\n                name=\"state\"\n                defaultValue={userContext.userDetails.state}\n                disabled={formEdit}\n                ref={stateRef}\n              />\n            </div>\n            <div className={classes.control}>\n              <label htmlFor=\"phone\">Phone Number</label>\n              <input\n                type=\"tel\"\n                pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n                placeholder=\"123-456-7890\"\n                required\n                name=\"phone\"\n                defaultValue={userContext.userDetails.phoneNumber}\n                disabled={formEdit}\n                ref={phoneNumberRef}\n              />\n            </div>\n            <div className={classes.actions}>\n              <button>{buttonText}</button>\n            </div>\n          </form>\n        </Card>\n      </div>\n      <div className=\"col-6\">\n        <h5>\n          {userContext.userDetails.firstName} {userContext.userDetails.lastName}{\" \"}\n          Laundry Requests\n        </h5>\n        <CustomerLaundryRequestDetails />\n      </div>\n    </div>\n  );\n}\n\nexport default CustomerDetailsForm;\n","// MICHAEL CHANG\n\nimport CustomerDetailsForm from \"../components/customer/customerDetailsAndRequests/CustomerDetailsForm\";\nimport { useContext } from \"react\";\nimport UserLoginContext from \"../store/UserLoginContext\";\n\nfunction CustomerDetailsPage() {\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n\n  if (userContext.userDetails !== undefined) {\n    return (\n      <div>\n        <h1>{`${userContext.userDetails.firstName} ${userContext.userDetails.lastName}`}</h1>\n        <div>\n          <CustomerDetailsForm />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h1>Customer Details Page</h1>\n    </div>\n  );\n}\n\nexport default CustomerDetailsPage;\n","// MICHAEL CHANG\n\nimport { useRef, useState } from \"react\";\n\nimport Card from \"../../ui/Card\";\nimport classes from \"./LaundryRequestForm.module.css\";\n\nfunction LaundryRequestForm(props) {\n  // initailize react hooks\n  const poundsOfLaundryRef = useRef();\n  const foldRef = useRef();\n  const poundsOfDryCleanRef = useRef();\n  const deliveryRef = useRef();\n  const dateRef = useRef();\n\n  const [dateErrorMessage, setDateErrorMesssage] = useState();\n  const [dryCleanForm, setDryCleanForm] = useState(false);\n  const [washForm, setWashForm] = useState(false);\n\n  // onSubmit customer form handler\n  async function laundryRequestHandler(event) {\n    event.preventDefault();\n\n    const poundsOfLaundry = poundsOfLaundryRef.current.value;\n    const fold = foldRef.current.checked;\n    const poundsOfDryClean = poundsOfDryCleanRef.current.value;\n    const delivery = deliveryRef.current.checked;\n    const date = dateRef.current.value;\n\n    const today = new Date();\n    if (date < today.toLocaleDateString()) {\n      setDateErrorMesssage(\"Date can not be in the past\");\n      return;\n    } else {\n      setDateErrorMesssage();\n    }\n\n    const laundryRequestData = {\n      wash: poundsOfLaundry,\n      dryClean: poundsOfDryClean,\n      fold: fold,\n      delivery: delivery,\n      date: date,\n    };\n\n    await props.laundryRequestFetch(laundryRequestData);\n  }\n\n  // define functions to pass down as props\n  function setDryCleanFormFunc() {\n    setDryCleanForm(!dryCleanForm);\n  }\n\n  function setWashFormFunc() {\n    setWashForm(!washForm);\n  }\n\n  function showWashForm() {\n    if (washForm) {\n      return (\n        <div className={classes.textControl}>\n          <label htmlFor=\"poundsOfLaundry\">\n            Estimated Pounds of Laundry for Wash\n          </label>\n          <input\n            type=\"number\"\n            placeholder=\"Estimated pounds\"\n            required\n            name=\"poundsOfLaundry\"\n            ref={poundsOfLaundryRef}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <input\n          type=\"hidden\"\n          value=\"\"\n          name=\"poundsOfLaundry\"\n          ref={poundsOfLaundryRef}\n        />\n      );\n    }\n  }\n\n  function showDryCleanForm() {\n    if (dryCleanForm) {\n      return (\n        <div className={classes.textControl}>\n          <label htmlFor=\"poundsOfDryClean\">\n            Estimated Pounds of Laundry for Dry Clean\n          </label>\n          <input\n            type=\"number\"\n            placeholder=\"Estimated pounds\"\n            required\n            name=\"poundsOfDryClean\"\n            ref={poundsOfDryCleanRef}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <input\n          type=\"hidden\"\n          value=\"\"\n          name=\"poundsOfDryClean\"\n          ref={poundsOfDryCleanRef}\n        />\n      );\n    }\n  }\n\n  function showSortOptions() {\n    if (props.providerCards.length > 0) {\n      return (\n        <div className={classes.checkBoxControl}>\n          <div>Sort By:</div>\n          <input\n            type=\"radio\"\n            id=\"priceLowHigh\"\n            name=\"sort\"\n            onChange={props.setSortPriceLowHighFunc}\n          />\n          <label htmlFor=\"priceAsc\">Price Low-High</label>\n          <input\n            type=\"radio\"\n            id=\"priceHighLow\"\n            name=\"sort\"\n            onChange={props.setSortPriceHighLowFunc}\n          />\n          <label htmlFor=\"priceDesc\">Price High-Low</label>\n          <input\n            type=\"radio\"\n            id=\"distance\"\n            name=\"sort\"\n            onChange={props.setSortDistanceFunc}\n          />\n          <label htmlFor=\"distance\">Distance</label>\n        </div>\n      );\n    } else {\n      return;\n    }\n  }\n\n  // form component\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={laundryRequestHandler}>\n        <div className={classes.checkBoxControl}>\n          <label htmlFor=\"wash\">Need Laundry Wash (per lbs.)?</label>\n          <input type=\"checkbox\" name=\"wash\" onChange={setWashFormFunc} />\n        </div>\n        {showWashForm()}\n        <div className={classes.checkBoxControl}>\n          <label htmlFor=\"dryClean\">Need Dry Clean? (per lbs.)</label>\n          <input\n            type=\"checkbox\"\n            name=\"dryClean\"\n            onChange={setDryCleanFormFunc}\n          />\n        </div>\n        {showDryCleanForm()}\n        <span className={classes.checkBoxControl}>\n          <label htmlFor=\"fold\">Folded</label>\n          <input type=\"checkbox\" name=\"fold\" ref={foldRef} />\n        </span>\n\n        <span className={classes.checkBoxControl}>\n          <label htmlFor=\"delivery\">Delivered</label>\n          <input type=\"checkbox\" name=\"delivery\" ref={deliveryRef} />\n        </span>\n        <div className={classes.textControl}>\n          <label htmlFor=\"date\">Date</label>\n          <input\n            type=\"text\"\n            required\n            placeholder=\"eg. 01/31/2021\"\n            name=\"date\"\n            ref={dateRef}\n          />\n        </div>\n        <div className={classes.error}>\n          <p>{dateErrorMessage}</p>\n        </div>\n        <div className={classes.actions}>\n          <button>Ready to Wash!</button>\n        </div>\n        {showSortOptions()}\n      </form>\n    </Card>\n  );\n}\n\nexport default LaundryRequestForm;\n","// MICHAEL CHANG\nimport classes from \"./LaundryCustomerConfirm.module.css\";\nimport { useState } from \"react\";\n\nfunction LaundryCustomerConfirm(props) {\n\n  // data fetch\n  const laundryCustomerConfirmFetch = async (data) => {\n    await fetch(\"/api/laundryCustomerConfirm\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  };\n\n  // submit handler\n  const laundryCustomerConfirmSubmitHandler = async (event) => {\n    event.preventDefault();\n    laundryCustomerConfirmFetch(requestObject);\n    setButtonText(\"Pending\");\n  };\n\n  const [buttonText, setButtonText] = useState(\"Choose Provider!\");\n\n  let washPrice;\n  let poundsRequestedWash;\n  let dryCleanPrice;\n  let poundsRequesteddryClean;\n  let deliveryPrice;\n  let foldPrice;\n\n  let requestObject = {};\n  let servicesRequestedObject = {};\n\n  if (props.servicesRequested.wash !== \"\") {\n    washPrice = props.provider.serviceObjects.wash.price;\n    poundsRequestedWash = parseFloat(props.servicesRequested.wash);\n    servicesRequestedObject[\"wash\"] = {\n      price: washPrice,\n      perPound: true,\n      poundsRequested: poundsRequestedWash,\n    };\n  }\n\n  if (props.servicesRequested.dryClean !== \"\") {\n    dryCleanPrice = props.provider.serviceObjects.dryClean.price;\n    poundsRequesteddryClean = parseFloat(props.servicesRequested.dryClean);\n    servicesRequestedObject[\"dryClean\"] = {\n      price: dryCleanPrice,\n      perPound: true,\n      poundsRequested: poundsRequesteddryClean,\n    };\n  }\n\n  if (props.servicesRequested.delivery) {\n    deliveryPrice = props.provider.serviceObjects.delivery.price;\n    servicesRequestedObject[\"delivery\"] = {\n      price: deliveryPrice,\n      perPound: false,\n    };\n  }\n\n  if (props.servicesRequested.fold) {\n    foldPrice = props.provider.serviceObjects.fold.price;\n    servicesRequestedObject[\"fold\"] = {\n      price: foldPrice,\n      perPound: false,\n    };\n  }\n\n  requestObject[\"servicesRequested\"] = servicesRequestedObject;\n  requestObject[\"totalCost\"] = props.totalCost;\n  requestObject[\"serviceComplete\"] = false;\n  requestObject[\"date\"] = props.servicesRequested.date;\n  requestObject[\"providerAccepted\"] = false;\n  requestObject[\"customerEmail\"] = props.customer.email;\n  requestObject[\"providerEmail\"] = props.provider.email;\n\n  // form component\n  return (\n    <div className=\"d-flex justify-content-end\">\n      <form\n        className={classes.actions}\n        onSubmit={laundryCustomerConfirmSubmitHandler}\n      >\n        <button>{buttonText}</button>\n      </form>\n    </div>\n  );\n}\n\nexport default LaundryCustomerConfirm;\n","/* MICHAEL CHANG */\n\nimport PropTypes from \"prop-types\";\nimport LaundryRequestForm from \"../components/customer/newLaundryRequests/LaundryRequestForm\";\nimport LaundryCustomerConfirm from \"../components/customer/newLaundryRequests/LaundryCustomerConfirm\";\nimport { useState, useContext } from \"react\";\nimport UserLoginContext from \"../store/UserLoginContext\";\nimport Card from \"../components/ui/Card\";\n\nconst currencyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n});\n\nlet availableProviders = [];\nlet servicesRequested = {};\n\nfunction CustomerRequestService() {\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n\n  let providerCardRender = [];\n  let providerCards = [];\n\n  const [gotProivders, setGotProivders] = useState();\n  const [sortPriceLowHigh, setSortPriceLowHigh] = useState(false);\n  const [sortPriceHighLow, setSortPriceHighLow] = useState(false);\n  const [sortDistance, setSortDistance] = useState(false);\n\n  // set booleans for which sort is selected\n  function setSortPriceLowHighFunc() {\n    setSortPriceLowHigh(true);\n    setSortPriceHighLow(false);\n    setSortDistance(false);\n  }\n\n  function setSortPriceHighLowFunc() {\n    setSortPriceLowHigh(false);\n    setSortPriceHighLow(true);\n    setSortDistance(false);\n  }\n\n  function setSortDistanceFunc() {\n    setSortPriceLowHigh(false);\n    setSortPriceHighLow(false);\n    setSortDistance(true);\n  }\n\n  const laundryRequestFetch = async (data) => {\n    const response = await fetch(\"/api/laundryRequest\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    availableProviders = await response.json();\n    servicesRequested = data;\n\n    //I'm just setting true false back and forth for component to re-render\n    setGotProivders(!gotProivders);\n  };\n\n  // loop through the providers returned from backend\n  availableProviders.forEach((provider) => {\n    // calculate each costs\n    const laundryCost = servicesRequested.wash\n      ? provider.serviceObjects.wash.price * servicesRequested.wash\n      : 0;\n    const dryCleanCost = servicesRequested.dryClean\n      ? provider.serviceObjects.dryClean.price * servicesRequested.dryClean\n      : 0;\n    const foldingCost = servicesRequested.fold\n      ? provider.serviceObjects.fold.price\n      : 0;\n    const deliveryCost = servicesRequested.delivery\n      ? provider.serviceObjects.delivery.price\n      : 0;\n    const totalCost = laundryCost + dryCleanCost + foldingCost + deliveryCost;\n\n    // console.log(provider, \"THIS IS THE PROVIDER\");\n    // console.log(userContext.userDetails, \"THIS IS THE USER\");\n    // console.log(servicesRequested);\n\n    // push into providerCards array\n    providerCards.push([\n      <div className=\"mt-2\">\n        <Card>\n          <div className=\"row p-4\">\n            <h3 className=\"d-flex justify-content-center\">\n              {provider.companyName}\n            </h3>\n            <div className=\"row\">\n              <span className=\"col-12\">\n                <strong>Date: </strong> {servicesRequested.date}\n              </span>\n            </div>\n            <div className=\"row\">\n              <span className=\"col-6\">\n                <strong>Email: </strong> {provider.email}\n              </span>\n              <span className=\"col-6\">\n                <strong>Phone Number: </strong> {provider.phoneNumber}\n              </span>\n              <span className=\"col-6\">\n                <strong>Address: </strong> {provider.address}\n              </span>\n              <span className=\"col-6\">\n                <strong>City: </strong> {provider.city}\n              </span>\n              <span className=\"col-6\">\n                <strong>State: </strong> {provider.state}\n              </span>\n              <span className=\"col-6\">\n                <strong>Zip Code: </strong> {provider.zipCode}\n              </span>\n            </div>\n            <div className=\"row\">\n              <span className=\"col-6\">\n                <strong>Laundry Cost: </strong>\n                {currencyFormatter.format(laundryCost)}\n              </span>\n              <span className=\"col-6\">\n                <strong>Dry Cleaning Cost: </strong>\n                {currencyFormatter.format(dryCleanCost)}\n              </span>\n              <span className=\"col-6\">\n                <strong>Cost for Folding: </strong>\n                {currencyFormatter.format(foldingCost)}\n              </span>\n              <span className=\"col-6\">\n                <strong>Cost for Delivery: </strong>\n                {currencyFormatter.format(deliveryCost)}\n              </span>\n            </div>\n            <div className=\"row\">\n              <span className=\"d-flex justify-content-end\">\n                <strong>\n                  Total Costs:\n                  {currencyFormatter.format(totalCost)}\n                </strong>\n              </span>\n            </div>\n          </div>\n          <LaundryCustomerConfirm\n            provider={provider}\n            customer={userContext.userDetails}\n            servicesRequested={servicesRequested}\n            totalCost={totalCost}\n          />\n        </Card>\n      </div>,\n      servicesRequested.date,\n      totalCost,\n      provider.zipCode,\n    ]);\n  });\n\n  if (sortPriceLowHigh) {\n    providerCards.sort((a, b) => a[2] - b[2]);\n  } else if (sortPriceHighLow) {\n    providerCards.sort((a, b) => b[2] - a[2]);\n  } else if (sortDistance) {\n    //assuming min(zipCode difference means closer by distance)\n    // 91754 - 91753 is closer than 91754 - 91640\n    providerCards.sort(\n      (a, b) =>\n        Math.abs(a[3] - userContext.userDetails.zipCode) -\n        Math.abs(b[3] - userContext.userDetails.zipCode)\n    );\n  }\n\n  //providerCards - [0] is provider Object [1] is date [2] is cost [3] is zipCode\n  // push cards[0] into an array to render in the react component\n  providerCards.forEach((card) => {\n    providerCardRender.push(card[0]);\n  });\n\n  function showCards() {\n    if (providerCardRender.length > 0) {\n      return providerCardRender;\n    } else {\n      return (\n        <h2 className=\"d-flex h-100 align-items-center justify-content-center\">\n          Go have fun! Let us do the chores! Request Today!!\n        </h2>\n      );\n    }\n  }\n\n  return (\n    <div>\n      <h1>Request Laundry Service</h1>\n      <div className=\"row\">\n        <div className=\"col-4\">\n          <LaundryRequestForm\n            laundryRequestFetch={laundryRequestFetch}\n            providerCards={providerCards}\n            setSortPriceLowHighFunc={setSortPriceLowHighFunc}\n            setSortPriceHighLowFunc={setSortPriceHighLowFunc}\n            setSortDistanceFunc={setSortDistanceFunc}\n          />\n        </div>\n        <div className=\"col-8\">{showCards()}</div>\n      </div>\n    </div>\n  );\n}\n\nCustomerRequestService.propTypes = {\n  laundryRequestFetch: PropTypes.func,\n  setSortPriceLowHighFunc: PropTypes.func,\n  setSortPriceHighLowFunc: PropTypes.func,\n  setSortDistanceFunc: PropTypes.func,\n  providerCards: PropTypes.array,\n  provider: PropTypes.object,\n  customer: PropTypes.object,\n  servicesRequested: PropTypes.object,\n  totalCost: PropTypes.number,\n};\n\nexport default CustomerRequestService;\n","// DANIEL LISKO\n\nimport { useState, useEffect } from \"react\";\n\nconst EditService = ({\n  serviceItem,\n  modifyServiceDisplay,\n  onServiceEdit,\n  deleteService,\n  submitEdit,\n  services,\n}) => {\n  //Set up default service Options\n  let [serviceOptions, setServiceOptions] = useState(new Set());\n\n  //This will render every time we open create or decide to edit a service.\n  useEffect(() => {\n    let serviceOpt = new Set([\"Wash\", \"Dry Clean\", \"Fold\", \"Delivery\"]);\n\n    //Remove services that we're already submitted to the database.\n    updateServices(serviceOpt);\n    console.log(\"SERVICES\", serviceOpt);\n    setServiceOptions(serviceOpt);\n  }, []);\n\n  const updateServices = (serivceOpt) => {\n    services.forEach((service) => {\n      if (serivceOpt.has(service.service)) {\n        serivceOpt.delete(service.service);\n      }\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    //Prevents user from submitting the default display.\n    if (serviceItem.service === \"\") {\n      return;\n    }\n    modifyServiceDisplay(serviceItem.serviceID, \"showEdit\");\n    console.log(\"SUBMIT\", serviceItem);\n    serviceItem.showEdit = false;\n    submitEdit(serviceItem);\n  };\n\n  const handleInputChange = (e) => {\n    const target = e.target;\n    let value;\n\n    if (target.name === \"perPound\") {\n      if (target.value === \"true\") {\n        value = false;\n      } else {\n        value = true;\n      }\n    } else {\n      value = target.value;\n    }\n\n    onServiceEdit(serviceItem.serviceID, target.name, value);\n  };\n\n  const handleOnDelete = () => {\n    deleteService(serviceItem.serviceID);\n    modifyServiceDisplay(serviceItem.serviceID, \"showEdit\");\n  };\n\n  //Used to render options from dropdown service\n  const renderOptions = () => {\n    let options = new Set();\n    //Filter options that are already being useing\n\n    options.add(\n      <option value=\"\" disabled selected>\n        Select a service\n      </option>\n    );\n    serviceOptions.forEach((serviceOpt) => {\n      options.add(<option value={serviceOpt}>{serviceOpt}</option>);\n    });\n\n    return options;\n  };\n\n  const renderPerPoundBox = () => {\n    let output;\n    if (serviceItem.service === \"Dry Clean\" || serviceItem.service === \"Wash\") {\n      //Checks return if service item IS charging per pound\n      output = serviceItem.perPound ? (\n        <div className=\"form-check form-switch\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"perPound\"\n            id={\n              serviceItem.perPound\n                ? \"flexSwitchCheckChecked\"\n                : \"flexSwitchCheckDefault\"\n            }\n            value={serviceItem.perPound}\n            onChange={handleInputChange}\n            checked\n          />\n          <label\n            className=\"form-check-label\"\n            htmlFor={\n              serviceItem.perPound\n                ? \"flexSwitchCheckChecked\"\n                : \"flexSwitchCheckDefault\"\n            }\n          >\n            Charge per Pound?\n          </label>\n        </div>\n      ) : (\n        //Checks return if service item isn't charging per pound\n        <div className=\"form-check form-switch\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"perPound\"\n            id={\n              serviceItem.perPound\n                ? \"flexSwitchCheckChecked\"\n                : \"flexSwitchCheckDefault\"\n            }\n            value={serviceItem.perPound}\n            onChange={handleInputChange}\n          />\n          <label\n            className=\"form-check-label\"\n            htmlFor={\n              serviceItem.perPound\n                ? \"flexSwitchCheckChecked\"\n                : \"flexSwitchCheckDefault\"\n            }\n          >\n            Charge per Pound?\n          </label>\n        </div>\n      );\n    }\n    return output;\n  };\n\n  //-------------------To Render the Page--------\n\n  return (\n    <form key={serviceItem.serviceID} className=\"service\" onSubmit={onSubmit}>\n      <div>\n        <label htmlFor=\"service\">\n          <span>Select Service:</span>\n        </label>\n        <select\n          name=\"service\"\n          onChange={handleInputChange}\n          value={serviceItem.service}\n        >\n          {renderOptions()}\n        </select>\n        <div className=\"d-flex justify-content-center\">\n          {renderPerPoundBox()}\n        </div>\n      </div>\n      <div>\n        <label htmlFor=\"\">Fee:</label>\n        <input\n          type=\"number\"\n          step=\"0.01\"\n          min=\"0\"\n          max=\"100\"\n          name=\"price\"\n          placeholder={serviceItem.price}\n          onChange={handleInputChange}\n        />\n      </div>\n      <div className=\"col-12 d-flex justify-content-center\">\n        <button type=\"submit\" value=\"Save\" className=\"editBtn\">\n          Save\n        </button>\n        <button className=\"deleteBtn\" onClick={handleOnDelete}>\n          Delete\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default EditService;\n","// DANIEL LISKO\n\nconst Button = ({ serviceItem, modifyServiceDisplay, id }) => {\n  const handleClick = (e) => {\n    modifyServiceDisplay(serviceItem.serviceID, \"showDetails\");\n  };\n\n  return (\n    <span className=\"col-4 d-flex justify-content-center align-items-center\">\n      {serviceItem.showDetails ? (\n        <button id={id} onClick={handleClick} className=\"collapseBtn\">\n          &#8722;\n        </button>\n      ) : (\n        <button id={id} onClick={handleClick} className=\"collapseBtn\">\n          &#43;\n        </button>\n      )}\n    </span>\n  );\n};\n\nexport default Button;\n","// DANIEL LISKO\n\nimport Button from \"./Button.js\";\n\nconst Service = ({\n  serviceItem,\n  modifyServiceDisplay,\n  id,\n  deleteService,\n  setServices,\n}) => {\n  // handle edit button\n  const onEditClick = () => {\n    modifyServiceDisplay(serviceItem.serviceID, \"showEdit\");\n  };\n\n  const handleOnDelete = () => {\n    deleteService(serviceItem.serviceID);\n    modifyServiceDisplay(serviceItem.serviceID, \"showEdit\");\n  };\n\n  // //Details to display\n  const details = (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-7 pl-0\">\n          <h6>\n            Cost: $<span>{serviceItem.price}</span>\n          </h6>\n        </div>\n        <div className=\"col-5 d-flex justify-content-end\">\n          {serviceItem.perPound && <h6>Per lb.</h6>}\n        </div>\n      </div>\n      <div className=\"row \">\n        <div className=\"col-12 d-flex justify-content-center\">\n          <button className=\"editBtn\" onClick={onEditClick}>\n            Edit\n          </button>\n          <button className=\"deleteBtn\" onClick={handleOnDelete}>\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div key={serviceItem.serviceID} className=\"service row\">\n      <h5 className=\"serviceTitle col-8 pb-0\">\n        <span>{serviceItem.service}</span>\n      </h5>\n      <Button\n        serviceItem={serviceItem}\n        modifyServiceDisplay={modifyServiceDisplay}\n        id={id}\n      />\n      {serviceItem.showDetails && details}\n    </div>\n  );\n};\n\nexport default Service;\n","// DANIEL LISKO\n\nimport EditService from \"./EditService.js\";\nimport \"./providerPage.css\";\nimport Service from \"./Service\";\n// import { useState } from \"react\";\n\nconst Services = ({\n  services,\n  setServices,\n  modifyServiceDisplay,\n  onServiceEdit,\n}) => {\n  //Used to delete a service\n  const deleteService = (id) => {\n    services.forEach((s, i) => {\n      if (s.serviceID === id) {\n        services.splice(i, 1);\n      }\n      postService(services);\n    });\n\n    //Need to reset indexes or else keys will be off.\n    let updated = services.map((service, index) => {\n      return (service.serviceID = index);\n    });\n\n    setServices(updated);\n  };\n\n  const addService = () => {\n    console.log(\"ID =>\", services.length);\n    const newService = {\n      service: \"\",\n      price: 0.0,\n      perPound: false,\n      serviceID: services.length,\n      showDetails: false,\n      showEdit: true,\n    };\n    setServices([...services, newService]);\n  };\n\n  const submitEdit = async (service) => {\n    await postService([...services, service]);\n  };\n\n  const postService = async (services) => {\n    console.log(\"Posting\", services);\n    const res = await fetch(\"/api/updateServices\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email: localStorage.email, services: services }),\n    });\n  };\n\n  const renderServices = services.map((s, i) => {\n    if (s.showEdit) {\n      return (\n        <EditService\n          key={s.serviceID}\n          services={services}\n          serviceItem={s}\n          modifyServiceDisplay={modifyServiceDisplay}\n          onServiceEdit={onServiceEdit}\n          deleteService={deleteService}\n          submitEdit={submitEdit}\n        />\n      );\n    }\n\n    return (\n      <Service\n        key={s.serviceID}\n        id={i}\n        serviceItem={s}\n        modifyServiceDisplay={modifyServiceDisplay}\n        deleteService={deleteService}\n      />\n    );\n  });\n\n  return (\n    <div>\n      {renderServices}\n      <div>\n        <small> Services Remaining: {4 - services.length}</small>{\" \"}\n      </div>\n      <div className=\"d-flex justify-content-center\">\n        {services.length < 4 && (\n          <button onClick={addService}>Add Service</button>\n        )}{\" \"}\n      </div>\n    </div>\n  );\n};\n\nexport default Services;\n","// DANIEL LISKO\n\nimport { useState, useEffect } from \"react\";\nimport Services from \"../components/provider/Services.js\";\n\nconst ProviderPage = () => {\n  let [services, setServices] = useState([]);\n\n  //Changes the displays to either being visibile or not visibile\n  const modifyServiceDisplay = (id, toModify) => {\n    let updated = services.map((service) => {\n      let update;\n      if (service.serviceID === id) {\n        update = { ...service, [toModify]: !service[toModify] };\n      } else {\n        update = service;\n      }\n\n      return update;\n    });\n\n    setServices(updated);\n  };\n\n  //Handle Service Edits\n  const onServiceEdit = (id, item, value) => {\n    let updated = services.map((serviceItem) => {\n      let update;\n      if (serviceItem.serviceID === id) {\n        update = { ...serviceItem, [item]: value };\n      } else {\n        update = serviceItem;\n      }\n      return update;\n    });\n\n    setServices(updated);\n  };\n\n  //----------Handling Post-----------------//\n  const getProviderServices = async (email) => {\n    const res = await fetch(\"/api/getServices\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email: email }),\n    });\n\n    const resJSON = await res.json();\n\n    return resJSON;\n  };\n\n  // //Display only on page\n  useEffect(() => {\n    //Get services offered -> set display to false\n    const loadServices = async () => {\n      let services = await getProviderServices(localStorage.email);\n      setServices(services);\n    };\n    loadServices();\n  }, []);\n\n  // Sending and Recieving services\n\n  return (\n    <div>\n      <div>\n        <h1>Provider Page</h1>\n        <div className=\"row\">\n          <div className=\"serviceDetails col-3\">\n            <h3>Services By You:</h3>\n            <Services\n              services={services}\n              modifyServiceDisplay={modifyServiceDisplay}\n              onServiceEdit={onServiceEdit}\n              setServices={setServices}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProviderPage;\n","// DANIEL LISKO\n\nfunction ProviderDetailsPage() {\n  return (\n    <div>\n      <h1>Proivder Details Page</h1>\n    </div>\n  );\n}\n\nexport default ProviderDetailsPage;\n","/* MICHAEL CHANG & DANIEL LISKO */\n\nimport \"./App.css\";\n\nimport { Routes, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport RedirectHome from \"./pages/RedirectHome.js\";\nimport SignUp from \"./pages/SignUp\";\nimport Login from \"./pages/Login\";\nimport SignUpProviders from \"./pages/SignUpProviders\";\nimport SignUpCustomers from \"./pages/SignUpCustomers\";\nimport Layout from \"./components/layout/Layout\";\nimport CustomerDetailsPage from \"./pages/CustomerDetailsPage\";\nimport CustomerRequestService from \"./pages/CustomerRequestService\";\nimport ProviderPage from \"./pages/ProviderPage\";\nimport ProviderDetailsPage from \"./pages/ProviderDetailsPage\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/SignUp\" element={<SignUp />} />\n        <Route path=\"/Login\" element={<Login />} />\n        <Route path=\"/signUpProviders\" element={<SignUpProviders />} />\n        <Route path=\"/signUpCustomers\" element={<SignUpCustomers />} />\n        <Route path=\"/CustomerDetailspage\" element={<CustomerDetailsPage />} />\n        <Route\n          path=\"/CustomerRequestService\"\n          element={<CustomerRequestService />}\n        />\n        <Route path=\"/ProviderPage\" element={<ProviderPage />} />\n        <Route path=\"/ProviderDetailspage\" element={<ProviderDetailsPage />} />\n        <Route path=\"/redirectHome\" element={<RedirectHome />} />\n      </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n","/* MICHAEL CHANG & DANIEL LISKO */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { UserLoginContextProvider } from \"./store/UserLoginContext\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <UserLoginContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </UserLoginContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}