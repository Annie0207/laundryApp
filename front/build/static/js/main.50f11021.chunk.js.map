{"version":3,"sources":["components/signups/SignUpCustomerForm.module.css","components/customer/newLaundryRequests/LaundryRequestForm.module.css","components/customer/customerDetailsAndRequests/CustomerDetailsForm.module.css","components/login/LoginForm.module.css","components/layout/MainNavigation.module.css","components/ui/Card.module.css","components/layout/Layout.module.css","components/customer/newLaundryRequests/LaundryCustomerConfirm.module.css","store/UserLoginContext.js","images/homeLandingLaundry.jpg","pages/Home.js","pages/RedirectHome.js","images/laundryUser.jpg","images/laundryProvider.jpg","components/ui/Card.js","pages/SignUp.js","components/login/LoginForm.js","pages/Login.js","components/signups/SignUpProviderForm.js","pages/SignUpProviders.js","components/signups/SignUpCustomerForm.js","pages/SignUpCustomers.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/customer/customerDetailsAndRequests/CustomerLaundryRequestDetails.js","components/customer/customerDetailsAndRequests/CustomerDetailsForm.js","pages/CustomerDetailsPage.js","components/customer/newLaundryRequests/LaundryRequestForm.js","components/customer/newLaundryRequests/LaundryCustomerConfirm.js","components/api/GoogleMaps.js","pages/CustomerRequestService.js","components/provider/providerServices/EditService.js","components/provider/providerServices/Button.js","components/provider/providerServices/Service.js","components/provider/providerServices/Services.js","components/provider/customerRequests/RequestButtons.js","components/provider/customerRequests/requestCard.js","components/provider/customerRequests/CustomerReqDetails.js","components/provider/sortBar/SortBar.js","pages/ProviderPage.js","pages/ProviderDetailsPage.js","App.js","index.js"],"names":["module","exports","UserLoginContext","createContext","userDetails","loginStatus","loginSuccess","localStorage","getItem","UserLoginContextProvider","props","setUserDetails","useState","setLoginStatus","findUserDetails","async","response","fetch","method","headers","body","JSON","stringify","data","json","useEffect","userType","credentials","email","setData","context","addUserDetailsHandler","details","key","value","Object","entries","removeUserDetailsHandler","bool","user","Provider","children","Home","className","style","height","width","objectFit","src","homeLandingLaundry","alt","href","RedirectHome","navigate","useNavigate","setTimeout","Card","classes","card","SignUp","to","laundryProvider","laundryUser","LoginForm","errorMessage","setErrorMessage","emailRef","useRef","passwordRef","userContext","useContext","form","onSubmit","event","preventDefault","loginData","current","password","loginHandler","error","setItem","control","htmlFor","type","placeholder","required","name","ref","actions","Login","SignUpProviderForm","postProviderData","providerInfo","setProviderInfo","companyName","firstName","lastName","phoneNumber","address","city","state","zipCode","confirmPassword","handleChange","target","id","onChange","pattern","SignUpProviders","SignUpCustomerForm","passwordErrorMessage","setPasswordErrorMessage","emailErrorMessage","setEmailErrorMessage","firstNameRef","lastNameRef","confirmPasswordRef","addressRef","cityRef","zipCodeRef","stateRef","phoneNumberRef","passwordChangeHandler","customerFirstName","customerLastName","customerEmail","customerPassword","customerConfirmPassword","customerAddress","customerCity","customerZipCode","customerState","customerPhoneNumber","customerData","createCustomerFetch","includes","findEmailFetch","undefined","match","replace","join","SignUpCustomers","MainNavigation","logoutHandler","clear","linksRender","push","logout","onClick","header","logo","Layout","main","currencyFormatter","Intl","NumberFormat","currency","allCustomerRequests","customerRequestsRender","CustomerLaundryRequestDetails","allCustomerLaundryRequestsFetch","getData","sort","a","b","Date","parse","date","forEach","request","providerEmail","providerAccepted","toString","serviceComplete","format","totalCost","getLaundryData","CustomerDetailsForm","setGetLaundryData","formEdit","setFormEdit","buttonText","setButtonText","customerDataChanged","updateUserDetailsFetch","defaultValue","disabled","CustomerDetailsPage","LaundryRequestForm","poundsOfLaundryRef","foldRef","poundsOfDryCleanRef","deliveryRef","dateRef","readyToWashButton","setReadyToWashButton","dateErrorMessage","setDateErrorMesssage","dryCleanForm","setDryCleanForm","washForm","setWashForm","poundsOfLaundry","fold","checked","poundsOfDryClean","delivery","today","laundryRequestData","wash","dryClean","laundryRequestFetch","checkBoxControl","textControl","providerCards","length","setSortPriceLowHighFunc","setSortPriceHighLowFunc","setSortDistanceFunc","LaundryCustomerConfirm","washPrice","poundsRequestedWash","dryCleanPrice","poundsRequesteddryClean","deliveryPrice","foldPrice","requestObject","servicesRequestedObject","servicesRequested","provider","serviceObjects","price","parseFloat","perPound","poundsRequested","customer","laundryCustomerConfirmFetch","require","config","googleMapsKey","process","GOOGLE_MAPS_KEY","containerStyle","GoogleMaps","center","googleMapMarkers","providerCoordinates","lat","lng","coordinate","index","console","log","label","position","isLoaded","useJsApiLoader","googleMapsApiKey","map","setMap","onLoad","useCallback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","mapContainerStyle","zoom","availableProviders","CustomerRequestService","providerCardRender","gotProivders","setGotProivders","sortPriceLowHigh","setSortPriceLowHigh","sortPriceHighLow","setSortPriceHighLow","sortDistance","setSortDistance","laundryCost","dryCleanCost","foldingCost","deliveryCost","geoCode","results","geometry","location","Math","abs","EditService","serviceItem","modifyServiceDisplay","onServiceEdit","deleteService","submitEdit","services","serviceOptions","setServiceOptions","Set","updateServices","serviceOpt","service","has","delete","handleInputChange","e","serviceID","showEdit","options","add","selected","renderOptions","output","renderPerPoundBox","step","min","max","Button","handleClick","showDetails","Service","setServices","Services","s","i","splice","postService","updated","renderServices","newService","RequestButtons","setCustomerRequest","customersRequests","buttonModifiers","_id","toModify","req","update","pushRequestUpdate","toUpdate","handleAcceptClick","handleRejectClick","handleServCompleteClick","requestCard","listServices","serviceStr","charAt","toUpperCase","slice","CustomerReqDetails","sortRequests","renderRequest","serviceRejected","sortBar","setDisplayOptions","displayOptions","class","displayBy","ProviderPage","ascendingOrder","setAscendingOrder","tmpCustomerRequest","fetchCustomerRequest","getReq","getProviderServices","loadServices","requests","res","emailObj","emailStr","item","SortBar","ProviderDetailsPage","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50f11021.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SignUpCustomerForm_form__HR3OO\",\"error\":\"SignUpCustomerForm_error__3CD6u\",\"control\":\"SignUpCustomerForm_control__2TBwh\",\"actions\":\"SignUpCustomerForm_actions__27TDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LaundryRequestForm_form__-Bhjx\",\"error\":\"LaundryRequestForm_error__2Xq1J\",\"textControl\":\"LaundryRequestForm_textControl__39e9E\",\"checkBoxControl\":\"LaundryRequestForm_checkBoxControl__bPezt\",\"actions\":\"LaundryRequestForm_actions__l5BM4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CustomerDetailsForm_form__3wqGk\",\"error\":\"CustomerDetailsForm_error__2BiXN\",\"control\":\"CustomerDetailsForm_control__opoa3\",\"actions\":\"CustomerDetailsForm_actions__1emt0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__1c99a\",\"error\":\"LoginForm_error__i9owo\",\"control\":\"LoginForm_control__3T3Ps\",\"actions\":\"LoginForm_actions__33BbP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"active\":\"MainNavigation_active__oN3Ka\",\"logout\":\"MainNavigation_logout__3fhIF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3_jzl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"LaundryCustomerConfirm_actions__283hK\"};","/* MICHAEL CHANG */\n\nimport { createContext, useState, useEffect } from \"react\";\n\n// create context\nconst UserLoginContext = createContext({\n  userDetails: {},\n  loginStatus: false,\n});\n\n// check localStorage\nconst loginSuccess = localStorage.getItem(\"loginSuccess\");\n\nexport function UserLoginContextProvider(props) {\n  const [userDetails, setUserDetails] = useState({});\n  const [loginStatus, setLoginStatus] = useState(false);\n\n  function setLoginStatusCtx(bool) {\n    setLoginStatus(bool);\n  }\n\n  function setUserDetailsCtx(user) {\n    setUserDetails(user);\n  }\n\n  function addUserDetailsHandler(details) {\n    for (const [key, value] of Object.entries(details)) {\n      setUserDetails({ ...userDetails, [key]: value });\n    }\n  }\n\n  function removeUserDetailsHandler() {\n    setUserDetails();\n  }\n\n  // fetch for userDetails\n  const findUserDetails = async (data) => {\n    const response = await fetch(\"/api/findUserDetails\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n    return await response.json();\n  };\n\n  // if localStorage is \"true\" (NOTE: localStorage only stores strings)\n  useEffect(() => {\n    if (loginSuccess === \"true\") {\n      const setData = async () => {\n        const userType = localStorage.getItem(\"userType\");\n        const email = localStorage.getItem(\"email\");\n        const credentials = { email: email, userType: userType };\n        setUserDetails(await findUserDetails(credentials));\n        setLoginStatus(true);\n      };\n      setData();\n    }\n  }, []);\n\n  const context = {\n    userDetails: userDetails,\n    loginStatus: loginStatus,\n    addUserDetailsHandler: addUserDetailsHandler,\n    removeUserDetailsHandler: removeUserDetailsHandler,\n    findUserDetails: findUserDetails,\n    setLoginStatus: setLoginStatusCtx,\n    setUserDetails: setUserDetailsCtx,\n  };\n\n  return (\n    <UserLoginContext.Provider value={context}>\n      {props.children}\n    </UserLoginContext.Provider>\n  );\n}\n\nexport default UserLoginContext;\n","export default __webpack_public_path__ + \"static/media/homeLandingLaundry.315cce71.jpg\";","/* MICHAEL CHANG & DANIEL LISKO */\n\nimport homeLandingLaundry from \"../images/homeLandingLaundry.jpg\";\n\nfunction Home() {\n  return (\n    <div>\n      <h1>Hamper Dash</h1>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <p>\n            Welcome to Hamper Dash!! We connect you to the best launderers\n            around so you can save time and focus on what matters, instead of\n            laundry chores. We offer registration as a laundry provider (to\n            provide laundry services) on our platform, or as a laundry user (get\n            your laundry cleaned).\n          </p>\n        </div>\n        <div className=\"col-12\">\n          <img\n            style={{\n              height: \"100%\",\n              width: \"100%\",\n              objectFit: \"contain\",\n            }}\n            src={homeLandingLaundry}\n            alt=\"Nice and neat laundry room\"\n          />\n          Picture from{\" \"}\n          <a href=\"https://www.rd.com/wp-content/uploads/2021/09/GettyImages-1181334518-MLedit.jpg?resize=700,467\">\n            rd.com\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/* MICHAEL CHANG */\n\nimport { useNavigate } from \"react-router-dom\";\n\nfunction RedirectHome() {\n  const navigate = useNavigate();\n\n  function delayedRedirectHome() {\n    setTimeout(() => {\n      navigate(\"/\");\n    }, 3000);\n  }\n\n  delayedRedirectHome();\n\n  return (\n    <div>\n      <p>Thanks! Redirecting to Home....</p>\n    </div>\n  );\n}\n\nexport default RedirectHome;\n","export default __webpack_public_path__ + \"static/media/laundryUser.542ff844.jpg\";","export default __webpack_public_path__ + \"static/media/laundryProvider.941f55cc.jpg\";","// MICHAEL CHANG & DANIEL LISKO\n\nimport classes from \"./Card.module.css\";\n\nfunction Card(props) {\n  return <div className={classes.card}>{props.children}</div>;\n}\n\nexport default Card;\n","/* MICHAEL CHANG & DANIEL LISKO*/\n\nimport laundryUser from \"../images/laundryUser.jpg\";\nimport laundryProvider from \"../images/laundryProvider.jpg\";\n\nimport { Link } from \"react-router-dom\";\nimport Card from \"../components/ui/Card\";\n\nfunction SignUp() {\n  return (\n    <div>\n      <h1>Sign Up Page</h1>\n      <div className=\"row\">\n        <div className=\"col-6 d-flex justify-content-center\">\n          <Card>\n            <div className=\"d-flex justify-content-center\">\n              <h4>I am a laundry provider! I can wash!</h4>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n              <Link to=\"/signUpProviders\">\n                <strong>Providers Sign Up</strong>\n              </Link>\n            </div>\n            <div>\n              <img\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  objectFit: \"contain\",\n                }}\n                src={laundryProvider}\n                alt=\"Worker holding freshly cleaned towels at a laundry provider business\"\n              />\n              Picture from{\" \"}\n              <a href=\"https://boltlaundry.com/wp-content/uploads/2021/01/Commercial-Laundry-Service-In-Knoxville-TN.jpg\">\n                boltlaundry.com\n              </a>\n            </div>\n          </Card>\n        </div>\n        <div className=\"col-6 \">\n          <Card>\n            <div className=\"d-flex justify-content-center\">\n              <h4>I like my laundry clean and spotless!</h4>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n              <Link to=\"/signUpCustomers\">\n                <strong>Customers Sign Up</strong>\n              </Link>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n              <img\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  objectFit: \"contain\",\n                }}\n                src={laundryUser}\n                alt=\"Woman doing laundry with a smile\"\n              />\n            </div>\n            <div>\n              Picture from{\" \"}\n              <a href=\"https://www.wash.com/wp-content/uploads/2019/04/woman-doing-laundry.jpg\">\n                wash.com\n              </a>\n            </div>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n","//MICHAEL CHANG\n\nimport { useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Card from \"../ui/Card\";\nimport classes from \"./LoginForm.module.css\";\n\nimport { useContext } from \"react\";\nimport UserLoginContext from \"../../store/UserLoginContext\";\n\nfunction LoginForm(props) {\n  // initailize react hooks\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n\n  // onSubmit customer form handler\n  const loginSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    const loginEmail = emailRef.current.value;\n    const loginPassword = passwordRef.current.value;\n\n    const loginData = {\n      email: loginEmail,\n      password: loginPassword,\n    };\n\n    const response = await props.loginHandler(loginData);\n\n    // if the response is an error\n    if (response.error) {\n      setErrorMessage(response.error);\n    } else {\n      // set localStorage with customer info\n      localStorage.setItem(\"email\", response.email);\n      localStorage.setItem(\"userType\", response.userType);\n      localStorage.setItem(\"loginSuccess\", true);\n\n      const setData = async () => {\n        const userType = localStorage.getItem(\"userType\");\n        const email = localStorage.getItem(\"email\");\n        const credentials = { email: email, userType: userType };\n        userContext.setUserDetails(\n          await userContext.findUserDetails(credentials)\n        );\n        userContext.setLoginStatus(true);\n      };\n      setData();\n\n      //navigate to Customer Request page or Provider Service Page\n      if (response.userType === \"customer\") {\n        navigate(\"/CustomerRequestService\");\n      } else {\n        navigate(\"/ProviderPage\");\n      }\n    }\n  };\n\n  // form component\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={loginSubmitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">E-mail</label>\n          <input\n            type=\"email\"\n            placeholder=\"email@email.com\"\n            required\n            name=\"email\"\n            ref={emailRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            name=\"password\"\n            ref={passwordRef}\n          />\n        </div>\n        <div className={classes.error}>\n          <p>{errorMessage}</p>\n        </div>\n        <div className={classes.actions}>\n          <button>Login</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default LoginForm;\n","/* MICHAEL CHANG */\nimport PropTypes from \"prop-types\";\nimport LoginForm from \"../components/login/LoginForm\";\n\nfunction Login() {\n  async function loginHandler(data) {\n    const response = await fetch(\"/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    return await response.json();\n  }\n\n  return (\n    <div>\n      <h1>Login Page</h1>\n\n      <LoginForm loginHandler={loginHandler} />\n    </div>\n  );\n}\n\nLogin.propTypes = {\n  loginHandler: PropTypes.func,\n};\n\nexport default Login;\n","// DANIEL LISKO\n\nimport Card from \"../ui/Card\";\nimport \"./SignUpProvide.css\";\nimport { useState } from \"react\";\n\nconst SignUpProviderForm = ({ postProviderData }) => {\n  const [providerInfo, setProviderInfo] = useState({\n    userType: \"provider\",\n    companyName: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phoneNumber: \"\",\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    zipCode: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const handleChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setProviderInfo({ ...providerInfo, [name]: value });\n  };\n\n  //Hanle submit\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    postProviderData(providerInfo);\n  };\n\n  return (\n    <Card>\n      <form onSubmit={handleSubmit}>\n        <h2>Contact Info</h2>\n        <div className=\"fullLengthIn\">\n          <label htmlFor=\"companyName\">Company Name</label>\n          <input\n            type=\"text\"\n            name=\"companyName\"\n            id=\"companyName\"\n            placeholder=\"Enter Company Name\"\n            value={providerInfo.companyName}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <div className=\"inline\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input\n              type=\"text\"\n              name=\"firstName\"\n              value={providerInfo.firstName}\n              id=\"firstName\"\n              placeholder=\"Enter First Name\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"inline\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input\n              type=\"text\"\n              name=\"lastName\"\n              value={providerInfo.lastName}\n              id=\"lastName\"\n              placeholder=\"Enter Last Name\"\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n        <div>\n          <div className=\"inline\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter Email\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"inline\">\n            <label htmlFor=\"phoneNumber\">Phone</label>\n            <input\n              type=\"tel\"\n              name=\"phoneNumber\"\n              id=\"phoneNumber\"\n              pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n              placeholder=\"XXX-XXX-XXXX\"\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n        <h2>Address</h2>\n        <div>\n          <div className=\"fullLengthIn\">\n            <label htmlFor=\"address\">Address Line 1</label>\n            <input\n              name=\"address\"\n              id=\"address1\"\n              type=\"text\"\n              onChange={handleChange}\n            />\n          </div>\n\n          <div className=\"inline\">\n            <label htmlFor=\"city\">City</label>\n            <input name=\"city\" id=\"city\" type=\"text\" onChange={handleChange} />\n          </div>\n          <div className=\"inline\">\n            <label htmlFor=\"state\">State</label>\n            <input\n              name=\"state\"\n              id=\"state\"\n              type=\"text\"\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"zipCode\">Zip Code</label>\n          </div>\n          <input\n            name=\"zipCode\"\n            id=\"zipCode\"\n            type=\"number\"\n            onChange={handleChange}\n          />\n        </div>\n        <h2>Password</h2>\n\n        <div>\n          <div className=\"inline\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              name=\"password\"\n              id=\"password\"\n              type=\"password\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"inline\">\n            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n            <input\n              name=\"confirmPassword\"\n              id=\"confirmPassword\"\n              type=\"password\"\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n        <div className=\"flex-parent jc-center\">\n          <button type=\"submit\">Create Account</button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default SignUpProviderForm;\n","/* DANIEL LISKO */\n\nimport ProviderForm from \"../components/signups/SignUpProviderForm\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst SignUpProviders = () => {\n  let navigate = useNavigate();\n  const postProviderData = async (data) => {\n    delete data.confirmPassword;\n\n    fetch(\"api/createCustomer\", {\n      method: \"POST\", // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n    navigate(\"/\");\n  };\n\n  return (\n    <div>\n      <h1>Laundry Service Provider Sign Up</h1>\n      <ProviderForm postProviderData={postProviderData} />\n    </div>\n  );\n};\n\nexport default SignUpProviders;\n","// MICHAEL CHANG\n\nimport { useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Card from \"../ui/Card\";\nimport classes from \"./SignUpCustomerForm.module.css\";\n\nfunction SignUpCustomerForm(props) {\n  // state variables\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(\"\");\n  const [emailErrorMessage, setEmailErrorMessage] = useState(\"\");\n\n  // navigate variable\n  const navigate = useNavigate();\n\n  // reference varaibles\n  const firstNameRef = useRef();\n  const lastNameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const confirmPasswordRef = useRef();\n  const addressRef = useRef();\n  const cityRef = useRef();\n  const zipCodeRef = useRef();\n  const stateRef = useRef();\n  const phoneNumberRef = useRef();\n\n  // onChange password && confirmPassword input handler\n  const passwordChangeHandler = async (event) => {\n    const password = passwordRef.current.value;\n    const confirmPassword = confirmPasswordRef.current.value;\n\n    if (password !== confirmPassword) {\n      setPasswordErrorMessage(\"Passwords do not match!\");\n    } else {\n      setPasswordErrorMessage(\"\");\n    }\n  };\n\n  //https://stackoverflow.com/questions/8358084/regular-expression-to-reformat-a-us-phone-number-in-javascript\n  // onChange phoneNumber input handler\n  const phoneNumberChangeHandler = async (event) => {\n    const phoneNumber = phoneNumberRef.current.value;\n    const cleaned = (\"\" + phoneNumber).replace(/\\D/g, \"\");\n    const match = cleaned.match(/^(1|)?(\\d{3})(\\d{3})(\\d{4})$/);\n    if (match) {\n      phoneNumberRef.current.value = [\n        match[2],\n        \"-\",\n        match[3],\n        \"-\",\n        match[4],\n      ].join(\"\");\n    }\n  };\n  // onChange email input handler\n  const emailChangeHandler = async (event) => {\n    const email = emailRef.current.value;\n\n    if (email.includes(\"@\") && email.includes(\".\")) {\n      const response = await props.findEmailFetch(email);\n\n      if (response === null || response === undefined) {\n        setEmailErrorMessage(\"\");\n      } else {\n        setEmailErrorMessage(\"Email already registered please login!\");\n      }\n    } else {\n      return;\n    }\n  };\n\n  // onSubmit customer form handler\n  const customerSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    const customerFirstName = firstNameRef.current.value;\n    const customerLastName = lastNameRef.current.value;\n    const customerEmail = emailRef.current.value;\n    const customerPassword = passwordRef.current.value;\n    const customerConfirmPassword = confirmPasswordRef.current.value;\n    const customerAddress = addressRef.current.value;\n    const customerCity = cityRef.current.value;\n    const customerZipCode = zipCodeRef.current.value;\n    const customerState = stateRef.current.value;\n    const customerPhoneNumber = phoneNumberRef.current.value;\n\n    if (customerPassword !== customerConfirmPassword) {\n      setPasswordErrorMessage(\"Passwords do not match!\");\n      return;\n    } else {\n      setPasswordErrorMessage(\"\");\n      const customerData = {\n        firstName: customerFirstName,\n        lastName: customerLastName,\n        email: customerEmail,\n        address: customerAddress,\n        city: customerCity,\n        zipCode: customerZipCode,\n        state: customerState,\n        phoneNumber: customerPhoneNumber,\n        password: customerPassword,\n        userType: \"customer\",\n      };\n\n      const response = await props.createCustomerFetch(customerData);\n\n      if (response) {\n        setEmailErrorMessage(\"\");\n        navigate(\"/redirectHome\");\n      } else {\n        setEmailErrorMessage(\"Email already registered please login!\");\n      }\n    }\n  };\n\n  // form component\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={customerSubmitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"firstname\">First Name</label>\n          <input\n            type=\"text\"\n            placeholder=\"First Name\"\n            required\n            name=\"firstname\"\n            ref={firstNameRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"lastname\">Last Name</label>\n          <input\n            type=\"text\"\n            placeholder=\"Last Name\"\n            required\n            name=\"lastname\"\n            ref={lastNameRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">E-mail</label>\n          <input\n            type=\"email\"\n            placeholder=\"email@email.com\"\n            required\n            name=\"email\"\n            ref={emailRef}\n            onChange={emailChangeHandler}\n          />\n        </div>\n        <div className={classes.error}>\n          <p>{emailErrorMessage}</p>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            name=\"password\"\n            ref={passwordRef}\n            onChange={passwordChangeHandler}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"confirmPassword\">Confirm Password</label>\n          <input\n            type=\"password\"\n            placeholder=\"Re-enter Password\"\n            required\n            name=\"confirmPassword\"\n            ref={confirmPasswordRef}\n            onChange={passwordChangeHandler}\n          />\n        </div>\n        <div className={classes.error}>\n          <p>{passwordErrorMessage}</p>\n        </div>\n\n        <div className={classes.control}>\n          <label htmlFor=\"addreess\">City</label>\n          <input\n            type=\"text\"\n            placeholder=\"123 Address Street\"\n            required\n            name=\"address\"\n            ref={addressRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"city\">City</label>\n          <input\n            type=\"text\"\n            placeholder=\"City Name\"\n            required\n            name=\"city\"\n            ref={cityRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"zipCode\">Zip Code</label>\n          <input\n            type=\"text\"\n            pattern=\"[0-9]{5}\"\n            placeholder=\"Zip Code (eg. 12345)\"\n            required\n            name=\"zipCode\"\n            ref={zipCodeRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"state\">State</label>\n          <input\n            type=\"text\"\n            pattern=\"(A[KLRZ]|C[AOT]|D[CE]|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|PA|RI|S[CD]|T[NX]|UT|V[AT]|W[AIVY])\"\n            placeholder=\"State Abbreviation (eg. CA, NY, AZ, etc.)\"\n            required\n            name=\"state\"\n            ref={stateRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"phone\">Phone Number</label>\n          <input\n            id=\"phoneNumber\"\n            type=\"tel\"\n            pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n            placeholder=\"123-456-7890\"\n            required\n            name=\"phone\"\n            ref={phoneNumberRef}\n            onChange={phoneNumberChangeHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <button>Create Account</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default SignUpCustomerForm;\n","/* MICHAEL CHANG */\n\nimport PropTypes from \"prop-types\";\nimport SignUpCustomerForm from \"../components/signups/SignUpCustomerForm\";\n\nfunction SignUpCustomers() {\n  async function createCustomerFetch(data) {\n    const response = await fetch(\"/api/createCustomer\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    return await response.json();\n  }\n\n  async function findEmailFetch(data) {\n    const response = await fetch(\"/api/findEmailExists\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"text/plain\",\n      },\n      body: data,\n    });\n    return await response.json();\n  }\n  return (\n    <div>\n      <h1>Customers Sign Up Page</h1>\n      <SignUpCustomerForm\n        createCustomerFetch={createCustomerFetch}\n        findEmailFetch={findEmailFetch}\n      />\n    </div>\n  );\n}\n\nSignUpCustomers.propTypes = {\n  createCustomerFetch: PropTypes.func,\n  findEmailFetch: PropTypes.func,\n\n};\n\nexport default SignUpCustomers;\n","// MICHAEL CHANG & DANIEL LISKO\n\nimport { Link, useNavigate } from \"react-router-dom\";\nimport classes from \"./MainNavigation.module.css\";\n\nimport { useContext } from \"react\";\nimport UserLoginContext from \"../../store/UserLoginContext\";\n\nfunction MainNavigation() {\n  const navigate = useNavigate();\n\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n\n  // reset states for logout and clear localStorage\n  const logoutHandler = (event) => {\n    localStorage.clear();\n    userContext.setLoginStatus(false);\n    navigate(\"/\");\n  };\n\n  let linksRender = [];\n\n  const logoutLink = () => {\n    return (\n      <li key=\"logout\">\n        <button\n          className={classes.logout}\n          onClick={logoutHandler}\n          type=\"button\"\n        >\n          Log out\n        </button>\n      </li>\n    );\n  };\n\n  // if loginSuccess state is true replace Login Link to Customer/Provider Detail Page Link\n  // !== undefined IS A HACK...REFER TO APP.js FETCH RUNS 2 times\n\n  if (userContext.userDetails && userContext.loginStatus) {\n    if (userContext.userDetails.userType === \"customer\") {\n      linksRender.push(\n        <li key=\"customerRequestService\">\n          <Link to=\"/CustomerRequestService\">Request Laundry</Link>\n        </li>\n      );\n      linksRender.push(\n        <li key=\"customerDetailsPage\">\n          <Link to=\"/CustomerDetailsPage\">{`${userContext.userDetails.firstName} ${userContext.userDetails.lastName}`}</Link>\n        </li>\n      );\n    } else {\n      linksRender.push(\n        <li key=\"providerPage\">\n          <Link to=\"/ProviderPage\">{`${userContext.userDetails.companyName}`}</Link>\n        </li>\n      );\n      linksRender.push(\n        <li key=\"providerDetailsPage\">\n          <Link to=\"/ProviderDetailsPage\">{`${userContext.userDetails.firstName} ${userContext.userDetails.lastName}`}</Link>\n        </li>\n      );\n    }\n    linksRender.push(logoutLink());\n\n    // else set default navigation bar\n  } else {\n    linksRender.push(\n      <li key=\"login\">\n        <Link to=\"/Login\">Login</Link>\n      </li>\n    );\n  }\n\n  // MainNavgiation component\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>Hamper Dash</div>\n      </Link>\n      <nav>\n        <ul>\n          <li key=\"home\">\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li key=\"signup\">\n            <Link to=\"/SignUp\">Sign Up</Link>\n          </li>\n          {linksRender}\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default MainNavigation;\n","// MICHAEL CHANG & DANIEL LISKO\n\nimport MainNavigation from \"./MainNavigation\";\nimport classes from \"./Layout.module.css\";\n\nfunction Layout(props) {\n  return (\n    <div>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </div>\n  );\n}\n\nexport default Layout;\n","/* MICHAEL CHANG */\nimport Card from \"../../ui/Card\";\nimport { useContext, useEffect } from \"react\";\nimport UserLoginContext from \"../../../store/UserLoginContext\";\nconst currencyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n});\n\nlet allCustomerRequests = [];\nlet customerRequestsRender = [];\n\n// fetch requests from DB\nconst allCustomerLaundryRequestsFetch = async (data) => {\n  const response = await fetch(\"/api/allCustomerLaundryRequest\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  allCustomerRequests = await response.json();\n};\n\n// component function\nfunction CustomerLaundryRequestDetails(props) {\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n\n  useEffect(() => {\n    const customerEmail = { customerEmail: userContext.userDetails.email };\n\n    // reset array for card render\n    customerRequestsRender = [];\n\n    const getData = async () => {\n      await allCustomerLaundryRequestsFetch(customerEmail);\n    };\n    getData();\n\n    // sort the cards from latest to earliest\n    allCustomerRequests.sort((a, b) => Date.parse(b.date) - Date.parse(a.date));\n\n    allCustomerRequests.forEach((request) => {\n      customerRequestsRender.push([\n        <div className=\"mt-2\">\n          <Card>\n            <h3 className=\"d-flex justify-content-center\">\n              {request.providerEmail}\n            </h3>\n            <div className=\"row\">\n              <span className=\"col-6\">\n                <strong>Date: </strong> {request.date}\n              </span>\n              <span className=\"col-6\">\n                <strong>Provider Accepted: </strong>{\" \"}\n                {request.providerAccepted.toString()}\n              </span>\n              <span className=\"col-6\">\n                <strong>Job Completed: </strong>{\" \"}\n                {request.serviceComplete.toString()}\n              </span>\n              <span className=\"col-6\">\n                <strong>Total Cost: </strong>\n                {currencyFormatter.format(request.totalCost)}\n              </span>\n            </div>\n          </Card>\n        </div>,\n      ]);\n    });\n  }, [props.getLaundryData, userContext.userDetails.email]);\n\n  // form component\n  return <div>{customerRequestsRender}</div>;\n}\n\nexport default CustomerLaundryRequestDetails;\nexport { allCustomerLaundryRequestsFetch };\n","/* MICHAEL CHANG */\n\nimport PropTypes from \"prop-types\";\nimport Card from \"../../ui/Card\";\nimport classes from \"./CustomerDetailsForm.module.css\";\nimport { useState, useRef } from \"react\";\nimport { useContext } from \"react\";\nimport UserLoginContext from \"../../../store/UserLoginContext\";\nimport CustomerLaundryRequestDetails from \"./CustomerLaundryRequestDetails\";\n\nfunction CustomerDetailsForm() {\n  const [getLaundryData, setGetLaundryData] = useState(false);\n  const [formEdit, setFormEdit] = useState(true);\n  const [buttonText, setButtonText] = useState(\"Edit\");\n  const firstNameRef = useRef();\n  const lastNameRef = useRef();\n  const addressRef = useRef();\n  const cityRef = useRef();\n  const zipCodeRef = useRef();\n  const stateRef = useRef();\n  const phoneNumberRef = useRef();\n\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n\n  // fetch to update userDetails in DB\n  const updateUserDetailsFetch = async (data) => {\n    await fetch(\"/api/updateUserDetails\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  };\n\n  const buttonClickHandler = (event) => {\n    event.preventDefault();\n\n    const customerFirstName = firstNameRef.current.value;\n    const customerLastName = lastNameRef.current.value;\n    const customerAddress = addressRef.current.value;\n    const customerCity = cityRef.current.value;\n    const customerZipCode = zipCodeRef.current.value;\n    const customerState = stateRef.current.value;\n    const customerPhoneNumber = phoneNumberRef.current.value;\n\n    if (!formEdit && buttonText === \"Save\") {\n      const customerDataChanged = {\n        firstName: customerFirstName,\n        lastName: customerLastName,\n        address: customerAddress,\n        city: customerCity,\n        zipCode: customerZipCode,\n        state: customerState,\n        phoneNumber: customerPhoneNumber,\n        email: userContext.userDetails.email,\n        userType: userContext.userDetails.userType,\n      };\n\n      updateUserDetailsFetch(customerDataChanged);\n      userContext.setUserDetails({\n        ...userContext.userDetails,\n        ...customerDataChanged,\n      });\n    }\n\n    if (formEdit) {\n      setFormEdit(false);\n      setButtonText(\"Save\");\n    } else {\n      setFormEdit(true);\n      setButtonText(\"Edit\");\n    }\n  };\n\n  function setGetLaundryDataFunc() {\n    setGetLaundryData(!getLaundryData);\n  }\n\n  // form component\n  return (\n    <div className=\"row\">\n      <div className=\"col-6\">\n        <Card>\n          <form className={classes.form} onSubmit={buttonClickHandler}>\n            <div className={classes.control}>\n              <label htmlFor=\"firstname\">First Name</label>\n              <input\n                type=\"text\"\n                placeholder=\"First Name\"\n                required\n                name=\"firstname\"\n                defaultValue={userContext.userDetails.firstName}\n                disabled={formEdit}\n                ref={firstNameRef}\n              />\n            </div>\n            <div className={classes.control}>\n              <label htmlFor=\"lastname\">Last Name</label>\n              <input\n                type=\"text\"\n                placeholder=\"Last Name\"\n                required\n                name=\"lastname\"\n                defaultValue={userContext.userDetails.lastName}\n                disabled={formEdit}\n                ref={lastNameRef}\n              />\n            </div>\n            <div className={classes.control}>\n              <label htmlFor=\"address\">Address</label>\n              <input\n                type=\"text\"\n                placeholder=\"123 Address Street\"\n                required\n                name=\"address\"\n                defaultValue={userContext.userDetails.address}\n                disabled={formEdit}\n                ref={addressRef}\n              />\n            </div>\n            <div className={classes.control}>\n              <label htmlFor=\"city\">City</label>\n              <input\n                type=\"text\"\n                placeholder=\"City Name\"\n                required\n                name=\"city\"\n                defaultValue={userContext.userDetails.city}\n                disabled={formEdit}\n                ref={cityRef}\n              />\n            </div>\n            <div className={classes.control}>\n              <label htmlFor=\"zipCode\">Zip Code</label>\n              <input\n                type=\"text\"\n                pattern=\"[0-9]{5}\"\n                placeholder=\"Zip Code (eg. 12345)\"\n                required\n                name=\"zipCode\"\n                defaultValue={userContext.userDetails.zipCode}\n                disabled={formEdit}\n                ref={zipCodeRef}\n              />\n            </div>\n            <div className={classes.control}>\n              <label htmlFor=\"state\">State</label>\n              <input\n                type=\"text\"\n                pattern=\"(A[KLRZ]|C[AOT]|D[CE]|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|PA|RI|S[CD]|T[NX]|UT|V[AT]|W[AIVY])\"\n                placeholder=\"State Abbreviation (eg. CA, NY, AZ, etc.)\"\n                required\n                name=\"state\"\n                defaultValue={userContext.userDetails.state}\n                disabled={formEdit}\n                ref={stateRef}\n              />\n            </div>\n            <div className={classes.control}>\n              <label htmlFor=\"phone\">Phone Number</label>\n              <input\n                type=\"tel\"\n                pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n                placeholder=\"123-456-7890\"\n                required\n                name=\"phone\"\n                defaultValue={userContext.userDetails.phoneNumber}\n                disabled={formEdit}\n                ref={phoneNumberRef}\n              />\n            </div>\n            <div className={classes.actions}>\n              <button>{buttonText}</button>\n            </div>\n          </form>\n        </Card>\n      </div>\n      <div className=\"col-6\">\n        <h5>\n          {userContext.userDetails.firstName} {userContext.userDetails.lastName}{\" \"}\n          Laundry Requests\n        </h5>\n        <span>\n          <button onClick={setGetLaundryDataFunc}>Refresh</button>\n        </span>\n        <CustomerLaundryRequestDetails getLaundryData={getLaundryData} />\n      </div>\n    </div>\n  );\n}\n\nCustomerDetailsForm.propTypes = {\n  getLaundryData: PropTypes.bool,\n};\n\nexport default CustomerDetailsForm;\n","// MICHAEL CHANG\n\nimport CustomerDetailsForm from \"../components/customer/customerDetailsAndRequests/CustomerDetailsForm\";\nimport { useContext } from \"react\";\nimport UserLoginContext from \"../store/UserLoginContext\";\n\nfunction CustomerDetailsPage() {\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n\n  if (userContext.userDetails !== undefined) {\n    return (\n      <div>\n        <h1>{`${userContext.userDetails.firstName} ${userContext.userDetails.lastName}`}</h1>\n        <div>\n          <CustomerDetailsForm />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h1>Customer Details Page</h1>\n    </div>\n  );\n}\n\nexport default CustomerDetailsPage;\n","// MICHAEL CHANG\n\nimport { useRef, useState, useContext } from \"react\";\n\nimport Card from \"../../ui/Card\";\nimport classes from \"./LaundryRequestForm.module.css\";\nimport UserLoginContext from \"../../../store/UserLoginContext\";\n\nfunction LaundryRequestForm(props) {\n  // initailize react hooks\n  const poundsOfLaundryRef = useRef();\n  const foldRef = useRef();\n  const poundsOfDryCleanRef = useRef();\n  const deliveryRef = useRef();\n  const dateRef = useRef();\n  const userContext = useContext(UserLoginContext);\n\n  const [readyToWashButton, setReadyToWashButton] = useState(\"Ready to Wash!\");\n  const [dateErrorMessage, setDateErrorMesssage] = useState();\n  const [dryCleanForm, setDryCleanForm] = useState(false);\n  const [washForm, setWashForm] = useState(false);\n\n  // onSubmit customer form handler\n  async function laundryRequestHandler(event) {\n    event.preventDefault();\n\n    const poundsOfLaundry = poundsOfLaundryRef.current.value;\n    const fold = foldRef.current.checked;\n    const poundsOfDryClean = poundsOfDryCleanRef.current.value;\n    const delivery = deliveryRef.current.checked;\n    const date = dateRef.current.value;\n\n    const today = new Date();\n    if (Date.parse(date) < Date.parse(today)) {\n      setDateErrorMesssage(\"Date can not be in the past\");\n      return;\n    } else {\n      setDateErrorMesssage();\n    }\n\n    const laundryRequestData = {\n      wash: poundsOfLaundry,\n      dryClean: poundsOfDryClean,\n      fold: fold,\n      delivery: delivery,\n      date: date,\n      state: userContext.userDetails.state,\n    };\n\n    setReadyToWashButton(\"Loading...\");\n    await props.laundryRequestFetch(laundryRequestData);\n    setReadyToWashButton(\"Ready to Wash!\");\n  }\n\n  // define functions to pass down as props\n  function setDryCleanFormFunc() {\n    setDryCleanForm(!dryCleanForm);\n  }\n\n  function setWashFormFunc() {\n    setWashForm(!washForm);\n  }\n\n  function showWashForm() {\n    if (washForm) {\n      return (\n        <div className={classes.textControl}>\n          <label htmlFor=\"poundsOfLaundry\">Estimated lbs. of laundry</label>\n          <input\n            type=\"number\"\n            placeholder=\"Estimated pounds\"\n            required\n            name=\"poundsOfLaundry\"\n            ref={poundsOfLaundryRef}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <input\n          type=\"hidden\"\n          value=\"\"\n          name=\"poundsOfLaundry\"\n          ref={poundsOfLaundryRef}\n        />\n      );\n    }\n  }\n\n  function showDryCleanForm() {\n    if (dryCleanForm) {\n      return (\n        <div className={classes.textControl}>\n          <label htmlFor=\"poundsOfDryClean\">Estimated lbs. of Dry Clean</label>\n          <input\n            type=\"number\"\n            placeholder=\"Estimated pounds\"\n            required\n            name=\"poundsOfDryClean\"\n            ref={poundsOfDryCleanRef}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <input\n          type=\"hidden\"\n          value=\"\"\n          name=\"poundsOfDryClean\"\n          ref={poundsOfDryCleanRef}\n        />\n      );\n    }\n  }\n\n  function showSortOptions() {\n    if (props.providerCards.length > 0) {\n      return (\n        <div className={classes.checkBoxControl}>\n          <div>Sort By:</div>\n          <div>\n            <input\n              type=\"radio\"\n              id=\"priceLowHigh\"\n              name=\"sort\"\n              onChange={props.setSortPriceLowHighFunc}\n            />\n            <label htmlFor=\"priceAsc\">Price Low-High</label>\n          </div>\n          <div>\n            <input\n              type=\"radio\"\n              id=\"priceHighLow\"\n              name=\"sort\"\n              onChange={props.setSortPriceHighLowFunc}\n            />\n            <label htmlFor=\"priceDesc\">Price High-Low</label>\n          </div>\n\n          <div>\n            <input\n              type=\"radio\"\n              id=\"distance\"\n              name=\"sort\"\n              onChange={props.setSortDistanceFunc}\n            />\n            <label htmlFor=\"distance\">Distance</label>\n          </div>\n        </div>\n      );\n    } else {\n      return;\n    }\n  }\n\n  // form component\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={laundryRequestHandler}>\n        <div className={classes.checkBoxControl}>\n          <label htmlFor=\"wash\">Laundry (per lbs.)</label>\n          <input type=\"checkbox\" name=\"wash\" onChange={setWashFormFunc} />\n        </div>\n        {showWashForm()}\n        <div className={classes.checkBoxControl}>\n          <label htmlFor=\"dryClean\">Dry Clean? (per lbs.)</label>\n          <input\n            type=\"checkbox\"\n            name=\"dryClean\"\n            onChange={setDryCleanFormFunc}\n          />\n        </div>\n        {showDryCleanForm()}\n        <span className={classes.checkBoxControl}>\n          <label htmlFor=\"fold\">Folded</label>\n          <input type=\"checkbox\" name=\"fold\" ref={foldRef} />\n        </span>\n\n        <span className={classes.checkBoxControl}>\n          <label htmlFor=\"delivery\">Delivered</label>\n          <input type=\"checkbox\" name=\"delivery\" ref={deliveryRef} />\n        </span>\n        <div className={classes.textControl}>\n          <label htmlFor=\"date\">Date</label>\n          <input\n            type=\"text\"\n            required\n            placeholder=\"eg. 01/31/2021\"\n            name=\"date\"\n            ref={dateRef}\n          />\n        </div>\n        <div className={classes.error}>\n          <p>{dateErrorMessage}</p>\n        </div>\n        <div className={classes.actions}>\n          <button>{readyToWashButton}</button>\n        </div>\n        {showSortOptions()}\n      </form>\n    </Card>\n  );\n}\n\nexport default LaundryRequestForm;\n","// MICHAEL CHANG\nimport classes from \"./LaundryCustomerConfirm.module.css\";\nimport { useState } from \"react\";\n\nfunction LaundryCustomerConfirm(props) {\n  // data fetch\n  const laundryCustomerConfirmFetch = async (data) => {\n    await fetch(\"/api/laundryCustomerConfirm\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  };\n\n  // submit handler\n  const laundryCustomerConfirmSubmitHandler = async (event) => {\n    event.preventDefault();\n    laundryCustomerConfirmFetch(requestObject);\n    setButtonText(\"Pending\");\n  };\n\n  const [buttonText, setButtonText] = useState(\"Choose Provider!\");\n\n  let washPrice;\n  let poundsRequestedWash;\n  let dryCleanPrice;\n  let poundsRequesteddryClean;\n  let deliveryPrice;\n  let foldPrice;\n\n  let requestObject = {};\n  let servicesRequestedObject = {};\n\n  if (props.servicesRequested.wash !== \"\") {\n    washPrice = props.provider.serviceObjects.wash.price;\n    poundsRequestedWash = parseFloat(props.servicesRequested.wash);\n    servicesRequestedObject[\"wash\"] = {\n      price: washPrice,\n      perPound: true,\n      poundsRequested: poundsRequestedWash,\n    };\n  }\n\n  if (props.servicesRequested.dryClean !== \"\") {\n    dryCleanPrice = props.provider.serviceObjects.dryClean.price;\n    poundsRequesteddryClean = parseFloat(props.servicesRequested.dryClean);\n    servicesRequestedObject[\"dryClean\"] = {\n      price: dryCleanPrice,\n      perPound: true,\n      poundsRequested: poundsRequesteddryClean,\n    };\n  }\n\n  if (props.servicesRequested.delivery) {\n    deliveryPrice = props.provider.serviceObjects.delivery.price;\n    servicesRequestedObject[\"delivery\"] = {\n      price: deliveryPrice,\n      perPound: false,\n    };\n  }\n\n  if (props.servicesRequested.fold) {\n    foldPrice = props.provider.serviceObjects.fold.price;\n    servicesRequestedObject[\"fold\"] = {\n      price: foldPrice,\n      perPound: false,\n    };\n  }\n\n  requestObject[\"servicesRequested\"] = servicesRequestedObject;\n  requestObject[\"totalCost\"] = props.totalCost;\n  requestObject[\"serviceComplete\"] = false;\n  requestObject[\"date\"] = props.servicesRequested.date;\n  requestObject[\"providerAccepted\"] = false;\n  requestObject[\"customerEmail\"] = props.customer.email;\n  requestObject[\"providerEmail\"] = props.provider.email;\n\n  // form component\n  return (\n    <div className=\"d-flex justify-content-end m-0\">\n      <form\n        className={classes.actions}\n        onSubmit={laundryCustomerConfirmSubmitHandler}\n      >\n        <button>{buttonText}</button>\n      </form>\n    </div>\n  );\n}\n\nexport default LaundryCustomerConfirm;\n","import { useState, useCallback } from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\nrequire(\"dotenv\").config();\nconst googleMapsKey = process.env.GOOGLE_MAPS_KEY;\n\nconst containerStyle = {\n  width: \"400px\",\n  height: \"400px\",\n};\n\nfunction GoogleMaps(props) {\n  // set google maps center to the first coordinates on the list\n  // else set at google HQ\n  let center;\n  const googleMapMarkers = [];\n\n  if (props.providerCoordinates.length > 0) {\n    center = {\n      lat: props.providerCoordinates[0].lat,\n      lng: props.providerCoordinates[0].lng,\n    };\n  } else {\n    center = {\n      lat: 37.423021,\n      lng: -122.083739,\n    };\n  }\n\n  props.providerCoordinates.forEach((coordinate, index) => {\n    console.log(index+1);\n    googleMapMarkers.push(\n      <Marker label={`${index+1}`} position={{ lat: coordinate.lat, lng: coordinate.lng }} />\n    );\n  });\n\n  const { isLoaded } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: googleMapsKey,\n  });\n\n  const [map, setMap] = useState(null);\n\n  const onLoad = useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n\n  const onUnmount = useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n\n  return isLoaded ? (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={center}\n      zoom={10}\n      onLoad={onLoad}\n      onUnmount={onUnmount}\n    >\n      {googleMapMarkers}\n    </GoogleMap>\n  ) : (\n    <></>\n  );\n}\n\nexport default GoogleMaps;\n","/* MICHAEL CHANG */\n\nimport PropTypes from \"prop-types\";\nimport LaundryRequestForm from \"../components/customer/newLaundryRequests/LaundryRequestForm\";\nimport LaundryCustomerConfirm from \"../components/customer/newLaundryRequests/LaundryCustomerConfirm\";\nimport GoogleMaps from \"../components/api/GoogleMaps.js\";\n\nimport { useState, useContext } from \"react\";\nimport UserLoginContext from \"../store/UserLoginContext\";\nimport Card from \"../components/ui/Card\";\n\nconst currencyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n});\n\nlet availableProviders = [];\nlet servicesRequested = {};\n\nfunction CustomerRequestService() {\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n\n  let providerCardRender = [];\n  let providerCards = [];\n  let providerCoordinates = [];\n\n  const [gotProivders, setGotProivders] = useState();\n  const [sortPriceLowHigh, setSortPriceLowHigh] = useState(false);\n  const [sortPriceHighLow, setSortPriceHighLow] = useState(false);\n  const [sortDistance, setSortDistance] = useState(false);\n\n  // set booleans for which sort is selected\n  function setSortPriceLowHighFunc() {\n    setSortPriceLowHigh(true);\n    setSortPriceHighLow(false);\n    setSortDistance(false);\n  }\n\n  function setSortPriceHighLowFunc() {\n    setSortPriceLowHigh(false);\n    setSortPriceHighLow(true);\n    setSortDistance(false);\n  }\n\n  function setSortDistanceFunc() {\n    setSortPriceLowHigh(false);\n    setSortPriceHighLow(false);\n    setSortDistance(true);\n  }\n\n  const laundryRequestFetch = async (data) => {\n    const response = await fetch(\"/api/laundryRequest\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    availableProviders = await response.json();\n    servicesRequested = data;\n\n    //I'm just setting true false back and forth for component to re-render\n    setGotProivders(!gotProivders);\n  };\n\n  // loop through the providers returned from backend\n  availableProviders.forEach((provider, index) => {\n    // calculate each costs\n    const laundryCost = servicesRequested.wash\n      ? provider.serviceObjects.wash.price * servicesRequested.wash\n      : 0;\n    const dryCleanCost = servicesRequested.dryClean\n      ? provider.serviceObjects.dryClean.price * servicesRequested.dryClean\n      : 0;\n    const foldingCost = servicesRequested.fold\n      ? provider.serviceObjects.fold.price\n      : 0;\n    const deliveryCost = servicesRequested.delivery\n      ? provider.serviceObjects.delivery.price\n      : 0;\n    const totalCost = laundryCost + dryCleanCost + foldingCost + deliveryCost;\n\n    // push into providerCards array\n    providerCards.push([\n      <div className=\"mt-2\">\n        <Card>\n          <div className=\"row pt-4 ps-4\">\n            <h3 className=\"d-flex justify-content-center\">\n              {index + 1}) {provider.companyName}\n            </h3>\n            <div className=\"row\">\n              <span className=\"col-12\">\n                <strong>Date: </strong> {servicesRequested.date}\n              </span>\n            </div>\n            <div className=\"row\">\n              <span className=\"col-12 mt-2\">\n                <strong>Email: </strong> {provider.email}\n              </span>\n              <span className=\"col-12\">\n                <strong>Phone Number: </strong> {provider.phoneNumber}\n              </span>\n              <span className=\"col-12 mt-2\">\n                <strong>Address: </strong> {provider.address}\n              </span>\n              <span className=\"col-6\">\n                <strong>City: </strong> {provider.city}\n              </span>\n              <span className=\"col-6\">\n                <strong>State: </strong> {provider.state}\n              </span>\n              <span className=\"col-6\">\n                <strong>Zip Code: </strong> {provider.zipCode}\n              </span>\n            </div>\n            <div className=\"row\">\n              <span className=\"col-6 mt-2\">\n                <strong>Laundry Cost: </strong>\n                {currencyFormatter.format(laundryCost)}\n              </span>\n              <span className=\"col-6 mt-2\">\n                <strong>Dry Cleaning Cost: </strong>\n                {currencyFormatter.format(dryCleanCost)}\n              </span>\n              <span className=\"col-6\">\n                <strong>Cost for Folding: </strong>\n                {currencyFormatter.format(foldingCost)}\n              </span>\n              <span className=\"col-6\">\n                <strong>Cost for Delivery: </strong>\n                {currencyFormatter.format(deliveryCost)}\n              </span>\n            </div>\n            <div className=\"row\">\n              <span className=\"d-flex justify-content-end mt-2\">\n                <strong>\n                  Total Costs:\n                  {currencyFormatter.format(totalCost)}\n                </strong>\n              </span>\n            </div>\n          </div>\n          <LaundryCustomerConfirm\n            provider={provider}\n            customer={userContext.userDetails}\n            servicesRequested={servicesRequested}\n            totalCost={totalCost}\n          />\n        </Card>\n      </div>,\n      servicesRequested.date,\n      totalCost,\n      provider.zipCode,\n    ]);\n\n    providerCoordinates.push(provider.geoCode.results[0].geometry.location);\n  });\n\n  if (sortPriceLowHigh) {\n    providerCards.sort((a, b) => a[2] - b[2]);\n  } else if (sortPriceHighLow) {\n    providerCards.sort((a, b) => b[2] - a[2]);\n  } else if (sortDistance) {\n    //assuming min(zipCode difference means closer by distance)\n    // 91754 - 91753 is closer than 91754 - 91640\n    providerCards.sort(\n      (a, b) =>\n        Math.abs(a[3] - userContext.userDetails.zipCode) -\n        Math.abs(b[3] - userContext.userDetails.zipCode)\n    );\n  }\n\n  //providerCards - [0] is provider Object [1] is date [2] is cost [3] is zipCode\n  // push cards[0] into an array to render in the react component\n  providerCards.forEach((card) => {\n    providerCardRender.push(card[0]);\n  });\n\n  function showCards() {\n    if (providerCardRender.length > 0) {\n      return providerCardRender;\n    } else {\n      return (\n        <h2 className=\"d-flex h-100 align-items-center justify-content-center\">\n          Go have fun! Let us do the chores! Request Today!!\n        </h2>\n      );\n    }\n  }\n\n  return (\n    <div>\n      <h1>Request Laundry Service</h1>\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <LaundryRequestForm\n            laundryRequestFetch={laundryRequestFetch}\n            providerCards={providerCards}\n            setSortPriceLowHighFunc={setSortPriceLowHighFunc}\n            setSortPriceHighLowFunc={setSortPriceHighLowFunc}\n            setSortDistanceFunc={setSortDistanceFunc}\n          />\n        </div>\n        <div className=\"col-5\">{showCards()}</div>\n        <div className=\"col-4\">\n          <GoogleMaps providerCoordinates={providerCoordinates} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nCustomerRequestService.propTypes = {\n  laundryRequestFetch: PropTypes.func,\n  setSortPriceLowHighFunc: PropTypes.func,\n  setSortPriceHighLowFunc: PropTypes.func,\n  setSortDistanceFunc: PropTypes.func,\n  providerCards: PropTypes.array,\n  provider: PropTypes.object,\n  customer: PropTypes.object,\n  servicesRequested: PropTypes.object,\n  totalCost: PropTypes.number,\n};\n\nexport default CustomerRequestService;\n","// DANIEL LISKO\n\nimport { useState, useEffect } from \"react\";\n\nconst EditService = ({\n  serviceItem,\n  modifyServiceDisplay,\n  onServiceEdit,\n  deleteService,\n  submitEdit,\n  services,\n}) => {\n  //Set up default service Options\n  let [serviceOptions, setServiceOptions] = useState(new Set());\n\n  //This will render every time we open create or decide to edit a service.\n  useEffect(() => {\n    updateServices();\n  }, []);\n\n  const updateServices = () => {\n    let serviceOpt = new Set([\"Wash\", \"Dry Clean\", \"Fold\", \"Delivery\"]);\n    services.forEach((service) => {\n      if (serviceOpt.has(service.service)) {\n        serviceOpt.delete(service.service);\n      }\n    });\n    setServiceOptions(serviceOpt);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    //Prevents user from submitting the default display.\n    if (serviceItem.service === \"\") {\n      return;\n    }\n    modifyServiceDisplay(serviceItem.serviceID, \"showEdit\");\n    serviceItem.showEdit = false;\n    submitEdit(serviceItem);\n  };\n\n  const handleInputChange = (e) => {\n    const target = e.target;\n    let value;\n\n    if (target.name === \"perPound\") {\n      if (target.value === \"true\") {\n        value = false;\n      } else {\n        value = true;\n      }\n    } else {\n      value = target.value;\n    }\n\n    onServiceEdit(serviceItem.serviceID, target.name, value);\n  };\n\n  const handleOnDelete = () => {\n    deleteService(serviceItem.serviceID);\n    modifyServiceDisplay(serviceItem.serviceID, \"showEdit\");\n  };\n\n  //Used to render options from dropdown service\n  const renderOptions = () => {\n    let options = new Set();\n    //Filter options that are already being useing\n\n    options.add(\n      <option value=\"\" disabled selected>\n        Select a service\n      </option>\n    );\n\n    if (serviceItem.service && !serviceOptions.has(serviceItem.service)) {\n      options.add(\n        <option value={serviceItem.service}>{serviceItem.service}</option>\n      );\n    }\n\n    serviceOptions.forEach((serviceOpt) => {\n      options.add(<option value={serviceOpt}>{serviceOpt}</option>);\n    });\n\n    return options;\n  };\n\n  const renderPerPoundBox = () => {\n    let output;\n    if (serviceItem.service === \"Dry Clean\" || serviceItem.service === \"Wash\") {\n      //Checks return if service item IS charging per pound\n      output = serviceItem.perPound ? (\n        <div className=\"form-check form-switch\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"perPound\"\n            id={\n              serviceItem.perPound\n                ? \"flexSwitchCheckChecked\"\n                : \"flexSwitchCheckDefault\"\n            }\n            value={serviceItem.perPound}\n            onChange={handleInputChange}\n            checked\n          />\n          <label\n            className=\"form-check-label\"\n            htmlFor={\n              serviceItem.perPound\n                ? \"flexSwitchCheckChecked\"\n                : \"flexSwitchCheckDefault\"\n            }\n          >\n            Charge per Pound?\n          </label>\n        </div>\n      ) : (\n        //Checks return if service item isn't charging per pound\n        <div className=\"form-check form-switch\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"perPound\"\n            id={\n              serviceItem.perPound\n                ? \"flexSwitchCheckChecked\"\n                : \"flexSwitchCheckDefault\"\n            }\n            value={serviceItem.perPound}\n            onChange={handleInputChange}\n          />\n          <label\n            className=\"form-check-label\"\n            htmlFor={\n              serviceItem.perPound\n                ? \"flexSwitchCheckChecked\"\n                : \"flexSwitchCheckDefault\"\n            }\n          >\n            Charge per Pound?\n          </label>\n        </div>\n      );\n    }\n    return output;\n  };\n\n  //-------------------To Render the Page--------\n\n  return (\n    <form key={serviceItem.serviceID} className=\"service\" onSubmit={onSubmit}>\n      <div>\n        <label htmlFor=\"service\">\n          <span>Select Service:</span>\n        </label>\n        <select\n          name=\"service\"\n          onChange={handleInputChange}\n          value={serviceItem.service}\n        >\n          {renderOptions()}\n        </select>\n        <div className=\"d-flex justify-content-center\">\n          {renderPerPoundBox()}\n        </div>\n      </div>\n      <div>\n        <label htmlFor=\"\">Fee:</label>\n        <input\n          type=\"number\"\n          step=\"0.01\"\n          min=\"0\"\n          max=\"100\"\n          name=\"price\"\n          placeholder={serviceItem.price}\n          onChange={handleInputChange}\n        />\n      </div>\n      <div className=\"col-12 d-flex justify-content-center\">\n        <button type=\"submit\" value=\"Save\" className=\"editBtn\">\n          Save\n        </button>\n        <button className=\"deleteBtn\" onClick={handleOnDelete}>\n          Delete\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default EditService;\n","// DANIEL LISKO\n\nconst Button = ({ serviceItem, modifyServiceDisplay, id }) => {\n  const handleClick = (e) => {\n    modifyServiceDisplay(serviceItem.serviceID, \"showDetails\");\n  };\n\n  return (\n    <span className=\"col-4 d-flex justify-content-center align-items-center\">\n      {serviceItem.showDetails ? (\n        <button id={id} onClick={handleClick} className=\"collapseBtn\">\n          &#8722;\n        </button>\n      ) : (\n        <button id={id} onClick={handleClick} className=\"collapseBtn\">\n          &#43;\n        </button>\n      )}\n    </span>\n  );\n};\n\nexport default Button;\n","// DANIEL LISKO\n\nimport Button from \"./Button.js\";\n\nconst Service = ({\n  serviceItem,\n  modifyServiceDisplay,\n  id,\n  deleteService,\n  setServices,\n}) => {\n  // handle edit button\n  const onEditClick = () => {\n    modifyServiceDisplay(serviceItem.serviceID, \"showEdit\");\n  };\n\n  const handleOnDelete = () => {\n    deleteService(serviceItem.serviceID);\n    modifyServiceDisplay(serviceItem.serviceID, \"showEdit\");\n  };\n\n  // //Details to display\n  const details = (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-7 pl-0\">\n          <h6>\n            Cost: $<span>{serviceItem.price}</span>\n          </h6>\n        </div>\n        <div className=\"col-5 d-flex justify-content-end\">\n          {serviceItem.perPound && <h6>Per lb.</h6>}\n        </div>\n      </div>\n      <div className=\"row \">\n        <div className=\"col-12 d-flex justify-content-center\">\n          <button className=\"editBtn\" onClick={onEditClick}>\n            Edit\n          </button>\n          <button className=\"deleteBtn\" onClick={handleOnDelete}>\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div key={serviceItem.serviceID} className=\"service row\">\n      <h5 className=\"serviceTitle col-8 pb-0\">\n        <span>{serviceItem.service}</span>\n      </h5>\n      <Button\n        serviceItem={serviceItem}\n        modifyServiceDisplay={modifyServiceDisplay}\n        id={id}\n      />\n      {serviceItem.showDetails && details}\n    </div>\n  );\n};\n\nexport default Service;\n","// DANIEL LISKO\n\nimport EditService from \"./EditService.js\";\nimport \"../providerPage.css\";\nimport Service from \"./Service\";\n\nconst Services = ({\n  services,\n  setServices,\n  modifyServiceDisplay,\n  onServiceEdit,\n}) => {\n  //Used to delete a service\n  const deleteService = (id) => {\n    services.forEach((s, i) => {\n      if (s.serviceID === id) {\n        services.splice(i, 1);\n      }\n      postService(services);\n    });\n\n    //Need to reset indexes or else keys will be off.\n    let updated = services.map((service, index) => {\n      return (service.serviceID = index);\n    });\n\n    setServices(updated);\n  };\n\n  const addService = () => {\n    console.log(\"ID =>\", services.length);\n    const newService = {\n      service: \"\",\n      price: 0.0,\n      perPound: false,\n      serviceID: services.length,\n      showDetails: false,\n      showEdit: true,\n    };\n    setServices([...services, newService]);\n  };\n\n  const submitEdit = async (service) => {\n    await postService([...services, service]);\n  };\n\n  const postService = async (services) => {\n    console.log(\"Posting\", services);\n    const res = await fetch(\"/api/updateServices\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email: localStorage.email, services: services }),\n    });\n  };\n\n  const renderServices = services.map((s, i) => {\n    if (s.showEdit) {\n      return (\n        <EditService\n          key={s.serviceID}\n          services={services}\n          serviceItem={s}\n          modifyServiceDisplay={modifyServiceDisplay}\n          onServiceEdit={onServiceEdit}\n          deleteService={deleteService}\n          submitEdit={submitEdit}\n        />\n      );\n    }\n\n    return (\n      <Service\n        key={s.serviceID}\n        id={i}\n        serviceItem={s}\n        modifyServiceDisplay={modifyServiceDisplay}\n        deleteService={deleteService}\n      />\n    );\n  });\n\n  return (\n    <div>\n      {renderServices}\n      <div>\n        <small> Services Remaining: {4 - services.length}</small>\n      </div>\n      <div className=\"d-flex justify-content-center\">\n        {services.length < 4 && (\n          <button onClick={addService}>Add Service</button>\n        )}{\" \"}\n      </div>\n    </div>\n  );\n};\n\nexport default Services;\n","import React from \"react\";\n\nconst RequestButtons = ({ request, setCustomerRequest, customersRequests }) => {\n  /*Helper function to modify displays when a button is pressed*/\n  const buttonModifiers = async (_id, toModify) => {\n    let updated = customersRequests.map((req) => {\n      let update;\n      if (req._id === _id) {\n        update = { ...req, [toModify]: !req[toModify] };\n        pushRequestUpdate({ ...req, [toModify]: !req[toModify] }); //Send response to the database.\n      } else {\n        update = req;\n      }\n      return update;\n    });\n\n    customersRequests = updated;\n    setCustomerRequest(customersRequests);\n  };\n\n  const pushRequestUpdate = async (toUpdate) => {\n    await fetch(\"/api/updateCustomerRequest\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(toUpdate),\n    });\n  };\n\n  /*----------Buttons obitoins for hanlding Customer Request-------------*/\n  const handleAcceptClick = async () => {\n    await buttonModifiers(request._id, \"providerAccepted\");\n  };\n\n  const handleRejectClick = async () => {\n    await buttonModifiers(request._id, \"serviceRejected\");\n  };\n\n  const handleServCompleteClick = async () => {\n    await buttonModifiers(request._id, \"serviceComplete\");\n  };\n\n  const renderButtons = () => {\n    if (request.providerAccepted) {\n      return (\n        <button\n          className=\"submitCompletedSrv\"\n          type=\"button\"\n          onClick={handleServCompleteClick}\n        >\n          Service Complete\n        </button>\n      );\n    } else {\n      return [\n        <div className=\"col-6 p-1\">\n          <button\n            className=\"acptRejBtn\"\n            type=\"button\"\n            onClick={handleAcceptClick}\n          >\n            Accept\n          </button>\n        </div>,\n        <div className=\"col-6 p-1\">\n          <button\n            className=\"acptRejBtn\"\n            type=\"button\"\n            onClick={handleRejectClick}\n          >\n            Reject\n          </button>\n        </div>,\n      ];\n    }\n  };\n\n  return <div className=\"row\">{renderButtons()}</div>;\n};\n\nexport default RequestButtons;\n","import React from \"react\";\nimport RequestButtons from \"./RequestButtons.js\";\n\nconst requestCard = ({ request, setCustomerRequest, customersRequests }) => {\n  const servicesRequested = request.servicesRequested;\n\n  const renderServices = () => {\n    let listServices = new Set();\n\n    for (const service in servicesRequested) {\n      const serviceStr = service.charAt(0).toUpperCase() + service.slice(1);\n\n      if (servicesRequested[service].perPound) {\n        listServices.add(\n          <li>\n            <strong>{serviceStr}</strong>: ${servicesRequested[service].price}{\" \"}\n            Per lb.\n          </li>\n        );\n      } else {\n        listServices.add(\n          <li>\n            <strong>{serviceStr}</strong>\n          </li>\n        );\n      }\n    }\n    return listServices;\n  };\n\n  return (\n    <div className=\"card col-4\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{request.customerEmail}</h5>\n        <h6 className=\"card-subtitle mb-2 text-muted\">\n          Requested: {request.date}\n        </h6>\n        <h6 className=\"card-subtitle mt-4\">Services Requested:</h6>\n\n        <ul>{renderServices()}</ul>\n\n        <p>\n          <strong>Total Cost:</strong> ${request.totalCost}\n        </p>\n        <RequestButtons\n          request={request}\n          setCustomerRequest={setCustomerRequest}\n          customersRequests={customersRequests}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default requestCard;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport CustomerReqCard from \"./requestCard.js\";\n\nconst CustomerReqDetails = ({\n  sortRequests,\n  customersRequests,\n  setCustomerRequest,\n}) => {\n  //Fetch all cusomter requests\n  //Requires a String of the providers email.\n  // const fetchCustomerRequest = async (emailStr) => {\n  //   const emailObj = { providerEmail: emailStr };\n  //   const res = await fetch(\"/api/allCustomerLaundryRequest\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(emailObj),\n  //   });\n\n  //   const allCustomerRequests = await res.json();\n\n  //   return allCustomerRequests;\n  // };\n\n  const renderRequest = customersRequests.map((request, i) => {\n    if (request.serviceRejected === undefined && !request.serviceComplete) {\n      return (\n        <CustomerReqCard\n          key={request._id}\n          request={request}\n          setCustomerRequest={setCustomerRequest}\n          customersRequests={customersRequests}\n        />\n      );\n    } else {\n      return \"\";\n    }\n  });\n\n  // useEffect(() => {\n  //   let tmpCustomerRequest;\n  //   const getReq = async () => {\n  //     tmpCustomerRequest = await fetchCustomerRequest(localStorage.email);\n  //     sortRequests(tmpCustomerRequest);\n  //     setCustomerRequest(tmpCustomerRequest);\n  //   };\n\n  //   getReq();\n  // }, []);\n\n  return <div className=\"row\">{renderRequest}</div>;\n};\n\nexport default CustomerReqDetails;\n","import React from \"react\";\n\nconst sortBar = ({\n  setDisplayOptions,\n  displayOptions,\n  sortRequests,\n  setCustomerRequest,\n  customersRequests,\n}) => {\n  const handleChange = async (e) => {\n    displayOptions.displayBy = e.target.value;\n    setDisplayOptions(displayOptions);\n    sortRequests(customersRequests);\n    setCustomerRequest([...customersRequests]);\n  };\n\n  return (\n    <div className=\"row\">\n      <nav class=\"navbar navbar-expand-lg navbar-light bg-light mb-2\">\n        <label className=\"navbar-brand\">Sort By:</label>\n        <div className=\"col-2.5\">\n          <select\n            className=\"form-control\"\n            id=\"inlineFormCustomSelect\"\n            onChange={handleChange}\n          >\n            <option value=\"requestDate\">Date Requested</option>\n            <option value=\"totalCharge\">Total Cost</option>\n          </select>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default sortBar;\n","// DANIEL LISKO\n\nimport { useState, useEffect } from \"react\";\nimport Services from \"../components/provider/providerServices/Services.js\";\nimport CustomerReqDetails from \"../components/provider/customerRequests/CustomerReqDetails.js\";\nimport SortBar from \"../components/provider/sortBar/SortBar.js\";\n\nconst ProviderPage = () => {\n  let [services, setServices] = useState([]);\n  let [customersRequests, setCustomerRequest] = useState([]);\n\n  /*------------Set Display Options----------*/\n  let [displayOptions, setDisplayOptions] = useState({\n    displayBy: \"requestDate\",\n  });\n  let [ascendingOrder, setAscendingOrder] = useState(false);\n\n  //Load storted services and requested services\n  useEffect(() => {\n    let tmpCustomerRequest;\n    //Get services offered -> set display to false\n    const loadServices = async () => {\n      let services = await getProviderServices(localStorage.email);\n      setServices(services);\n    };\n\n    const getReq = async () => {\n      tmpCustomerRequest = await fetchCustomerRequest(localStorage.email);\n      sortRequests(tmpCustomerRequest);\n      setCustomerRequest(tmpCustomerRequest);\n    };\n\n    getReq();\n    loadServices();\n  }, []);\n\n  const sortRequests = (requests) => {\n    switch (displayOptions.displayBy) {\n      case \"requestDate\":\n        if (ascendingOrder) {\n          requests.sort((a, b) =>\n            new Date(a.date) > new Date(b.date) ? 1 : -1\n          );\n        } else {\n          requests.sort((a, b) =>\n            new Date(a.date) < new Date(b.date) ? 1 : -1\n          );\n        }\n        break;\n      case \"totalCharge\":\n        if (ascendingOrder) {\n          requests.sort((a, b) => (a.totalCost > b.totalCost ? 1 : -1));\n        } else {\n          requests.sort((a, b) => (a.totalCost < b.totalCost ? 1 : -1));\n        }\n        break;\n\n      default:\n        console.log(\"No Case\");\n        break;\n    }\n\n    console.log(\"DISPLAYINH\", requests);\n  };\n\n  //Changes the displays to either being visibile or not visibile\n  const modifyServiceDisplay = (id, toModify) => {\n    let updated = services.map((service) => {\n      let update;\n      if (service.serviceID === id) {\n        update = { ...service, [toModify]: !service[toModify] };\n      } else {\n        update = service;\n      }\n\n      return update;\n    });\n\n    setServices(updated);\n  };\n\n  //Handle Service Edits\n  const onServiceEdit = (id, item, value) => {\n    let updated = services.map((serviceItem) => {\n      let update;\n      if (serviceItem.serviceID === id) {\n        update = { ...serviceItem, [item]: value };\n      } else {\n        update = serviceItem;\n      }\n      return update;\n    });\n\n    setServices(updated);\n  };\n\n  //----------Handling Post-----------------//\n  const getProviderServices = async (email) => {\n    const res = await fetch(\"/api/getServices\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email: email }),\n    });\n\n    const resJSON = await res.json();\n\n    return resJSON;\n  };\n  // Fetch all cusomter requests\n  // Requires a String of the providers email.\n  const fetchCustomerRequest = async (emailStr) => {\n    const emailObj = { providerEmail: emailStr };\n    const res = await fetch(\"/api/allCustomerLaundryRequest\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(emailObj),\n    });\n\n    const allCustomerRequests = await res.json();\n\n    return allCustomerRequests;\n  };\n\n  // Sending and Recieving services\n\n  return (\n    <div>\n      <div>\n        <h1>Provider Page</h1>\n        <div className=\"row\">\n          <div className=\"serviceDetails col-3\">\n            <h3>Services By You:</h3>\n            <Services\n              services={services}\n              modifyServiceDisplay={modifyServiceDisplay}\n              onServiceEdit={onServiceEdit}\n              setServices={setServices}\n            />\n          </div>\n\n          <div className=\"col-8\" id=\"requestedServices\">\n            <SortBar\n              setDisplayOptions={setDisplayOptions}\n              displayOptions={displayOptions}\n              sortRequests={sortRequests}\n              setCustomerRequest={setCustomerRequest}\n              customersRequests={customersRequests}\n            />\n            <CustomerReqDetails\n              sortRequests={sortRequests}\n              customersRequests={customersRequests}\n              setCustomerRequest={setCustomerRequest}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProviderPage;\n","// DANIEL LISKO\n\nfunction ProviderDetailsPage() {\n  return (\n    <div>\n      <h1>Proivder Details Page</h1>\n    </div>\n  );\n}\n\nexport default ProviderDetailsPage;\n","/* MICHAEL CHANG & DANIEL LISKO */\n\nimport \"./App.css\";\n\nimport { Routes, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport RedirectHome from \"./pages/RedirectHome.js\";\nimport SignUp from \"./pages/SignUp\";\nimport Login from \"./pages/Login\";\nimport SignUpProviders from \"./pages/SignUpProviders\";\nimport SignUpCustomers from \"./pages/SignUpCustomers\";\nimport Layout from \"./components/layout/Layout\";\nimport CustomerDetailsPage from \"./pages/CustomerDetailsPage\";\nimport CustomerRequestService from \"./pages/CustomerRequestService\";\nimport ProviderPage from \"./pages/ProviderPage\";\nimport ProviderDetailsPage from \"./pages/ProviderDetailsPage\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/SignUp\" element={<SignUp />} />\n        <Route path=\"/Login\" element={<Login />} />\n        <Route path=\"/signUpProviders\" element={<SignUpProviders />} />\n        <Route path=\"/signUpCustomers\" element={<SignUpCustomers />} />\n        <Route path=\"/CustomerDetailspage\" element={<CustomerDetailsPage />} />\n        <Route\n          path=\"/CustomerRequestService\"\n          element={<CustomerRequestService />}\n        />\n        <Route path=\"/ProviderPage\" element={<ProviderPage />} />\n        <Route path=\"/ProviderDetailspage\" element={<ProviderDetailsPage />} />\n        <Route path=\"/redirectHome\" element={<RedirectHome />} />\n      </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n","/* MICHAEL CHANG & DANIEL LISKO */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { UserLoginContextProvider } from \"./store/UserLoginContext\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <UserLoginContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </UserLoginContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}