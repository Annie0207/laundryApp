{"version":3,"sources":["components/signups/SignUpCustomerForm.module.css","components/customer/newLaundryRequests/LaundryRequestForm.module.css","components/customer/customerDetailsAndRequests/CustomerDetailsForm.module.css","components/login/LoginForm.module.css","components/layout/MainNavigation.module.css","components/ui/Card.module.css","components/layout/Layout.module.css","components/customer/newLaundryRequests/LaundryCustomerConfirm.module.css","store/UserLoginContext.js","images/homeLandingLaundry.jpg","pages/Home.js","pages/RedirectHome.js","images/laundryUser.jpg","images/laundryProvider.jpg","components/ui/Card.js","pages/SignUp.js","components/login/LoginForm.js","pages/Login.js","components/signups/SignUpProviderForm.js","pages/SignUpProviders.js","components/signups/SignUpCustomerForm.js","pages/SignUpCustomers.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/customer/customerDetailsAndRequests/CustomerDetailsForm.js","components/customer/customerDetailsAndRequests/CustomerLaundryRequestCards.js","components/customer/customerDetailsAndRequests/CustomerLaundryRequestDetails.js","pages/CustomerDetailsPage.js","components/customer/newLaundryRequests/LaundryRequestForm.js","components/api/GoogleMapReact.js","components/customer/newLaundryRequests/LaundryCustomerConfirm.js","components/customer/newLaundryRequests/ProviderCards.js","pages/CustomerRequestService.js","components/provider/providerServices/EditService.js","components/provider/providerServices/Button.js","components/provider/providerServices/Service.js","components/provider/Modal/ModalCheck.js","components/provider/providerServices/Services.js","components/provider/customerRequests/RequestButtons.js","components/provider/customerRequests/RequestCard.js","components/provider/customerRequests/CustomerReqDetails.js","components/provider/sortBar/DisplayToggles.js","components/provider/sortBar/SortBar.js","pages/ProviderPage.js","pages/ProviderDetailsPage.js","App.js","index.js"],"names":["module","exports","UserLoginContext","createContext","userDetails","loginStatus","loginSuccess","localStorage","getItem","UserLoginContextProvider","props","setUserDetails","useState","setLoginStatus","findUserDetails","async","response","fetch","method","headers","body","JSON","stringify","data","json","useEffect","userType","credentials","email","setData","context","addUserDetailsHandler","details","key","value","Object","entries","removeUserDetailsHandler","bool","user","Provider","children","Home","className","style","height","width","objectFit","src","homeLandingLaundry","alt","href","RedirectHome","navigate","useNavigate","setTimeout","Card","classes","card","SignUp","to","laundryProvider","laundryUser","LoginForm","errorMessage","setErrorMessage","emailRef","useRef","passwordRef","userContext","useContext","form","onSubmit","event","preventDefault","loginData","current","password","loginHandler","error","setItem","control","htmlFor","type","placeholder","required","name","ref","actions","Login","SignUpProviderForm","postProviderData","providerInfo","setProviderInfo","companyName","firstName","lastName","phoneNumber","address","city","state","zipCode","confirmPassword","phoneNumberRef","handleChange","target","match","replace","join","console","log","id","onChange","pattern","SignUpProviders","SignUpCustomerForm","passwordErrorMessage","setPasswordErrorMessage","emailErrorMessage","setEmailErrorMessage","firstNameRef","lastNameRef","confirmPasswordRef","addressRef","cityRef","zipCodeRef","stateRef","passwordChangeHandler","customerFirstName","customerLastName","customerEmail","customerPassword","customerConfirmPassword","customerAddress","customerCity","customerZipCode","customerState","customerPhoneNumber","customerData","createCustomerFetch","includes","findEmailFetch","undefined","SignUpCustomers","MainNavigation","logoutHandler","clear","linksRender","push","logout","onClick","header","logo","Layout","main","CustomerDetailsForm","formEdit","setFormEdit","buttonText","setButtonText","customerDataChanged","updateUserDetailsFetch","defaultValue","disabled","currencyFormatter","Intl","NumberFormat","currency","CustomerLaundryRequestCards","request","providerDetails","date","providerEmail","providerAccepted","toString","serviceComplete","format","totalCost","refreshButton","CustomerLaundryRequestDetails","allCustomerRequests","setAllCustomerRequests","fetchData","setFetchData","temp","allCustomerLaundryRequestsFetch","sort","a","b","Date","parse","listOfProviderEmails","Set","add","Array","from","getProviderDetails","forEach","provider","getLaundryRequestData","customerRequestsRender","length","CustomerDetailsPage","LaundryRequestForm","poundsOfLaundryRef","foldRef","poundsOfDryCleanRef","deliveryRef","dateRef","readyToWashButton","setReadyToWashButton","dateErrorMessage","setDateErrorMesssage","dryCleanForm","setDryCleanForm","washForm","setWashForm","poundsOfLaundry","fold","checked","poundsOfDryClean","delivery","today","laundryRequestData","wash","dryClean","laundryRequestFetch","checkBoxControl","textControl","providerCards","setSortPriceLowHighFunc","setSortPriceHighLowFunc","setSortDistanceFunc","Deleter","mapRef","parentElement","removeAttribute","er","require","config","GoogleMap","googleMapMarkers","defaultProps","providerCoordinates","center","lat","lng","zoom","Marker","color","background","padding","display","textAlign","alignItems","justifyContent","borderRadius","index","coordinate","bootstrapURLKeys","process","GOOGLE_API_KEY","LaundryCustomerConfirm","washPrice","poundsRequestedWash","dryCleanPrice","poundsRequesteddryClean","deliveryPrice","foldPrice","requestObject","servicesRequestedObject","servicesRequested","serviceObjects","price","parseFloat","perPound","poundsRequested","customer","laundryCustomerConfirmFetch","ProviderCards","laundryCost","foldingCost","dryCleanCost","deliveryCost","distance","availableProviders","CustomerRequestService","providerCardRender","gotProivders","setGotProivders","sortPriceLowHigh","setSortPriceLowHigh","sortPriceHighLow","setSortPriceHighLow","sortDistance","setSortDistance","haversine_distance","mk1","mk2","rlat1","Math","PI","rlat2","difflat","difflon","asin","sqrt","sin","cos","toFixed","geoCode","results","geometry","location","origin","GoogleMapReact","EditService","serviceItem","modifyServiceDisplay","onServiceEdit","handlePromp","submitEdit","services","setDeleteID","serviceOptions","setServiceOptions","updateServices","serviceOpt","service","has","delete","handleInputChange","e","serviceID","showEdit","options","selected","renderOptions","output","renderPerPoundBox","step","min","max","Button","handleClick","showDetails","Service","setServices","ModalCheck","setShow","show","deleteService","deleteID","buttonModifiers","promptMessage","promptHeader","handleClose","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Footer","variant","Error","Services","whichModal","setWhichModal","i","s","splice","postService","renderServices","map","toRender","renderModal","newService","RequestButtons","setCustomerRequest","customersRequests","accpetedRequest","setAcceptRequest","handleAcceptClick","_id","handleRejectClick","handleServCompleteClick","requestCard","listServices","serviceStr","charAt","toUpperCase","slice","CustomerReqDetails","sortRequests","toModify","updated","req","pushRequestUpdate","toUpdate","renderRequest","serviceRejected","DisplayToggles","fetchCustomerRequest","showRequest","setShowRequest","filterRequest","reqData","filter","role","autoComplete","SortBar","setDisplayOptions","displayOptions","setOrderDirection","orderDirection","title","displayBy","ProviderPage","tmpCustomerRequest","getReq","getProviderServices","keys","loadServices","requests","res","emailObj","emailStr","setBoolean","update","item","ProviderDetailsPage","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94899f26.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SignUpCustomerForm_form__HR3OO\",\"error\":\"SignUpCustomerForm_error__3CD6u\",\"control\":\"SignUpCustomerForm_control__2TBwh\",\"actions\":\"SignUpCustomerForm_actions__27TDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LaundryRequestForm_form__-Bhjx\",\"error\":\"LaundryRequestForm_error__2Xq1J\",\"textControl\":\"LaundryRequestForm_textControl__39e9E\",\"checkBoxControl\":\"LaundryRequestForm_checkBoxControl__bPezt\",\"actions\":\"LaundryRequestForm_actions__l5BM4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CustomerDetailsForm_form__3wqGk\",\"error\":\"CustomerDetailsForm_error__2BiXN\",\"control\":\"CustomerDetailsForm_control__opoa3\",\"actions\":\"CustomerDetailsForm_actions__1emt0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__1c99a\",\"error\":\"LoginForm_error__i9owo\",\"control\":\"LoginForm_control__3T3Ps\",\"actions\":\"LoginForm_actions__33BbP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"active\":\"MainNavigation_active__oN3Ka\",\"logout\":\"MainNavigation_logout__3fhIF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3_jzl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"LaundryCustomerConfirm_actions__283hK\"};","/* MICHAEL CHANG */\n\nimport { createContext, useState, useEffect } from \"react\";\n\n// create context\nconst UserLoginContext = createContext({\n  userDetails: {},\n  loginStatus: false,\n});\n\n// check localStorage\nconst loginSuccess = localStorage.getItem(\"loginSuccess\");\n\nexport function UserLoginContextProvider(props) {\n  const [userDetails, setUserDetails] = useState({});\n  const [loginStatus, setLoginStatus] = useState(false);\n\n  function setLoginStatusCtx(bool) {\n    setLoginStatus(bool);\n  }\n\n  function setUserDetailsCtx(user) {\n    setUserDetails(user);\n  }\n\n  function addUserDetailsHandler(details) {\n    for (const [key, value] of Object.entries(details)) {\n      setUserDetails({ ...userDetails, [key]: value });\n    }\n  }\n\n  function removeUserDetailsHandler() {\n    setUserDetails();\n  }\n\n  // fetch for userDetails\n  const findUserDetails = async (data) => {\n    const response = await fetch(\"/api/findUserDetails\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n    return await response.json();\n  };\n\n  // if localStorage is \"true\" (NOTE: localStorage only stores strings)\n  useEffect(() => {\n    if (loginSuccess === \"true\") {\n      const setData = async () => {\n        const userType = localStorage.getItem(\"userType\");\n        const email = localStorage.getItem(\"email\");\n        const credentials = { email: email, userType: userType };\n        setUserDetails(await findUserDetails(credentials));\n        setLoginStatus(true);\n      };\n      setData();\n    }\n  }, []);\n\n  const context = {\n    userDetails: userDetails,\n    loginStatus: loginStatus,\n    addUserDetailsHandler: addUserDetailsHandler,\n    removeUserDetailsHandler: removeUserDetailsHandler,\n    findUserDetails: findUserDetails,\n    setLoginStatus: setLoginStatusCtx,\n    setUserDetails: setUserDetailsCtx,\n  };\n\n  return (\n    <UserLoginContext.Provider value={context}>\n      {props.children}\n    </UserLoginContext.Provider>\n  );\n}\n\nexport default UserLoginContext;\n","export default __webpack_public_path__ + \"static/media/homeLandingLaundry.315cce71.jpg\";","/* MICHAEL CHANG & DANIEL LISKO */\n\nimport homeLandingLaundry from \"../images/homeLandingLaundry.jpg\";\n\nfunction Home() {\n  return (\n    <div>\n      <h1>Hamper Dash</h1>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <p>\n            Welcome to Hamper Dash!! We connect you to the best launderers\n            around so you can save time and focus on what matters, instead of\n            laundry chores. We offer registration as a laundry provider (to\n            provide laundry services) on our platform, or as a laundry user (get\n            your laundry cleaned).\n          </p>\n        </div>\n        <div className=\"col-12\">\n          <img\n            style={{\n              height: \"100%\",\n              width: \"100%\",\n              objectFit: \"contain\",\n            }}\n            src={homeLandingLaundry}\n            alt=\"Nice and neat laundry room\"\n          />\n          Picture from{\" \"}\n          <a href=\"https://www.rd.com/wp-content/uploads/2021/09/GettyImages-1181334518-MLedit.jpg?resize=700,467\">\n            rd.com\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/* MICHAEL CHANG */\n\nimport { useNavigate } from \"react-router-dom\";\n\nfunction RedirectHome() {\n  const navigate = useNavigate();\n\n  function delayedRedirectHome() {\n    setTimeout(() => {\n      navigate(\"/\");\n    }, 3000);\n  }\n\n  delayedRedirectHome();\n\n  return (\n    <div>\n      <p>Thanks! Redirecting to Home....</p>\n    </div>\n  );\n}\n\nexport default RedirectHome;\n","export default __webpack_public_path__ + \"static/media/laundryUser.542ff844.jpg\";","export default __webpack_public_path__ + \"static/media/laundryProvider.941f55cc.jpg\";","// MICHAEL CHANG & DANIEL LISKO\n\nimport classes from \"./Card.module.css\";\n\nfunction Card(props) {\n  return <div className={classes.card}>{props.children}</div>;\n}\n\nexport default Card;\n","/* MICHAEL CHANG & DANIEL LISKO*/\n\nimport laundryUser from \"../images/laundryUser.jpg\";\nimport laundryProvider from \"../images/laundryProvider.jpg\";\n\nimport { Link } from \"react-router-dom\";\nimport Card from \"../components/ui/Card\";\n\nfunction SignUp() {\n  return (\n    <div>\n      <h1>Sign Up Page</h1>\n      <div className=\"row\">\n        <div className=\"col-6 d-flex justify-content-center\">\n          <Link to=\"/signUpProviders\">\n            <Card>\n              <div className=\"d-flex justify-content-center\">\n                <h2>I am a laundry provider! I can wash!</h2>\n              </div>\n              <div className=\"d-flex justify-content-center\">\n                <img\n                  style={{\n                    height: \"100%\",\n                    width: \"100%\",\n                    objectFit: \"contain\",\n                  }}\n                  src={laundryProvider}\n                  alt=\"Worker holding freshly cleaned towels at a laundry provider business\"\n                />\n              </div>\n              <div>\n                Picture from{\" \"}\n                <a href=\"https://boltlaundry.com/wp-content/uploads/2021/01/Commercial-Laundry-Service-In-Knoxville-TN.jpg\">\n                  boltlaundry.com\n                </a>\n              </div>\n            </Card>\n          </Link>\n        </div>\n        <div className=\"col-6 \">\n          <Link to=\"/signUpCustomers\">\n            <Card>\n              <div className=\"d-flex justify-content-center\">\n                <h2>I like my laundry clean and spotless!</h2>\n              </div>\n              <div className=\"d-flex justify-content-center\">\n                <img\n                  style={{\n                    height: \"100%\",\n                    width: \"100%\",\n                    objectFit: \"contain\",\n                  }}\n                  src={laundryUser}\n                  alt=\"Woman doing laundry with a smile\"\n                />\n              </div>\n              <div>\n                Picture from{\" \"}\n                <a href=\"https://www.wash.com/wp-content/uploads/2019/04/woman-doing-laundry.jpg\">\n                  wash.com\n                </a>\n              </div>\n            </Card>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n","//MICHAEL CHANG\n\nimport { useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Card from \"../ui/Card\";\nimport classes from \"./LoginForm.module.css\";\n\nimport { useContext } from \"react\";\nimport UserLoginContext from \"../../store/UserLoginContext\";\n\nfunction LoginForm(props) {\n  // initailize react hooks\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n\n  // onSubmit customer form handler\n  const loginSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    const loginEmail = emailRef.current.value;\n    const loginPassword = passwordRef.current.value;\n\n    const loginData = {\n      email: loginEmail,\n      password: loginPassword,\n    };\n\n    const response = await props.loginHandler(loginData);\n\n    // if the response is an error\n    if (response.error) {\n      setErrorMessage(response.error);\n    } else {\n      // set localStorage with customer info\n      localStorage.setItem(\"email\", response.email);\n      localStorage.setItem(\"userType\", response.userType);\n      localStorage.setItem(\"loginSuccess\", true);\n\n      const setData = async () => {\n        const userType = localStorage.getItem(\"userType\");\n        const email = localStorage.getItem(\"email\");\n        const credentials = { email: email, userType: userType };\n        userContext.setUserDetails(\n          await userContext.findUserDetails(credentials)\n        );\n        userContext.setLoginStatus(true);\n      };\n      setData();\n\n      //navigate to Customer Request page or Provider Service Page\n      if (response.userType === \"customer\") {\n        navigate(\"/CustomerRequestService\");\n      } else {\n        navigate(\"/ProviderPage\");\n      }\n    }\n  };\n\n  // form component\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={loginSubmitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">E-mail</label>\n          <input\n            type=\"email\"\n            placeholder=\"email@email.com\"\n            required\n            name=\"email\"\n            ref={emailRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            name=\"password\"\n            ref={passwordRef}\n          />\n        </div>\n        <div className={classes.error}>\n          <p>{errorMessage}</p>\n        </div>\n        <div className={classes.actions}>\n          <button>Login</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default LoginForm;\n","/* MICHAEL CHANG */\nimport PropTypes from \"prop-types\";\nimport LoginForm from \"../components/login/LoginForm\";\n\nfunction Login() {\n  async function loginHandler(data) {\n    const response = await fetch(\"/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    return await response.json();\n  }\n\n  return (\n    <div>\n      <h1>Login Page</h1>\n\n      <LoginForm loginHandler={loginHandler} />\n    </div>\n  );\n}\n\nLogin.propTypes = {\n  loginHandler: PropTypes.func,\n};\n\nexport default Login;\n","// DANIEL LISKO\n\nimport Card from \"../ui/Card\";\nimport \"./SignUpProvide.css\";\nimport { useState, useRef } from \"react\";\n\nconst SignUpProviderForm = ({ postProviderData }) => {\n  const [providerInfo, setProviderInfo] = useState({\n    userType: \"provider\",\n    companyName: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phoneNumber: \"\",\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    zipCode: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const phoneNumberRef = useRef();\n\n  const handleChange = (event) => {\n    const name = event.target.name;\n    let value = event.target.value;\n\n    //Format the number if it's missing the \"-\"\n    if (event.target.name === \"phoneNumber\") {\n      const phoneNumber = phoneNumberRef.current.value;\n      const cleaned = (\"\" + phoneNumber).replace(/\\D/g, \"\");\n      const match = cleaned.match(/^(1|)?(\\d{3})(\\d{3})(\\d{4})$/);\n      if (match) {\n        phoneNumberRef.current.value = [\n          match[2],\n          \"-\",\n          match[3],\n          \"-\",\n          match[4],\n        ].join(\"\");\n      }\n      value = phoneNumberRef.current.value;\n    }\n\n    setProviderInfo({ ...providerInfo, [name]: value });\n  };\n\n  console.log(providerInfo);\n\n  //Hanle submit\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    postProviderData(providerInfo);\n  };\n\n  return (\n    <Card>\n      <form onSubmit={handleSubmit}>\n        <h2>Contact Info</h2>\n        <div className=\"fullLengthIn\">\n          <label htmlFor=\"companyName\">Company Name</label>\n          <input\n            type=\"text\"\n            name=\"companyName\"\n            id=\"companyName\"\n            placeholder=\"Enter Company Name\"\n            value={providerInfo.companyName}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <div className=\"inline\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input\n              type=\"text\"\n              name=\"firstName\"\n              value={providerInfo.firstName}\n              id=\"firstName\"\n              placeholder=\"Enter First Name\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"inline\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input\n              type=\"text\"\n              name=\"lastName\"\n              value={providerInfo.lastName}\n              id=\"lastName\"\n              placeholder=\"Enter Last Name\"\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n        <div>\n          <div className=\"inline\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter Email\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"inline\">\n            <label htmlFor=\"phoneNumber\">Phone</label>\n            <input\n              type=\"tel\"\n              name=\"phoneNumber\"\n              id=\"phoneNumber\"\n              pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n              placeholder=\"XXX-XXX-XXXX\"\n              onChange={handleChange}\n              ref={phoneNumberRef}\n            />\n          </div>\n        </div>\n        <h2>Address</h2>\n        <div>\n          <div className=\"fullLengthIn\">\n            <label htmlFor=\"address\">Address Line</label>\n            <input\n              name=\"address\"\n              id=\"address1\"\n              type=\"text\"\n              onChange={handleChange}\n            />\n          </div>\n\n          <div className=\"inline\">\n            <label htmlFor=\"city\">City</label>\n            <input name=\"city\" id=\"city\" type=\"text\" onChange={handleChange} />\n          </div>\n          <div className=\"inline\">\n            <label htmlFor=\"state\">State</label>\n            <input\n              name=\"state\"\n              id=\"state\"\n              type=\"text\"\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"zipCode\">Zip Code</label>\n          </div>\n          <input\n            name=\"zipCode\"\n            id=\"zipCode\"\n            type=\"number\"\n            onChange={handleChange}\n          />\n        </div>\n        <h2>Password</h2>\n\n        <div>\n          <div className=\"inline\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              name=\"password\"\n              id=\"password\"\n              type=\"password\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"inline\">\n            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n            <input\n              name=\"confirmPassword\"\n              id=\"confirmPassword\"\n              type=\"password\"\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n        <div className=\"flex-parent jc-center\">\n          <button type=\"submit\">Create Account</button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default SignUpProviderForm;\n","/* DANIEL LISKO */\n\nimport ProviderForm from \"../components/signups/SignUpProviderForm\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst SignUpProviders = () => {\n  let navigate = useNavigate();\n  const postProviderData = async (data) => {\n    delete data.confirmPassword;\n\n    fetch(\"api/createCustomer\", {\n      method: \"POST\", // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n    navigate(\"/\");\n  };\n\n  return (\n    <div>\n      <h1>Laundry Service Provider Sign Up</h1>\n      <ProviderForm postProviderData={postProviderData} />\n    </div>\n  );\n};\n\nexport default SignUpProviders;\n","// MICHAEL CHANG\n\nimport { useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Card from \"../ui/Card\";\nimport classes from \"./SignUpCustomerForm.module.css\";\n\nfunction SignUpCustomerForm(props) {\n  // state variables\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(\"\");\n  const [emailErrorMessage, setEmailErrorMessage] = useState(\"\");\n\n  // navigate variable\n  const navigate = useNavigate();\n\n  // reference varaibles\n  const firstNameRef = useRef();\n  const lastNameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const confirmPasswordRef = useRef();\n  const addressRef = useRef();\n  const cityRef = useRef();\n  const zipCodeRef = useRef();\n  const stateRef = useRef();\n  const phoneNumberRef = useRef();\n\n  // onChange password && confirmPassword input handler\n  const passwordChangeHandler = async (event) => {\n    const password = passwordRef.current.value;\n    const confirmPassword = confirmPasswordRef.current.value;\n\n    if (password !== confirmPassword) {\n      setPasswordErrorMessage(\"Passwords do not match!\");\n    } else {\n      setPasswordErrorMessage(\"\");\n    }\n  };\n\n  //https://stackoverflow.com/questions/8358084/regular-expression-to-reformat-a-us-phone-number-in-javascript\n  // onChange phoneNumber input handler\n  const phoneNumberChangeHandler = async (event) => {\n    const phoneNumber = phoneNumberRef.current.value;\n    const cleaned = (\"\" + phoneNumber).replace(/\\D/g, \"\");\n    const match = cleaned.match(/^(1|)?(\\d{3})(\\d{3})(\\d{4})$/);\n    if (match) {\n      phoneNumberRef.current.value = [\n        match[2],\n        \"-\",\n        match[3],\n        \"-\",\n        match[4],\n      ].join(\"\");\n    }\n  };\n  // onChange email input handler\n  const emailChangeHandler = async (event) => {\n    const email = emailRef.current.value;\n\n    if (email.includes(\"@\") && email.includes(\".\")) {\n      const response = await props.findEmailFetch(email);\n\n      if (response === null || response === undefined) {\n        setEmailErrorMessage(\"\");\n      } else {\n        setEmailErrorMessage(\"Email already registered please login!\");\n      }\n    } else {\n      return;\n    }\n  };\n\n  // onSubmit customer form handler\n  const customerSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    const customerFirstName = firstNameRef.current.value;\n    const customerLastName = lastNameRef.current.value;\n    const customerEmail = emailRef.current.value;\n    const customerPassword = passwordRef.current.value;\n    const customerConfirmPassword = confirmPasswordRef.current.value;\n    const customerAddress = addressRef.current.value;\n    const customerCity = cityRef.current.value;\n    const customerZipCode = zipCodeRef.current.value;\n    const customerState = stateRef.current.value;\n    const customerPhoneNumber = phoneNumberRef.current.value;\n\n    if (customerPassword !== customerConfirmPassword) {\n      setPasswordErrorMessage(\"Passwords do not match!\");\n      return;\n    } else {\n      setPasswordErrorMessage(\"\");\n      const customerData = {\n        firstName: customerFirstName,\n        lastName: customerLastName,\n        email: customerEmail,\n        address: customerAddress,\n        city: customerCity,\n        zipCode: customerZipCode,\n        state: customerState,\n        phoneNumber: customerPhoneNumber,\n        password: customerPassword,\n        userType: \"customer\",\n      };\n\n      const response = await props.createCustomerFetch(customerData);\n\n      if (response) {\n        setEmailErrorMessage(\"\");\n        navigate(\"/redirectHome\");\n      } else {\n        setEmailErrorMessage(\"Email already registered please login!\");\n      }\n    }\n  };\n\n  // form component\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={customerSubmitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"firstname\">First Name</label>\n          <input\n            type=\"text\"\n            placeholder=\"First Name\"\n            required\n            name=\"firstname\"\n            ref={firstNameRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"lastname\">Last Name</label>\n          <input\n            type=\"text\"\n            placeholder=\"Last Name\"\n            required\n            name=\"lastname\"\n            ref={lastNameRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">E-mail</label>\n          <input\n            type=\"email\"\n            placeholder=\"email@email.com\"\n            required\n            name=\"email\"\n            ref={emailRef}\n            onChange={emailChangeHandler}\n          />\n        </div>\n        <div className={classes.error}>\n          <p>{emailErrorMessage}</p>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            name=\"password\"\n            ref={passwordRef}\n            onChange={passwordChangeHandler}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"confirmPassword\">Confirm Password</label>\n          <input\n            type=\"password\"\n            placeholder=\"Re-enter Password\"\n            required\n            name=\"confirmPassword\"\n            ref={confirmPasswordRef}\n            onChange={passwordChangeHandler}\n          />\n        </div>\n        <div className={classes.error}>\n          <p>{passwordErrorMessage}</p>\n        </div>\n\n        <div className={classes.control}>\n          <label htmlFor=\"addreess\">City</label>\n          <input\n            type=\"text\"\n            placeholder=\"123 Address Street\"\n            required\n            name=\"address\"\n            ref={addressRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"city\">City</label>\n          <input\n            type=\"text\"\n            placeholder=\"City Name\"\n            required\n            name=\"city\"\n            ref={cityRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"zipCode\">Zip Code</label>\n          <input\n            type=\"text\"\n            pattern=\"[0-9]{5}\"\n            placeholder=\"Zip Code (eg. 12345)\"\n            required\n            name=\"zipCode\"\n            ref={zipCodeRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"state\">State</label>\n          <input\n            type=\"text\"\n            pattern=\"(A[KLRZ]|C[AOT]|D[CE]|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|PA|RI|S[CD]|T[NX]|UT|V[AT]|W[AIVY])\"\n            placeholder=\"State Abbreviation (eg. CA, NY, AZ, etc.)\"\n            required\n            name=\"state\"\n            ref={stateRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"phone\">Phone Number</label>\n          <input\n            id=\"phoneNumber\"\n            type=\"tel\"\n            pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n            placeholder=\"123-456-7890\"\n            required\n            name=\"phone\"\n            ref={phoneNumberRef}\n            onChange={phoneNumberChangeHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <button>Create Account</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default SignUpCustomerForm;\n","/* MICHAEL CHANG */\n\nimport PropTypes from \"prop-types\";\nimport SignUpCustomerForm from \"../components/signups/SignUpCustomerForm\";\n\nfunction SignUpCustomers() {\n  async function createCustomerFetch(data) {\n    const response = await fetch(\"/api/createCustomer\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    return await response.json();\n  }\n\n  async function findEmailFetch(data) {\n    const response = await fetch(\"/api/findEmailExists\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"text/plain\",\n      },\n      body: data,\n    });\n    return await response.json();\n  }\n  return (\n    <div>\n      <h1>Customers Sign Up Page</h1>\n      <SignUpCustomerForm\n        createCustomerFetch={createCustomerFetch}\n        findEmailFetch={findEmailFetch}\n      />\n    </div>\n  );\n}\n\nSignUpCustomers.propTypes = {\n  createCustomerFetch: PropTypes.func,\n  findEmailFetch: PropTypes.func,\n\n};\n\nexport default SignUpCustomers;\n","// MICHAEL CHANG & DANIEL LISKO\n\nimport { Link, useNavigate } from \"react-router-dom\";\nimport classes from \"./MainNavigation.module.css\";\n\nimport { useContext } from \"react\";\nimport UserLoginContext from \"../../store/UserLoginContext\";\n\nfunction MainNavigation() {\n  const navigate = useNavigate();\n\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n\n  // reset states for logout and clear localStorage\n  const logoutHandler = (event) => {\n    localStorage.clear();\n    userContext.setLoginStatus(false);\n    navigate(\"/\");\n  };\n\n  let linksRender = [];\n\n  const logoutLink = () => {\n    return (\n      <li key=\"logout\">\n        <button\n          className={classes.logout}\n          onClick={logoutHandler}\n          type=\"button\"\n        >\n          Log out\n        </button>\n      </li>\n    );\n  };\n\n  // if loginSuccess state is true replace Login Link to Customer/Provider Detail Page Link\n  // !== undefined IS A HACK...REFER TO APP.js FETCH RUNS 2 times\n\n  if (userContext.userDetails && userContext.loginStatus) {\n    if (userContext.userDetails.userType === \"customer\") {\n      linksRender.push(\n        <li key=\"customerRequestService\">\n          <Link to=\"/CustomerRequestService\">Request Laundry</Link>\n        </li>\n      );\n      linksRender.push(\n        <li key=\"customerDetailsPage\">\n          <Link to=\"/CustomerDetailsPage\">{`${userContext.userDetails.firstName} ${userContext.userDetails.lastName}`}</Link>\n        </li>\n      );\n    } else {\n      linksRender.push(\n        <li key=\"providerPage\">\n          <Link to=\"/ProviderPage\">{`${userContext.userDetails.companyName}`}</Link>\n        </li>\n      );\n      linksRender.push(\n        <li key=\"providerDetailsPage\">\n          <Link to=\"/ProviderDetailsPage\">{`${userContext.userDetails.firstName} ${userContext.userDetails.lastName}`}</Link>\n        </li>\n      );\n    }\n    linksRender.push(logoutLink());\n\n    // else set default navigation bar\n  } else {\n    linksRender.push(\n      <li key=\"login\">\n        <Link to=\"/Login\">Login</Link>\n      </li>\n    );\n  }\n\n  // MainNavgiation component\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>Hamper Dash</div>\n      </Link>\n      <nav aria-label=\"Navigation Bar\">\n        <ul>\n          <li key=\"home\">\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li key=\"signup\">\n            <Link to=\"/SignUp\">Sign Up</Link>\n          </li>\n          {linksRender}\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default MainNavigation;\n","// MICHAEL CHANG & DANIEL LISKO\n\nimport MainNavigation from \"./MainNavigation\";\nimport classes from \"./Layout.module.css\";\n\nfunction Layout(props) {\n  return (\n    <div>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </div>\n  );\n}\n\nexport default Layout;\n","/* MICHAEL CHANG */\n\nimport PropTypes from \"prop-types\";\nimport Card from \"../../ui/Card\";\nimport classes from \"./CustomerDetailsForm.module.css\";\nimport { useState, useRef } from \"react\";\nimport { useContext } from \"react\";\nimport UserLoginContext from \"../../../store/UserLoginContext\";\n\nfunction CustomerDetailsForm() {\n  const [formEdit, setFormEdit] = useState(true);\n  const [buttonText, setButtonText] = useState(\"Edit\");\n  const firstNameRef = useRef();\n  const lastNameRef = useRef();\n  const addressRef = useRef();\n  const cityRef = useRef();\n  const zipCodeRef = useRef();\n  const stateRef = useRef();\n  const phoneNumberRef = useRef();\n\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n\n  // fetch to update userDetails in DB\n  const updateUserDetailsFetch = async (data) => {\n    await fetch(\"/api/updateUserDetails\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  };\n\n  const buttonClickHandler = (event) => {\n    event.preventDefault();\n\n    const customerFirstName = firstNameRef.current.value;\n    const customerLastName = lastNameRef.current.value;\n    const customerAddress = addressRef.current.value;\n    const customerCity = cityRef.current.value;\n    const customerZipCode = zipCodeRef.current.value;\n    const customerState = stateRef.current.value;\n    const customerPhoneNumber = phoneNumberRef.current.value;\n\n    if (!formEdit && buttonText === \"Save\") {\n      const customerDataChanged = {\n        firstName: customerFirstName,\n        lastName: customerLastName,\n        address: customerAddress,\n        city: customerCity,\n        zipCode: customerZipCode,\n        state: customerState,\n        phoneNumber: customerPhoneNumber,\n        email: userContext.userDetails.email,\n        userType: userContext.userDetails.userType,\n      };\n\n      updateUserDetailsFetch(customerDataChanged);\n      userContext.setUserDetails({\n        ...userContext.userDetails,\n        ...customerDataChanged,\n      });\n    }\n\n    if (formEdit) {\n      setFormEdit(false);\n      setButtonText(\"Save\");\n    } else {\n      setFormEdit(true);\n      setButtonText(\"Edit\");\n    }\n  };\n\n  // form component\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={buttonClickHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"firstname\">First Name</label>\n          <input\n            type=\"text\"\n            placeholder=\"First Name\"\n            required\n            name=\"firstname\"\n            defaultValue={userContext.userDetails.firstName}\n            disabled={formEdit}\n            ref={firstNameRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"lastname\">Last Name</label>\n          <input\n            type=\"text\"\n            placeholder=\"Last Name\"\n            required\n            name=\"lastname\"\n            defaultValue={userContext.userDetails.lastName}\n            disabled={formEdit}\n            ref={lastNameRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"address\">Address</label>\n          <input\n            type=\"text\"\n            placeholder=\"123 Address Street\"\n            required\n            name=\"address\"\n            defaultValue={userContext.userDetails.address}\n            disabled={formEdit}\n            ref={addressRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"city\">City</label>\n          <input\n            type=\"text\"\n            placeholder=\"City Name\"\n            required\n            name=\"city\"\n            defaultValue={userContext.userDetails.city}\n            disabled={formEdit}\n            ref={cityRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"zipCode\">Zip Code</label>\n          <input\n            type=\"text\"\n            pattern=\"[0-9]{5}\"\n            placeholder=\"Zip Code (eg. 12345)\"\n            required\n            name=\"zipCode\"\n            defaultValue={userContext.userDetails.zipCode}\n            disabled={formEdit}\n            ref={zipCodeRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"state\">State</label>\n          <input\n            type=\"text\"\n            pattern=\"(A[KLRZ]|C[AOT]|D[CE]|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|PA|RI|S[CD]|T[NX]|UT|V[AT]|W[AIVY])\"\n            placeholder=\"State Abbreviation (eg. CA, NY, AZ, etc.)\"\n            required\n            name=\"state\"\n            defaultValue={userContext.userDetails.state}\n            disabled={formEdit}\n            ref={stateRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"phone\">Phone Number</label>\n          <input\n            type=\"tel\"\n            pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n            placeholder=\"123-456-7890\"\n            required\n            name=\"phone\"\n            defaultValue={userContext.userDetails.phoneNumber}\n            disabled={formEdit}\n            ref={phoneNumberRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          <button>{buttonText}</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nCustomerDetailsForm.propTypes = {\n  getLaundryData: PropTypes.bool,\n};\n\nexport default CustomerDetailsForm;\n","import React from \"react\";\nimport Card from \"../../ui/Card\";\n\nconst currencyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n});\n\nfunction CustomerLaundryRequestCards(props) {\n  return (\n    <div className=\"mt-2\">\n      <Card>\n        <div className=\"row\">\n          <h1 className=\"d-flex justify-content-center\">\n            {props.request.providerDetails.companyName}\n          </h1>\n          <span className=\"col-12\">\n            <strong>Date: </strong> {props.request.date}\n          </span>\n          <span className=\"col-6\">\n            <strong>Phone: </strong> {props.request.providerDetails.phoneNumber}\n          </span>\n          <span className=\"col-6\">\n            <strong>Email: </strong> {props.request.providerEmail}\n          </span>\n          <span className=\"col-6\">\n            <strong>Address: </strong> {props.request.providerDetails.address}\n          </span>\n          <span className=\"col-6\">\n            <strong>City: </strong> {props.request.providerDetails.city}\n          </span>\n          <span className=\"col-6\">\n            <strong>Provider Accepted: </strong>{\" \"}\n            {props.request.providerAccepted.toString()}\n          </span>\n          <span className=\"col-6\">\n            <strong>Job Completed: </strong>{\" \"}\n            {props.request.serviceComplete.toString()}\n          </span>\n          <span className=\"col-6\">\n            <strong>Total Cost: </strong>\n            {currencyFormatter.format(props.request.totalCost)}\n          </span>\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nexport default CustomerLaundryRequestCards;\n","/* MICHAEL CHANG */\nimport { useContext, useEffect, useState } from \"react\";\nimport UserLoginContext from \"../../../store/UserLoginContext\";\nimport CustomerLaundryRequestCards from \"./CustomerLaundryRequestCards\";\n\n// fetch requests from DB\nconst allCustomerLaundryRequestsFetch = async (data) => {\n  const response = await fetch(\"/api/allCustomerLaundryRequest\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  return await response.json();\n};\n\nconst getProviderDetails = async (data) => {\n  const response = await fetch(\"/api/findAllUserDetails\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  return await response.json();\n};\n\n// default loading when first rendering page\nlet refreshButton = \"Loading...\";\n\n// component function\nfunction CustomerLaundryRequestDetails(props) {\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n  const [allCustomerRequests, setAllCustomerRequests] = useState([]);\n  const [fetchData, setFetchData] = useState(false);\n\n  function refreshData() {\n    setAllCustomerRequests([]);\n    setFetchData(!fetchData);\n  }\n\n  useEffect(() => {\n    const getLaundryRequestData = async () => {\n      if (userContext.userDetails.email !== undefined) {\n        const temp = await allCustomerLaundryRequestsFetch({\n          customerEmail: userContext.userDetails.email,\n        });\n        // sort the cards from latest to earliest\n        temp.sort((a, b) => Date.parse(b.date) - Date.parse(a.date));\n\n        // create set for duplicate handling\n        let listOfProviderEmails = new Set();\n        for (let request of temp) {\n          listOfProviderEmails.add(request.providerEmail);\n        }\n\n        // convert the set to list\n        listOfProviderEmails = Array.from(listOfProviderEmails);\n\n        // get all the providers details from mongo\n        const response = await getProviderDetails({\n          userType: \"provider\",\n          email: listOfProviderEmails,\n        });\n\n        // add the details to each request\n        temp.forEach((request) => {\n          for (let provider of response) {\n            if (provider.email === request.providerEmail) {\n              request.providerDetails = provider;\n            }\n          }\n        });\n\n        setAllCustomerRequests(temp);\n      }\n    };\n    getLaundryRequestData();\n  }, [userContext.userDetails.email, fetchData]);\n\n  const customerRequestsRender = [];\n\n  for (let request of allCustomerRequests) {\n    customerRequestsRender.push(\n      <CustomerLaundryRequestCards request={request} />\n    );\n  }\n\n  // load button text\n  if (allCustomerRequests.length > 0) {\n    refreshButton = \"Refresh\";\n  } else {\n    refreshButton = \"Loading...\";\n  }\n\n  // request details component\n  return (\n    <div>\n      <div>\n        <button onClick={refreshData}>{refreshButton}</button>\n      </div>\n      {customerRequestsRender}\n    </div>\n  );\n}\n\nexport default CustomerLaundryRequestDetails;\n","// MICHAEL CHANG\n\nimport CustomerDetailsForm from \"../components/customer/customerDetailsAndRequests/CustomerDetailsForm\";\nimport { useContext } from \"react\";\nimport UserLoginContext from \"../store/UserLoginContext\";\nimport CustomerLaundryRequestDetails from \"../components/customer/customerDetailsAndRequests/CustomerLaundryRequestDetails\";\n\nfunction CustomerDetailsPage() {\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n\n  if (userContext.userDetails !== undefined) {\n    return (\n      <div>\n        <h1>{`${userContext.userDetails.firstName} ${userContext.userDetails.lastName}`}</h1>\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <CustomerDetailsForm />\n          </div>\n          <div className=\"col-6\">\n            <h2>\n              {userContext.userDetails.firstName}{\" \"}\n              {userContext.userDetails.lastName} Laundry Requests\n            </h2>\n            <CustomerLaundryRequestDetails />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h1>Customer Details Page</h1>\n    </div>\n  );\n}\n\nexport default CustomerDetailsPage;\n","// MICHAEL CHANG\n\nimport { useRef, useState, useContext } from \"react\";\n\nimport Card from \"../../ui/Card\";\nimport classes from \"./LaundryRequestForm.module.css\";\nimport UserLoginContext from \"../../../store/UserLoginContext\";\n\nfunction LaundryRequestForm(props) {\n  // initailize react hooks\n  const poundsOfLaundryRef = useRef();\n  const foldRef = useRef();\n  const poundsOfDryCleanRef = useRef();\n  const deliveryRef = useRef();\n  const dateRef = useRef();\n  const userContext = useContext(UserLoginContext);\n\n  const [readyToWashButton, setReadyToWashButton] = useState(\"Ready to Wash!\");\n  const [dateErrorMessage, setDateErrorMesssage] = useState();\n  const [dryCleanForm, setDryCleanForm] = useState(false);\n  const [washForm, setWashForm] = useState(false);\n\n  // onSubmit customer form handler\n  async function laundryRequestHandler(event) {\n    event.preventDefault();\n\n    const poundsOfLaundry = poundsOfLaundryRef.current.value;\n    const fold = foldRef.current.checked;\n    const poundsOfDryClean = poundsOfDryCleanRef.current.value;\n    const delivery = deliveryRef.current.checked;\n    const date = dateRef.current.value;\n\n    const today = new Date();\n    if (Date.parse(date) < Date.parse(today)) {\n      setDateErrorMesssage(\"Date can not be in the past\");\n      return;\n    } else {\n      setDateErrorMesssage();\n    }\n\n    const laundryRequestData = {\n      wash: poundsOfLaundry,\n      dryClean: poundsOfDryClean,\n      fold: fold,\n      delivery: delivery,\n      date: date,\n      state: userContext.userDetails.state,\n    };\n\n    setReadyToWashButton(\"Loading...\");\n    await props.laundryRequestFetch(laundryRequestData);\n    setReadyToWashButton(\"Ready to Wash!\");\n  }\n\n  // define functions to pass down as props\n  function setDryCleanFormFunc() {\n    setDryCleanForm(!dryCleanForm);\n  }\n\n  function setWashFormFunc() {\n    setWashForm(!washForm);\n  }\n\n  function showWashForm() {\n    if (washForm) {\n      return (\n        <div className={classes.textControl}>\n          <label htmlFor=\"poundsOfLaundry\">Estimated lbs. of laundry</label>\n          <input\n            type=\"number\"\n            placeholder=\"Estimated pounds\"\n            required\n            name=\"poundsOfLaundry\"\n            ref={poundsOfLaundryRef}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <input\n          type=\"hidden\"\n          value=\"\"\n          name=\"poundsOfLaundry\"\n          ref={poundsOfLaundryRef}\n        />\n      );\n    }\n  }\n\n  function showDryCleanForm() {\n    if (dryCleanForm) {\n      return (\n        <div className={classes.textControl}>\n          <label htmlFor=\"poundsOfDryClean\">Estimated lbs. of Dry Clean</label>\n          <input\n            type=\"number\"\n            placeholder=\"Estimated pounds\"\n            required\n            name=\"poundsOfDryClean\"\n            ref={poundsOfDryCleanRef}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <input\n          type=\"hidden\"\n          value=\"\"\n          name=\"poundsOfDryClean\"\n          ref={poundsOfDryCleanRef}\n        />\n      );\n    }\n  }\n\n  function showSortOptions() {\n    if (props.providerCards.length > 0) {\n      return (\n        <div className={classes.checkBoxControl}>\n          <div>Sort By:</div>\n          <div>\n            <label htmlFor=\"priceAsc\">\n              <input\n                type=\"radio\"\n                id=\"priceLowHigh\"\n                name=\"sort\"\n                onChange={props.setSortPriceLowHighFunc}\n              />\n              Price Low-High\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"priceDesc\">\n              <input\n                type=\"radio\"\n                id=\"priceHighLow\"\n                name=\"sort\"\n                onChange={props.setSortPriceHighLowFunc}\n              />\n              Price High-Low\n            </label>\n          </div>\n\n          <div>\n            <label htmlFor=\"distance\">\n              <input\n                type=\"radio\"\n                id=\"distance\"\n                name=\"sort\"\n                onChange={props.setSortDistanceFunc}\n              />\n              Distance\n            </label>\n          </div>\n        </div>\n      );\n    } else {\n      return;\n    }\n  }\n\n  // form component\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={laundryRequestHandler}>\n        <div className={classes.checkBoxControl}>\n          <label htmlFor=\"wash\">\n            Laundry (per lbs.)\n            <input type=\"checkbox\" name=\"wash\" onChange={setWashFormFunc} />\n          </label>\n        </div>\n        {showWashForm()}\n        <div className={classes.checkBoxControl}>\n          <label htmlFor=\"dryClean\">\n            Dry Clean? (per lbs.)\n            <input\n              type=\"checkbox\"\n              name=\"dryClean\"\n              onChange={setDryCleanFormFunc}\n            />\n          </label>\n        </div>\n        {showDryCleanForm()}\n        <span className={classes.checkBoxControl}>\n          <label htmlFor=\"fold\">\n            Folded\n            <input type=\"checkbox\" name=\"fold\" ref={foldRef} />\n          </label>\n        </span>\n\n        <span className={classes.checkBoxControl}>\n          <label htmlFor=\"delivery\">\n            Delivered\n            <input type=\"checkbox\" name=\"delivery\" ref={deliveryRef} />\n          </label>\n        </span>\n        <div className={classes.textControl}>\n          <label htmlFor=\"date\">\n            Date\n            <input\n              type=\"text\"\n              required\n              placeholder=\"eg. 01/31/2021\"\n              name=\"date\"\n              ref={dateRef}\n            />\n          </label>\n        </div>\n        <div className={classes.error}>\n          <p>{dateErrorMessage}</p>\n        </div>\n        <div className={classes.actions}>\n          <button>{readyToWashButton}</button>\n        </div>\n        {showSortOptions()}\n      </form>\n    </Card>\n  );\n}\n\nexport default LaundryRequestForm;\n","import { React, useRef, useEffect } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nrequire(\"dotenv\").config();\n\nfunction Deleter() {\n  // Ugly hack to make google maps pass the axe audit\n  const mapRef = useRef();\n  useEffect(() => {\n    console.log(\"ref\", mapRef.current);\n\n    try {\n      mapRef.current.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.removeAttribute(\n        \"aria-roledescription\"\n      );\n      console.log(\"removing aria-roledescription\", mapRef.current);\n    } catch (er) {\n      console.log(\"deleter failed, maybe the map wasn't ready?\", er);\n    }\n  }, []);\n\n  return <div ref={mapRef}></div>;\n}\n\nfunction GoogleMap(props) {\n  const googleMapMarkers = [];\n  let defaultProps;\n\n  if (props.providerCoordinates.length > 0) {\n    defaultProps = {\n      center: {\n        lat: props.providerCoordinates[0].lat,\n        lng: props.providerCoordinates[0].lng,\n      },\n      zoom: 11,\n    };\n  } else {\n    defaultProps = {\n      center: {\n        lat: 37.423021,\n        lng: -122.083739,\n      },\n      zoom: 11,\n    };\n  }\n\n  const Marker = (props) => (\n    <div\n      style={{\n        color: \"black\",\n        background: \"red\",\n        padding: \"5px\",\n        display: \"inline-flex\",\n        textAlign: \"center\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        borderRadius: \"100%\",\n      }}\n    >\n      {props.index}\n    </div>\n  );\n\n  props.providerCoordinates.forEach((coordinate, index) => {\n    googleMapMarkers.push(\n      <Marker\n        index={`${index + 1}`}\n        lat={coordinate.lat}\n        lng={coordinate.lng}\n      />\n    );\n  });\n\n  return (\n    // Important! Always set the container height explicitly\n    <div style={{ height: \"400px\", width: \"400px\" }}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: process.env.GOOGLE_API_KEY }}\n        center={defaultProps.center}\n        zoom={defaultProps.zoom}\n      >\n        {googleMapMarkers}\n        <Deleter />\n      </GoogleMapReact>\n    </div>\n  );\n}\n\nexport default GoogleMap;\n","// MICHAEL CHANG\nimport classes from \"./LaundryCustomerConfirm.module.css\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction LaundryCustomerConfirm(props) {\n  const navigate = useNavigate();\n  const [buttonText, setButtonText] = useState(\"Choose Provider!\");\n\n  // data fetch\n  const laundryCustomerConfirmFetch = async (data) => {\n    await fetch(\"/api/laundryCustomerConfirm\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  };\n\n  // submit handler\n  const laundryCustomerConfirmSubmitHandler = async (event) => {\n    event.preventDefault();\n    laundryCustomerConfirmFetch(requestObject);\n    setButtonText(\"Pending\");\n    navigate(\"/CustomerDetailsPage\")\n  };\n\n  let washPrice;\n  let poundsRequestedWash;\n  let dryCleanPrice;\n  let poundsRequesteddryClean;\n  let deliveryPrice;\n  let foldPrice;\n\n  let requestObject = {};\n  let servicesRequestedObject = {};\n\n  if (props.servicesRequested.wash !== \"\") {\n    washPrice = props.provider.serviceObjects.wash.price;\n    poundsRequestedWash = parseFloat(props.servicesRequested.wash);\n    servicesRequestedObject[\"wash\"] = {\n      price: washPrice,\n      perPound: true,\n      poundsRequested: poundsRequestedWash,\n    };\n  }\n\n  if (props.servicesRequested.dryClean !== \"\") {\n    dryCleanPrice = props.provider.serviceObjects.dryClean.price;\n    poundsRequesteddryClean = parseFloat(props.servicesRequested.dryClean);\n    servicesRequestedObject[\"dryClean\"] = {\n      price: dryCleanPrice,\n      perPound: true,\n      poundsRequested: poundsRequesteddryClean,\n    };\n  }\n\n  if (props.servicesRequested.delivery) {\n    deliveryPrice = props.provider.serviceObjects.delivery.price;\n    servicesRequestedObject[\"delivery\"] = {\n      price: deliveryPrice,\n      perPound: false,\n    };\n  }\n\n  if (props.servicesRequested.fold) {\n    foldPrice = props.provider.serviceObjects.fold.price;\n    servicesRequestedObject[\"fold\"] = {\n      price: foldPrice,\n      perPound: false,\n    };\n  }\n\n  requestObject[\"servicesRequested\"] = servicesRequestedObject;\n  requestObject[\"totalCost\"] = props.totalCost;\n  requestObject[\"serviceComplete\"] = false;\n  requestObject[\"date\"] = props.servicesRequested.date;\n  requestObject[\"providerAccepted\"] = false;\n  requestObject[\"customerEmail\"] = props.customer.email;\n  requestObject[\"providerEmail\"] = props.provider.email;\n\n  // form component\n  return (\n    <div className=\"d-flex justify-content-end m-0\">\n      <form\n        className={classes.actions}\n        onSubmit={laundryCustomerConfirmSubmitHandler}\n      >\n        <button>{buttonText}</button>\n      </form>\n    </div>\n  );\n}\n\nexport default LaundryCustomerConfirm;\n","import LaundryCustomerConfirm from \"./LaundryCustomerConfirm\";\nimport { useContext } from \"react\";\nimport UserLoginContext from \"../../../store/UserLoginContext\";\nimport Card from \"../../ui/Card\";\n\nconst currencyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n});\n\nfunction ProviderCards({\n  provider,\n  servicesRequested,\n  index,\n  laundryCost,\n  foldingCost,\n  dryCleanCost,\n  deliveryCost,\n  totalCost,\n  distance,\n}) {\n  const userContext = useContext(UserLoginContext);\n\n  return (\n    <div className=\"mt-2\">\n      <Card>\n        <div className=\"row pt-4 ps-4\">\n          <h2 className=\"d-flex justify-content-center\">\n            {index + 1}) {provider.companyName}\n          </h2>\n          <div className=\"row\">\n            <span className=\"col-12\">\n              <strong>Date: </strong> {servicesRequested.date}\n            </span>\n          </div>\n          <div className=\"row\">\n            <span className=\"col-12 mt-2\">\n              <strong>Email: </strong> {provider.email}\n            </span>\n            <span className=\"col-12\">\n              <strong>Phone Number: </strong> {provider.phoneNumber}\n            </span>\n            <span className=\"col-12 mt-2\">\n              <strong>Address: </strong> {provider.address}\n            </span>\n            <span className=\"col-6\">\n              <strong>City: </strong> {provider.city}\n            </span>\n            <span className=\"col-6\">\n              <strong>State: </strong> {provider.state}\n            </span>\n            <span className=\"col-6\">\n              <strong>Zip Code: </strong> {provider.zipCode}\n            </span>\n            <span className=\"col-6\">\n              <strong>Distance: </strong> {distance}\n            </span>\n          </div>\n          <div className=\"row\">\n            <span className=\"col-6 mt-2\">\n              <strong>Laundry Cost: </strong>\n              {currencyFormatter.format(laundryCost)}\n            </span>\n            <span className=\"col-6 mt-2\">\n              <strong>Dry Cleaning Cost: </strong>\n              {currencyFormatter.format(dryCleanCost)}\n            </span>\n            <span className=\"col-6\">\n              <strong>Cost for Folding: </strong>\n              {currencyFormatter.format(foldingCost)}\n            </span>\n            <span className=\"col-6\">\n              <strong>Cost for Delivery: </strong>\n              {currencyFormatter.format(deliveryCost)}\n            </span>\n          </div>\n          <div className=\"row\">\n            <span className=\"d-flex justify-content-end mt-2\">\n              <strong>\n                Total Costs:\n                {currencyFormatter.format(totalCost)}\n              </strong>\n            </span>\n          </div>\n        </div>\n        <LaundryCustomerConfirm\n          provider={provider}\n          customer={userContext.userDetails}\n          servicesRequested={servicesRequested}\n          totalCost={totalCost}\n        />\n      </Card>\n    </div>\n  );\n}\n\nexport default ProviderCards;\n","/* MICHAEL CHANG */\n\nimport PropTypes from \"prop-types\";\nimport LaundryRequestForm from \"../components/customer/newLaundryRequests/LaundryRequestForm\";\nimport GoogleMapReact from \"../components/api/GoogleMapReact.js\";\nimport ProviderCards from \"../components/customer/newLaundryRequests/ProviderCards\";\nimport UserLoginContext from \"../store/UserLoginContext\";\nimport { useState, useContext } from \"react\";\n\nlet availableProviders = [];\nlet servicesRequested = {};\n\nfunction CustomerRequestService() {\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n\n  let providerCardRender = [];\n  let providerCards = [];\n  let providerCoordinates = [];\n\n  const [gotProivders, setGotProivders] = useState();\n  const [sortPriceLowHigh, setSortPriceLowHigh] = useState(false);\n  const [sortPriceHighLow, setSortPriceHighLow] = useState(false);\n  const [sortDistance, setSortDistance] = useState(false);\n\n  // set booleans for which sort is selected\n  function setSortPriceLowHighFunc() {\n    setSortPriceLowHigh(true);\n    setSortPriceHighLow(false);\n    setSortDistance(false);\n  }\n\n  function setSortPriceHighLowFunc() {\n    setSortPriceLowHigh(false);\n    setSortPriceHighLow(true);\n    setSortDistance(false);\n  }\n\n  function setSortDistanceFunc() {\n    setSortPriceLowHigh(false);\n    setSortPriceHighLow(false);\n    setSortDistance(true);\n  }\n\n  // https://cloud.google.com/blog/products/maps-platform/how-calculate-distances-map-maps-javascript-api\n  // arbitrary distance since addresses are from mockaroo date (not real)\n  function haversine_distance(mk1, mk2) {\n    const R = 3958.8; // Radius of the Earth in miles\n    const rlat1 = mk1.lat * (Math.PI / 180); // Convert degrees to radians\n    const rlat2 = mk2.lat * (Math.PI / 180); // Convert degrees to radians\n    const difflat = rlat2 - rlat1; // Radian difference (latitudes)\n    const difflon = mk2.lng - mk1.lng * (Math.PI / 180); // Radian difference (longitudes)\n\n    const d =\n      2 *\n      R *\n      Math.asin(\n        Math.sqrt(\n          Math.sin(difflat / 2) * Math.sin(difflat / 2) +\n            Math.cos(rlat1) *\n              Math.cos(rlat2) *\n              Math.sin(difflon / 2) *\n              Math.sin(difflon / 2)\n        )\n      );\n    return d.toFixed(2);\n  }\n\n  // laudnry request fetch\n  const laundryRequestFetch = async (data) => {\n    const response = await fetch(\"/api/laundryRequest\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    availableProviders = await response.json();\n    servicesRequested = data;\n\n    // const destination = provider.geoCode.results[0].geometry.location;\n    const origin = userContext.userDetails.geoCode.results[0].geometry.location;\n\n    availableProviders.sort(\n      (a, b) =>\n        haversine_distance(a.geoCode.results[0].geometry.location, origin) -\n        haversine_distance(b.geoCode.results[0].geometry.location, origin)\n    );\n\n    //I'm just setting true false back and forth for component to re-render\n    setGotProivders(!gotProivders);\n  };\n\n  // loop through the providers returned from backend\n  availableProviders.forEach((provider, index) => {\n    // calculate each costs\n    const laundryCost = servicesRequested.wash\n      ? provider.serviceObjects.wash.price * servicesRequested.wash\n      : 0;\n    const dryCleanCost = servicesRequested.dryClean\n      ? provider.serviceObjects.dryClean.price * servicesRequested.dryClean\n      : 0;\n    const foldingCost = servicesRequested.fold\n      ? provider.serviceObjects.fold.price\n      : 0;\n    const deliveryCost = servicesRequested.delivery\n      ? provider.serviceObjects.delivery.price\n      : 0;\n    const totalCost = laundryCost + dryCleanCost + foldingCost + deliveryCost;\n\n    // used for haversine_distance calc\n    // arbitrary distance since addresses are from mockaroo date (not real)\n    const destination = provider.geoCode.results[0].geometry.location;\n    const origin = userContext.userDetails.geoCode.results[0].geometry.location;\n    const distance = haversine_distance(destination, origin);\n\n    providerCards.push([\n      <ProviderCards\n        key={`provider-card-${index}`}\n        index={index}\n        provider={provider}\n        servicesRequested={servicesRequested}\n        laundryCost={laundryCost}\n        dryCleanCost={dryCleanCost}\n        foldingCost={foldingCost}\n        deliveryCost={deliveryCost}\n        totalCost={totalCost}\n        distance={distance}\n      />,\n      totalCost,\n      distance,\n    ]);\n    providerCoordinates.push(provider.geoCode.results[0].geometry.location);\n  });\n\n  // optional radio button sort\n  if (sortPriceLowHigh) {\n    providerCards.sort((a, b) => a[1] - b[1]);\n  } else if (sortPriceHighLow) {\n    providerCards.sort((a, b) => b[1] - a[1]);\n  } else if (sortDistance) {\n    // using haversine_distance calculation\n    providerCards.sort((a, b) => a[2] - b[2]);\n  }\n\n  //providerCards - [0] is provider Object [1] is date [2] is cost [3] is zipCode\n  // push cards[0] into an array to render in the react component\n  providerCards.forEach((card) => {\n    providerCardRender.push(card[0]);\n  });\n\n  function showCards() {\n    if (providerCardRender.length > 0) {\n      return providerCardRender;\n    } else {\n      return (\n        <h2 className=\"d-flex h-100 align-items-center justify-content-center\">\n          Go have fun! Let us do the chores! Request Today!!\n        </h2>\n      );\n    }\n  }\n\n  return (\n    <div>\n      <h1>Request Laundry Service</h1>\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <LaundryRequestForm\n            laundryRequestFetch={laundryRequestFetch}\n            providerCards={providerCards}\n            setSortPriceLowHighFunc={setSortPriceLowHighFunc}\n            setSortPriceHighLowFunc={setSortPriceHighLowFunc}\n            setSortDistanceFunc={setSortDistanceFunc}\n          />\n        </div>\n        <div className=\"col-5\">{showCards()}</div>\n        <div className=\"col-4\">\n          <GoogleMapReact providerCoordinates={providerCoordinates} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nCustomerRequestService.propTypes = {\n  laundryRequestFetch: PropTypes.func,\n  setSortPriceLowHighFunc: PropTypes.func,\n  setSortPriceHighLowFunc: PropTypes.func,\n  setSortDistanceFunc: PropTypes.func,\n  providerCards: PropTypes.array,\n  provider: PropTypes.object,\n  customer: PropTypes.object,\n  servicesRequested: PropTypes.object,\n  index: PropTypes.number,\n  laundryCost: PropTypes.number,\n  dryCleanCost: PropTypes.number,\n  foldingCost: PropTypes.number,\n  deliveryCost: PropTypes.number,\n  totalCost: PropTypes.number,\n  distance: PropTypes.number,\n  providerCoordinates: PropTypes.array,\n};\n\nexport default CustomerRequestService;\n","// DANIEL LISKO\n\nimport { useState, useEffect } from \"react\";\n\nconst EditService = ({\n  serviceItem,\n  modifyServiceDisplay,\n  onServiceEdit,\n  handlePromp,\n  submitEdit,\n  services,\n  setDeleteID,\n}) => {\n  //Set up default service Options\n  let [serviceOptions, setServiceOptions] = useState(new Set());\n\n  //This will render every time we open create or decide to edit a service.\n  useEffect(() => {\n    updateServices();\n  }, []);\n\n  const updateServices = () => {\n    let serviceOpt = new Set([\"Wash\", \"Dry Clean\", \"Fold\", \"Delivery\"]);\n    services.forEach((service) => {\n      if (serviceOpt.has(service.service)) {\n        serviceOpt.delete(service.service);\n      }\n    });\n    setServiceOptions(serviceOpt);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    //Prevents user from submitting the default display.\n    if (serviceItem.service === \"\") {\n      return;\n    }\n    modifyServiceDisplay(serviceItem.serviceID, \"showEdit\");\n    serviceItem.showEdit = false;\n    await submitEdit(serviceItem);\n  };\n\n  const handleInputChange = (e) => {\n    const target = e.target;\n    let value;\n\n    if (target.name === \"perPound\") {\n      if (target.value === \"true\") {\n        value = false;\n      } else {\n        value = true;\n      }\n    } else {\n      value = target.value;\n    }\n\n    onServiceEdit(serviceItem.serviceID, target.name, value);\n  };\n\n  const handleOnDelete = () => {\n    handlePromp();\n    setDeleteID(serviceItem.serviceID);\n  };\n\n  //Used to render options from dropdown service\n  const renderOptions = () => {\n    let options = new Set();\n    //Filter options that are already being useing\n\n    options.add(\n      <option value=\"\" disabled selected>\n        Select a service\n      </option>\n    );\n\n    if (serviceItem.service && !serviceOptions.has(serviceItem.service)) {\n      options.add(\n        <option value={serviceItem.service}>{serviceItem.service}</option>\n      );\n    }\n\n    serviceOptions.forEach((serviceOpt) => {\n      options.add(<option value={serviceOpt}>{serviceOpt}</option>);\n    });\n\n    return options;\n  };\n\n  const renderPerPoundBox = () => {\n    let output;\n    if (serviceItem.service === \"Dry Clean\" || serviceItem.service === \"Wash\") {\n      //Checks return if service item IS charging per pound\n      output = serviceItem.perPound ? (\n        <div className=\"form-check form-switch\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"perPound\"\n            id={\n              serviceItem.perPound\n                ? \"flexSwitchCheckChecked\"\n                : \"flexSwitchCheckDefault\"\n            }\n            value={serviceItem.perPound}\n            onChange={handleInputChange}\n            checked\n          />\n          <label\n            className=\"form-check-label\"\n            htmlFor={\n              serviceItem.perPound\n                ? \"flexSwitchCheckChecked\"\n                : \"flexSwitchCheckDefault\"\n            }\n          >\n            Charge per Pound?\n          </label>\n        </div>\n      ) : (\n        //Checks return if service item isn't charging per pound\n        <div className=\"form-check form-switch\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"perPound\"\n            id={\n              serviceItem.perPound\n                ? \"flexSwitchCheckChecked\"\n                : \"flexSwitchCheckDefault\"\n            }\n            value={serviceItem.perPound}\n            onChange={handleInputChange}\n          />\n          <label\n            className=\"form-check-label\"\n            htmlFor={\n              serviceItem.perPound\n                ? \"flexSwitchCheckChecked\"\n                : \"flexSwitchCheckDefault\"\n            }\n          >\n            Charge per Pound?\n          </label>\n        </div>\n      );\n    }\n    return output;\n  };\n\n  //-------------------To Render the Page--------\n\n  return (\n    <form key={serviceItem.serviceID} className=\"service\" onSubmit={onSubmit}>\n      <div>\n        <label htmlFor=\"service\">\n          <span>Select Service:</span>\n        </label>\n        <select\n          name=\"service\"\n          onChange={handleInputChange}\n          value={serviceItem.service}\n        >\n          {renderOptions()}\n        </select>\n        <div className=\"d-flex justify-content-center\">\n          {renderPerPoundBox()}\n        </div>\n      </div>\n      <div>\n        <label htmlFor=\"\">Fee:</label>\n        <input\n          type=\"number\"\n          step=\"0.01\"\n          min=\"0\"\n          max=\"100\"\n          name=\"price\"\n          placeholder={serviceItem.price}\n          onChange={handleInputChange}\n        />\n      </div>\n      <div className=\"col-12 d-flex justify-content-center\">\n        <button type=\"submit\" value=\"Save\" className=\"editBtn\">\n          Save\n        </button>\n        <button className=\"deleteBtn\" onClick={handleOnDelete}>\n          Delete\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default EditService;\n","// DANIEL LISKO\n\nconst Button = ({ serviceItem, modifyServiceDisplay, id }) => {\n  const handleClick = (e) => {\n    modifyServiceDisplay(serviceItem.serviceID, \"showDetails\");\n  };\n\n  return (\n    <span className=\"col-4 d-flex justify-content-center align-items-center\">\n      {serviceItem.showDetails ? (\n        <button\n          id={id}\n          onClick={handleClick}\n          className=\"collapseBtn\"\n          aria-label=\"Expand Service Button\"\n        >\n          &#8722;\n        </button>\n      ) : (\n        <button\n          id={id}\n          onClick={handleClick}\n          aria-label=\"Collapse Service Button\"\n          className=\"collapseBtn\"\n        >\n          &#43;\n        </button>\n      )}\n    </span>\n  );\n};\n\nexport default Button;\n","// DANIEL LISKO\n\nimport Button from \"./Button.js\";\n\nconst Service = ({\n  serviceItem,\n  modifyServiceDisplay,\n  id,\n  handlePromp,\n  setServices,\n  setDeleteID,\n}) => {\n  // handle edit button\n  const onEditClick = () => {\n    modifyServiceDisplay(serviceItem.serviceID, \"showEdit\");\n  };\n\n  const handleOnDelete = () => {\n    handlePromp(id);\n    setDeleteID(id);\n  };\n\n  // //Details to display\n  const details = (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-7 pl-0\">\n          <h4>\n            Cost: $<span>{serviceItem.price}</span>\n          </h4>\n        </div>\n        <div className=\"col-5 d-flex justify-content-end\">\n          {serviceItem.perPound && <h4>Per lb.</h4>}\n        </div>\n      </div>\n      <div className=\"row \">\n        <div className=\"col-12 d-flex justify-content-center\">\n          <button className=\"editBtn\" onClick={onEditClick}>\n            Edit\n          </button>\n          <button className=\"deleteBtn\" onClick={handleOnDelete}>\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div key={serviceItem.serviceID} className=\"service row\">\n      <h3 className=\"serviceTitle col-8 pb-0\">\n        <span>{serviceItem.service}</span>\n      </h3>\n      <Button\n        serviceItem={serviceItem}\n        modifyServiceDisplay={modifyServiceDisplay}\n        id={id}\n      />\n      {serviceItem.showDetails && details}\n    </div>\n  );\n};\n\nexport default Service;\n","import { Button, Modal } from \"react-bootstrap\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ModalCheck = ({\n  setShow,\n  show,\n  deleteService,\n  deleteID,\n  buttonModifiers,\n  promptMessage,\n  promptHeader,\n}) => {\n  const handleClose = () => setShow(false);\n\n  const handleConfirmDel = async () => {\n    console.log(\"Confirm\", deleteService);\n    console.log(\"ID TO DELETE\", deleteID);\n\n    setShow(false);\n    if (deleteService !== undefined) {\n      deleteService(deleteID);\n    } else if (buttonModifiers !== undefined) {\n      buttonModifiers(deleteID, \"serviceRejected\");\n    } else {\n      throw new Error(\"Not a function of ModalCheck\");\n    }\n  };\n\n  return (\n    <div>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n        aria-labelledby=\"Delete or reject item\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"Delete or reject item\">{promptHeader}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{promptMessage}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            No\n          </Button>\n          <Button variant=\"primary\" onClick={handleConfirmDel}>\n            Yes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nModalCheck.propTypes = {\n  setShow: PropTypes.func.isRequired,\n  show: PropTypes.bool.isRequired,\n  deleteService: PropTypes.func,\n  buttonModifiers: PropTypes.func,\n};\n\nModalCheck.defaultProps = {\n  promptMessage: \"Are you sure you want to delete this?\",\n  promptHeader: \"Delete Confirmation\",\n};\n\nexport default ModalCheck;\n","// DANIEL LISKO\n\nimport EditService from \"./EditService.js\";\nimport \"../providerPage.css\";\nimport Service from \"./Service\";\nimport ModalCheck from \"../Modal/ModalCheck.js\";\n\nconst Services = ({\n  services,\n  setServices,\n  modifyServiceDisplay,\n  onServiceEdit,\n  show,\n  setShow,\n  deleteID,\n  setDeleteID,\n  whichModal,\n  setWhichModal,\n}) => {\n  const handlePromp = () => {\n    setWhichModal(\"deleteService\");\n    setShow(true);\n  };\n\n  console.log(\"Which Modal\", whichModal);\n\n  //Used to delete a service\n  const deleteService = async (id) => {\n    let i = 0;\n    for (const s of services) {\n      if (s.serviceID === id) {\n        services.splice(i, 1);\n        //NEED TO RESET SERVICE ID AFTER DELETING.\n        for (let i = 0; i < services.length; i++) {\n          services[i].serviceID = i;\n        }\n        await postService(services);\n      }\n\n      i += 1;\n    }\n\n    setServices([...services]);\n  };\n\n  const addService = () => {\n    console.log(\"ID =>\", services.length);\n    const newService = {\n      service: \"\",\n      price: 0.0,\n      perPound: false,\n      serviceID: services.length,\n      showDetails: false,\n      showEdit: true,\n    };\n    setServices([...services, newService]);\n  };\n\n  const submitEdit = async (service) => {\n    await postService([...services, service]);\n  };\n\n  const postService = async (services) => {\n    const res = await fetch(\"/api/updateServices\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email: localStorage.email, services: services }),\n    });\n  };\n\n  const renderServices = services.map((s, i) => {\n    console.log(s);\n    if (s.showEdit) {\n      return (\n        <EditService\n          key={s.serviceID}\n          services={services}\n          serviceItem={s}\n          modifyServiceDisplay={modifyServiceDisplay}\n          onServiceEdit={onServiceEdit}\n          handlePromp={handlePromp}\n          submitEdit={submitEdit}\n          setDeleteID={setDeleteID}\n        />\n      );\n    }\n\n    return (\n      <Service\n        key={s.serviceID}\n        id={i}\n        serviceItem={s}\n        modifyServiceDisplay={modifyServiceDisplay}\n        handlePromp={handlePromp}\n        setDeleteID={setDeleteID}\n      />\n    );\n  });\n\n  const renderModal = () => {\n    let toRender;\n    if (whichModal === \"deleteService\") {\n      toRender = [\n        <ModalCheck\n          key=\"M0\"\n          show={show}\n          setShow={setShow}\n          deleteService={deleteService}\n          modifyServiceDisplay={modifyServiceDisplay}\n          deleteID={deleteID}\n        />,\n      ];\n    }\n\n    return toRender;\n  };\n\n  return (\n    <div>\n      {renderModal()}\n      <div>{renderServices}</div>\n      <div>\n        <small> Services Remaining: {4 - services.length}</small>\n      </div>\n\n      <div className=\"d-flex justify-content-center\">\n        {services.length < 4 && (\n          <button onClick={addService}>Add Service</button>\n        )}{\" \"}\n      </div>\n    </div>\n  );\n};\n\nexport default Services;\n","import React from \"react\";\n\nconst RequestButtons = ({\n  request,\n  setCustomerRequest,\n  customersRequests,\n  accpetedRequest,\n  setAcceptRequest,\n  setShow,\n  deleteID,\n  setDeleteID,\n  buttonModifiers,\n  handlePromp,\n}) => {\n  /*----------Buttons obitoins for hanlding Customer Request-------------*/\n  const handleAcceptClick = async () => {\n    await buttonModifiers(request._id, \"providerAccepted\");\n  };\n\n  const handleRejectClick = async () => {\n    handlePromp();\n    setDeleteID(request._id);\n    // await buttonModifiers(request._id, \"serviceRejected\");\n  };\n\n  const handleServCompleteClick = async () => {\n    await buttonModifiers(request._id, \"serviceComplete\");\n  };\n\n  const renderButtons = () => {\n    if (request.providerAccepted) {\n      return (\n        <button\n          className=\"submitCompletedSrv\"\n          type=\"button\"\n          onClick={handleServCompleteClick}\n        >\n          Service Complete\n        </button>\n      );\n    } else {\n      return [\n        <div className=\"col-6 p-1\">\n          <button\n            className=\"acptRejBtn\"\n            type=\"button\"\n            onClick={handleAcceptClick}\n          >\n            Accept\n          </button>\n        </div>,\n        <div className=\"col-6 p-1\">\n          <button\n            className=\"acptRejBtn\"\n            type=\"button\"\n            onClick={handleRejectClick}\n            id=\"rejectBtn\"\n          >\n            Reject\n          </button>\n        </div>,\n      ];\n    }\n  };\n\n  return <div className=\"row\">{renderButtons()}</div>;\n};\n\nexport default RequestButtons;\n","import React from \"react\";\nimport RequestButtons from \"./RequestButtons.js\";\n\nconst requestCard = ({\n  request,\n  setCustomerRequest,\n  customersRequests,\n  accpetedRequest,\n  setAcceptRequest,\n  show,\n  setShow,\n  setDeleteID,\n  buttonModifiers,\n  setWhichModal,\n}) => {\n  const handlePromp = () => {\n    setWhichModal(\"rejectCustomer\");\n    setShow(true);\n  };\n  const servicesRequested = request.servicesRequested;\n\n  const renderServices = () => {\n    let listServices = new Set();\n\n    for (const service in servicesRequested) {\n      const serviceStr = service.charAt(0).toUpperCase() + service.slice(1);\n\n      if (servicesRequested[service].perPound) {\n        listServices.add(\n          <li>\n            <strong>{serviceStr}</strong>: ${servicesRequested[service].price}{\" \"}\n            Per lb.\n          </li>\n        );\n      } else {\n        listServices.add(\n          <li>\n            <strong>{serviceStr}</strong>\n          </li>\n        );\n      }\n    }\n    return listServices;\n  };\n\n  return (\n    <div className=\"card col-4\">\n      <div className=\"card-body\">\n        <h2 className=\"card-title\">{request.customerEmail}</h2>\n        <h3 className=\"card-subtitle mb-2 text-muted\">\n          Requested: {request.date}\n        </h3>\n        <h3 className=\"card-subtitle mt-4\">Services Requested:</h3>\n\n        <ul>{renderServices()}</ul>\n\n        <p>\n          <strong>Total Cost:</strong> ${request.totalCost}\n        </p>\n        <RequestButtons\n          request={request}\n          show={show}\n          setShow={setShow}\n          setDeleteID={setDeleteID}\n          setCustomerRequest={setCustomerRequest}\n          customersRequests={customersRequests}\n          accpetedRequest={accpetedRequest}\n          setAcceptRequest={setAcceptRequest}\n          buttonModifiers={buttonModifiers}\n          handlePromp={handlePromp}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default requestCard;\n","import React from \"react\";\nimport CustomerReqCard from \"./RequestCard.js\";\nimport ModalCheck from \"../Modal/ModalCheck.js\";\n\nconst CustomerReqDetails = ({\n  sortRequests,\n  customersRequests,\n  setCustomerRequest,\n  accpetedRequest,\n  setAcceptRequest,\n  show,\n  setShow,\n  deleteID,\n  setDeleteID,\n  whichModal,\n  setWhichModal,\n}) => {\n  /*Helper function to modify displays when a button is pressed*/\n  const buttonModifiers = async (_id, toModify) => {\n    console.log(\"toModify\");\n    let updated = [];\n    for (const req of customersRequests) {\n      if (req._id === _id) {\n        updated.push({ ...req, [toModify]: !req[toModify] });\n\n        await pushRequestUpdate({ ...req, [toModify]: !req[toModify] });\n        await setAcceptRequest(!accpetedRequest);\n      } else {\n        updated.push(req);\n      }\n    }\n\n    setCustomerRequest([...updated]);\n  };\n\n  const pushRequestUpdate = async (toUpdate) => {\n    await fetch(\"/api/updateCustomerRequest\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(toUpdate),\n    });\n  };\n\n  console.log(\"--->\", buttonModifiers);\n  let renderRequest = customersRequests.map((request, i) => {\n    if (request.serviceRejected === undefined && !request.serviceComplete) {\n      return (\n        <CustomerReqCard\n          key={request._id}\n          request={request}\n          setCustomerRequest={setCustomerRequest}\n          customersRequests={customersRequests}\n          accpetedRequest={accpetedRequest}\n          setAcceptRequest={setAcceptRequest}\n          show={show}\n          setShow={setShow}\n          setDeleteID={setDeleteID}\n          buttonModifiers={buttonModifiers}\n          whichModal={whichModal}\n          setWhichModal={setWhichModal}\n        />\n      );\n    } else {\n      return null;\n    }\n  });\n\n  return (\n    <div className=\"row\">\n      {whichModal === \"rejectCustomer\" && (\n        <ModalCheck\n          key=\"M1\"\n          show={show}\n          setShow={setShow}\n          deleteID={deleteID}\n          buttonModifiers={buttonModifiers}\n          promptMessage={\"Are you sure you want to reject this request?\"}\n          promptHeader={\"Reject Customer Request Confirmation\"}\n        />\n      )}\n      {renderRequest}\n    </div>\n  );\n};\n\nexport default CustomerReqDetails;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nconst DisplayToggles = ({\n  customersRequests,\n  setCustomerRequest,\n  fetchCustomerRequest,\n  sortRequests,\n  accpetedRequest,\n}) => {\n  //Display all, only accepted, or need responded requests\n  let [showRequest, setShowRequest] = useState(\"showAll\");\n\n  console.log(\"Outside Render\");\n  useEffect(() => {\n    filterRequest();\n    console.log(\"Inside Effect\");\n  }, [showRequest, accpetedRequest]);\n\n  const handleChange = async (e) => {\n    setShowRequest(e.target.value);\n  };\n\n  const filterRequest = async () => {\n    console.log(\"Running Filter\");\n    let reqData = await fetchCustomerRequest(localStorage.email);\n\n    switch (showRequest) {\n      case \"needResponse\":\n        reqData = reqData.filter(\n          (a) => a.providerAccepted === false && a.serviceRejected === undefined\n        );\n        break;\n      case \"accepted\":\n        reqData = reqData.filter(\n          (a) => a.serviceComplete === false && a.providerAccepted === true\n        );\n        break;\n      default:\n        // statements_def\n        break;\n    }\n\n    sortRequests(reqData);\n    setCustomerRequest([...reqData]);\n  };\n  return (\n    <div className=\"col-8 d-flex justify-content-end\">\n      <div\n        className=\"btn-group\"\n        role=\"group\"\n        aria-label=\"Basic radio toggle button group\"\n        onChange={handleChange}\n      >\n        <input\n          type=\"radio\"\n          className=\"btn-check\"\n          name=\"btnDisplay\"\n          value=\"needResponse\"\n          id=\"btnDisplay1\"\n          checked={showRequest === \"needResponse\" ? true : false}\n          autoComplete=\"off\"\n        />\n        <label className=\"btn btn-outline-dark\" htmlFor=\"btnDisplay1\">\n          Need Response\n        </label>\n        <input\n          type=\"radio\"\n          className=\"btn-check\"\n          name=\"btnDisplay\"\n          value=\"accepted\"\n          id=\"btnDisplay2\"\n          checked={showRequest === \"accepted\" ? true : false}\n          autoComplete=\"off\"\n        />\n        <label className=\"btn btn-outline-dark\" htmlFor=\"btnDisplay2\">\n          Accepted\n        </label>\n        <input\n          type=\"radio\"\n          className=\"btn-check\"\n          name=\"btnDisplay\"\n          id=\"btnDisplay3\"\n          value=\"showAll\"\n          checked={showRequest === \"showAll\" ? true : false}\n          autoComplete=\"off\"\n        />\n        <label className=\"btn btn-outline-dark\" htmlFor=\"btnDisplay3\">\n          Show All\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default DisplayToggles;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport DisplayToggles from \"./DisplayToggles.js\";\n\nconst SortBar = ({\n  setDisplayOptions,\n  displayOptions,\n  sortRequests,\n  setCustomerRequest,\n  customersRequests,\n  setOrderDirection,\n  orderDirection,\n  fetchCustomerRequest,\n  accpetedRequest,\n  setAcceptRequest,\n}) => {\n  const handleChange = (e) => {\n    displayOptions.displayBy = e.target.value;\n    setDisplayOptions(displayOptions);\n    sortRequests(customersRequests);\n    setCustomerRequest([...customersRequests]);\n  };\n\n  const handleRadio = async (e) => {\n    let value = e.target.value; //Because HTML returns a string instead of a boolean\n\n    if (value === \"true\") {\n      value = true;\n    } else {\n      value = false;\n    }\n    setOrderDirection(value);\n    sortRequests(customersRequests);\n    setCustomerRequest([...customersRequests]);\n  };\n\n  useEffect(() => {\n    console.log(orderDirection);\n    sortRequests(customersRequests);\n    setCustomerRequest([...customersRequests]);\n  }, [orderDirection]); // Not sure I understand the warning. Things seem to work.\n\n  return (\n    <div className=\"row\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-2\">\n        <label className=\"navbar-brand\" htmlFor=\"SelectHowtoSort\">\n          Sort By:\n        </label>\n        <div className=\"col-2.5\">\n          <select\n            title=\"Sort by date or by total price\"\n            className=\"form-control\"\n            id=\"SelectHowtoSort\"\n            onChange={handleChange}\n          >\n            <option\n              name=\"RequestDate\"\n              aria-label=\"Sort By Date\"\n              value=\"requestDate\"\n            >\n              Date Requested\n            </option>\n            <option\n              name=\"RequestDate\"\n              aria-label=\"Sort By Cost\"\n              value=\"totalCharge\"\n            >\n              Total Cost\n            </option>\n          </select>\n          <div onChange={handleRadio}>\n            <div className=\"row\">\n              <div className=\"col-6 p-0\">\n                <input\n                  type=\"radio\"\n                  value={true}\n                  name=\"sortBy\"\n                  aria-label=\"Ascending Order\"\n                />\n                <label htmlFor=\"sortBy\" className=\"sortRadio\">\n                  Ascend\n                </label>\n              </div>\n              <div className=\"col-6 p-0\">\n                <input\n                  type=\"radio\"\n                  value={false}\n                  name=\"sortBy\"\n                  checked={!orderDirection}\n                  aria-label=\"Descending Order\"\n                />\n                <label htmlFor=\"sortBy\" className=\"sortRadio\">\n                  Descend\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n        <DisplayToggles\n          customersRequests={customersRequests}\n          setCustomerRequest={setCustomerRequest}\n          fetchCustomerRequest={fetchCustomerRequest}\n          sortRequests={sortRequests}\n          accpetedRequest={accpetedRequest}\n        />\n      </nav>\n    </div>\n  );\n};\n\nexport default SortBar;\n","// DANIEL LISKO\n\nimport { useState, useEffect } from \"react\";\nimport Services from \"../components/provider/providerServices/Services.js\";\nimport CustomerReqDetails from \"../components/provider/customerRequests/CustomerReqDetails.js\";\nimport SortBar from \"../components/provider/sortBar/SortBar.js\";\n\nconst ProviderPage = () => {\n  //Used to delete items\n  const [show, setShow] = useState(false);\n  const [deleteID, setDeleteID] = useState();\n  const [whichModal, setWhichModal] = useState();\n\n  //Initalize Customer Requests\n  let [services, setServices] = useState([]);\n  let [customersRequests, setCustomerRequest] = useState([]);\n  let [accpetedRequest, setAcceptRequest] = useState(false);\n\n  /*------------Set Display Options----------*/\n  let [displayOptions, setDisplayOptions] = useState({\n    displayBy: \"requestDate\",\n  });\n\n  //Sort by ascending or descending order\n  let [orderDirection, setOrderDirection] = useState(false);\n\n  /*-----------Load Service Requests----------*/ //Load storted services and requested services\n  useEffect(() => {\n    let tmpCustomerRequest;\n    //Get services offered -> set display to false\n    const loadServices = async () => {\n      let services = await getProviderServices(localStorage.email);\n\n      if (Object.keys(services).length === 0) {\n        services = [];\n      }\n      setServices(services);\n    };\n\n    //Get Customer Request\n    const getReq = async () => {\n      tmpCustomerRequest = await fetchCustomerRequest(localStorage.email);\n      sortRequests(tmpCustomerRequest);\n      setCustomerRequest(tmpCustomerRequest);\n    };\n    getReq();\n    loadServices();\n  }, []);\n\n  const sortRequests = (requests) => {\n    switch (displayOptions.displayBy) {\n      case \"requestDate\":\n        if (orderDirection) {\n          requests.sort((a, b) =>\n            new Date(a.date) > new Date(b.date) ? 1 : -1\n          );\n        } else {\n          requests.sort((a, b) =>\n            new Date(a.date) < new Date(b.date) ? 1 : -1\n          );\n        }\n        break;\n      case \"totalCharge\":\n        if (orderDirection) {\n          requests.sort((a, b) => (a.totalCost > b.totalCost ? 1 : -1));\n        } else {\n          requests.sort((a, b) => (a.totalCost < b.totalCost ? 1 : -1));\n        }\n        break;\n\n      default:\n        console.log(\"No Case\");\n        break;\n    }\n  };\n\n  //Changes the displays to either being visibile or not visibile\n  const modifyServiceDisplay = (id, toModify, setBoolean) => {\n    console.log(\"To Modifiy\", toModify);\n    let updated = services.map((service) => {\n      let update;\n      if (service.serviceID === id && setBoolean === undefined) {\n        update = { ...service, [toModify]: !service[toModify] };\n      } else {\n        update = update = { ...service, [toModify]: service[setBoolean] };\n      }\n\n      return update;\n    });\n\n    setServices(updated);\n  };\n\n  //Handle Service Edits\n  const onServiceEdit = (id, item, value) => {\n    let updated = services.map((serviceItem) => {\n      let update;\n      if (serviceItem.serviceID === id) {\n        update = { ...serviceItem, [item]: value };\n      } else {\n        update = serviceItem;\n      }\n      return update;\n    });\n\n    setServices(updated);\n  };\n\n  //----------Handling Post-----------------//\n  const getProviderServices = async (email) => {\n    const res = await fetch(\"/api/getServices\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email: email }),\n    });\n\n    const resJSON = await res.json();\n\n    return resJSON;\n  };\n  // Fetch all cusomter requests\n  // Requires a String of the providers email.\n  const fetchCustomerRequest = async (emailStr) => {\n    const emailObj = { providerEmail: emailStr };\n    const res = await fetch(\"/api/allCustomerLaundryRequest\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(emailObj),\n    });\n\n    const allCustomerRequests = await res.json();\n\n    return allCustomerRequests;\n  };\n\n  // Sending and Recieving services\n  return (\n    <div>\n      <div>\n        <h1>Your Service Request Headquarters...</h1>\n        <div className=\"row\">\n          <div className=\"serviceDetails col-3\">\n            <h2>Services By You:</h2>\n            <Services\n              services={services}\n              modifyServiceDisplay={modifyServiceDisplay}\n              onServiceEdit={onServiceEdit}\n              setServices={setServices}\n              show={show}\n              setShow={setShow}\n              deleteID={deleteID}\n              setDeleteID={setDeleteID}\n              whichModal={whichModal}\n              setWhichModal={setWhichModal}\n            />\n          </div>\n\n          <div className=\"col-8\" id=\"requestedServices\">\n            <SortBar\n              setDisplayOptions={setDisplayOptions}\n              displayOptions={displayOptions}\n              sortRequests={sortRequests}\n              setCustomerRequest={setCustomerRequest}\n              customersRequests={customersRequests}\n              orderDirection={orderDirection}\n              setOrderDirection={setOrderDirection}\n              fetchCustomerRequest={fetchCustomerRequest}\n              accpetedRequest={accpetedRequest}\n            />\n            <CustomerReqDetails\n              sortRequests={sortRequests}\n              customersRequests={customersRequests}\n              setCustomerRequest={setCustomerRequest}\n              accpetedRequest={accpetedRequest}\n              setAcceptRequest={setAcceptRequest}\n              show={show}\n              setShow={setShow}\n              deleteID={deleteID}\n              setDeleteID={setDeleteID}\n              whichModal={whichModal}\n              setWhichModal={setWhichModal}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProviderPage;\n","import React from \"react\";\n\nconst ProviderDetailsPage = () => {\n  return <div>Coming Soon...</div>;\n};\n\nexport default ProviderDetailsPage;\n","/* MICHAEL CHANG & DANIEL LISKO */\n\nimport \"./App.css\";\n\nimport { Routes, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport RedirectHome from \"./pages/RedirectHome.js\";\nimport SignUp from \"./pages/SignUp\";\nimport Login from \"./pages/Login\";\nimport SignUpProviders from \"./pages/SignUpProviders\";\nimport SignUpCustomers from \"./pages/SignUpCustomers\";\nimport Layout from \"./components/layout/Layout\";\nimport CustomerDetailsPage from \"./pages/CustomerDetailsPage\";\nimport CustomerRequestService from \"./pages/CustomerRequestService\";\nimport ProviderPage from \"./pages/ProviderPage\";\nimport ProviderDetailsPage from \"./pages/ProviderDetailsPage\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/SignUp\" element={<SignUp />} />\n        <Route path=\"/Login\" element={<Login />} />\n        <Route path=\"/signUpProviders\" element={<SignUpProviders />} />\n        <Route path=\"/signUpCustomers\" element={<SignUpCustomers />} />\n        <Route path=\"/CustomerDetailspage\" element={<CustomerDetailsPage />} />\n        <Route\n          path=\"/CustomerRequestService\"\n          element={<CustomerRequestService />}\n        />\n        <Route path=\"/ProviderPage\" element={<ProviderPage />} />\n        <Route path=\"/ProviderDetailspage\" element={<ProviderDetailsPage />} />\n        <Route path=\"/redirectHome\" element={<RedirectHome />} />\n      </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n","/* MICHAEL CHANG & DANIEL LISKO */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { UserLoginContextProvider } from \"./store/UserLoginContext\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <UserLoginContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </UserLoginContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}