{"version":3,"sources":["components/signups/SignUpCustomerForm.module.css","components/customer/LaundryRequestForm.module.css","components/customer/CustomerDetailsForm.module.css","components/login/LoginForm.module.css","components/layout/MainNavigation.module.css","components/ui/Card.module.css","components/layout/Layout.module.css","store/UserLoginContext.js","images/homeLandingLaundry.jpg","pages/Home.js","pages/RedirectHome.js","images/laundryUser.jpg","images/laundryProvider.jpg","components/ui/Card.js","pages/SignUp.js","components/login/LoginForm.js","pages/Login.js","components/signups/SignUpProviderForm.js","pages/SignUpProviders.js","components/signups/SignUpCustomerForm.js","pages/SignUpCustomers.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/customer/CustomerDetailsForm.js","pages/CustomerDetailsPage.js","components/customer/LaundryRequestForm.js","pages/CustomerRequestService.js","components/provider/EditService.js","components/provider/Button.js","components/provider/Service.js","components/provider/Services.js","pages/ProviderPage.js","pages/ProviderDetailsPage.js","App.js","index.js"],"names":["module","exports","UserLoginContext","createContext","userDetails","loginStatus","loginSuccess","localStorage","getItem","UserLoginContextProvider","props","setUserDetails","useState","setLoginStatus","findUserDetails","async","response","fetch","method","headers","body","JSON","stringify","data","json","useEffect","userType","credentials","email","setData","context","addUserDetailsHandler","details","key","value","Object","entries","removeUserDetailsHandler","bool","user","Provider","children","Home","className","style","height","width","src","homeLandingLaundry","alt","href","RedirectHome","navigate","useNavigate","setTimeout","Card","classes","card","SignUp","to","laundryProvider","laundryUser","LoginForm","errorMessage","setErrorMessage","emailRef","useRef","passwordRef","userContext","useContext","form","onSubmit","event","preventDefault","loginData","current","password","loginHandler","error","setItem","control","htmlFor","type","placeholder","required","name","ref","actions","Login","SignUpProviderForm","postProviderData","providerInfo","setProviderInfo","companyName","firstName","lastName","phoneNumber","address","city","state","zipCode","confirmPassword","handleChange","target","id","onChange","pattern","SignUpProviders","SignUpCustomerForm","passwordErrorMessage","setPasswordErrorMessage","emailErrorMessage","setEmailErrorMessage","firstNameRef","lastNameRef","confirmPasswordRef","cityRef","zipCodeRef","stateRef","phoneNumberRef","passwordChangeHandler","customerFirstName","customerLastName","customerEmail","customerPassword","customerConfirmPassword","customerCity","customerZipCode","customerState","customerPhoneNumber","customerData","createCustomerFetch","findEmailFetch","undefined","SignUpCustomers","MainNavigation","logoutHandler","clear","linksRender","push","logout","onClick","header","logo","Layout","main","CustomerDetailsForm","formEdit","setFormEdit","buttonText","setButtonText","customerDataChanged","updateUserDetailsFetch","defaultValue","disabled","CustomerDetailsPage","LaundryRequestForm","poundsOfLaundryRef","foldRef","poundsOfDryCleanRef","deliveryRef","dateRef","dateErrorMessage","setDateErrorMesssage","dryCleanForm","setDryCleanForm","washForm","setWashForm","poundsOfLaundry","fold","checked","poundsOfDryClean","delivery","date","Date","toLocaleDateString","laundryRequestData","wash","dryClean","laundryRequestFetch","checkBoxControl","textControl","providerCards","length","setSortPriceLowHighFunc","setSortPriceHighLowFunc","setSortDistanceFunc","currencyFormatter","Intl","NumberFormat","currency","availableProviders","servicesRequested","CustomerRequestService","providerCardRender","gotProivders","setGotProivders","sortPriceLowHigh","setSortPriceLowHigh","sortPriceHighLow","setSortPriceHighLow","sortDistance","setSortDistance","forEach","provider","laundryCost","serviceObjects","price","dryCleanCost","foldingCost","deliveryCost","totalCost","format","sort","a","b","console","log","EditService","serviceItem","modifyServiceDisplay","onServiceEdit","deleteService","submitEdit","services","serviceOptions","setServiceOptions","Set","serviceOpt","updateServices","serivceOpt","service","has","delete","handleInputChange","e","serviceID","showEdit","options","add","selected","renderOptions","output","perPound","renderPerPoundBox","step","min","max","Button","handleClick","showDetails","Service","setServices","Services","s","i","splice","postService","updated","map","index","renderServices","newService","ProviderPage","res","getProviderServices","loadServices","toModify","update","item","ProviderDetailsPage","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,KAAO,iCAAiC,MAAQ,kCAAkC,QAAU,oCAAoC,QAAU,sC,gBCA5JD,EAAOC,QAAU,CAAC,KAAO,iCAAiC,MAAQ,kCAAkC,YAAc,wCAAwC,gBAAkB,4CAA4C,QAAU,sC,gBCAlOD,EAAOC,QAAU,CAAC,KAAO,kCAAkC,MAAQ,mCAAmC,QAAU,qCAAqC,QAAU,uC,gBCA/JD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,yBAAyB,QAAU,2BAA2B,QAAU,6B,gBCAjID,EAAOC,QAAU,CAAC,OAAS,+BAA+B,KAAO,6BAA6B,OAAS,+BAA+B,OAAS,iC,kBCA/ID,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,uB,2JCIzB,MAAMC,EAAmBC,wBAAc,CACrCC,YAAa,GACbC,aAAa,IAITC,EAAeC,aAAaC,QAAQ,gBAEnC,SAASC,EAAyBC,GACvC,MAAON,EAAaO,GAAkBC,mBAAS,KACxCP,EAAaQ,GAAkBD,oBAAS,GAqB/C,MAAME,EAAkBC,UACtB,MAAMC,QAAiBC,MAAM,uBAAwB,CACnDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUC,KAEvB,aAAaP,EAASQ,QAIxBC,qBAAU,KACR,GAAqB,SAAjBnB,EAAyB,CACXS,WACd,MAAMW,EAAWnB,aAAaC,QAAQ,YAEhCmB,EAAc,CAAEC,MADRrB,aAAaC,QAAQ,SACCkB,SAAUA,GAC9Cf,QAAqBG,EAAgBa,IACrCd,GAAe,IAEjBgB,MAED,IAEH,MAAMC,EAAU,CACd1B,YAAaA,EACbC,YAAaA,EACb0B,sBAvCF,SAA+BC,GAC7B,IAAK,MAAOC,EAAKC,KAAUC,OAAOC,QAAQJ,GACxCrB,EAAe,IAAKP,EAAa,CAAC6B,GAAMC,KAsC1CG,yBAlCF,WACE1B,KAkCAG,gBAAiBA,EACjBD,eAlDF,SAA2ByB,GACzBzB,EAAeyB,IAkDf3B,eA/CF,SAA2B4B,GACzB5B,EAAe4B,KAiDjB,OACE,cAACrC,EAAiBsC,SAAlB,CAA2BN,MAAOJ,EAAlC,SACGpB,EAAM+B,WAKEvC,Q,qBC9EA,MAA0B,+CCsC1BwC,MAlCf,WACE,OACE,gCACE,6CACA,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,+TAQF,sBAAKA,UAAU,SAAf,UACE,qBACEC,MAAO,CACLC,OAAQ,OACRC,MAAO,OACP,aAAc,WAEhBC,IAAKC,EACLC,IAAI,+BARR,eAUe,IACb,mBAAGC,KAAK,iGAAR,8BCPKC,MAlBf,WACE,MAAMC,EAAWC,cAUjB,OAPEC,YAAW,KACTF,EAAS,OACR,KAMH,8BACE,mECjBS,MAA0B,wCCA1B,MAA0B,4C,iBCQ1BG,MAJf,SAAc7C,GACZ,OAAO,qBAAKiC,UAAWa,IAAQC,KAAxB,SAA+B/C,EAAM+B,YCqE/BiB,MAlEf,WACE,OACE,gCACE,8CACA,sBAAKf,UAAU,MAAf,UACE,qBAAKA,UAAU,sCAAf,SACE,eAAC,EAAD,WACE,qBAAKA,UAAU,gCAAf,SACE,wEAEF,qBAAKA,UAAU,gCAAf,SACE,cAAC,IAAD,CAAMgB,GAAG,mBAAT,SACE,2DAGJ,gCACE,qBACEf,MAAO,CACLC,OAAQ,OACRC,MAAO,OACP,aAAc,WAEhBC,IAAKa,EACLX,IAAI,yEARR,eAUe,IACb,mBAAGC,KAAK,oGAAR,qCAMN,qBAAKP,UAAU,SAAf,SACE,eAAC,EAAD,WACE,qBAAKA,UAAU,gCAAf,SACE,yEAEF,qBAAKA,UAAU,gCAAf,SACE,cAAC,IAAD,CAAMgB,GAAG,mBAAT,SACE,2DAGJ,qBAAKhB,UAAU,gCAAf,SACE,qBACEC,MAAO,CACLC,OAAQ,OACRC,MAAO,OACP,aAAc,WAEhBC,IAAKc,EACLZ,IAAI,uCAGR,+CACe,IACb,mBAAGC,KAAK,0EAAR,qC,gBCoCCY,MAxFf,SAAmBpD,GAEjB,MAAOqD,EAAcC,GAAmBpD,mBAAS,IAC3CwC,EAAWC,cACXY,EAAWC,mBACXC,EAAcD,mBAGdE,EAAcC,qBAAWnE,GA8C/B,OACE,cAAC,EAAD,UACE,uBAAMyC,UAAWa,IAAQc,KAAMC,SA7CRxD,UACzByD,EAAMC,iBAEN,MAGMC,EAAY,CAChB9C,MAJiBqC,EAASU,QAAQzC,MAKlC0C,SAJoBT,EAAYQ,QAAQzC,OAOpClB,QAAiBN,EAAMmE,aAAaH,GAG1C,GAAI1D,EAAS8D,MACXd,EAAgBhD,EAAS8D,WACpB,CAELvE,aAAawE,QAAQ,QAAS/D,EAASY,OACvCrB,aAAawE,QAAQ,WAAY/D,EAASU,UAC1CnB,aAAawE,QAAQ,gBAAgB,GAErBhE,WACd,MAAMW,EAAWnB,aAAaC,QAAQ,YAEhCmB,EAAc,CAAEC,MADRrB,aAAaC,QAAQ,SACCkB,SAAUA,GAC9C0C,EAAYzD,qBACJyD,EAAYtD,gBAAgBa,IAEpCyC,EAAYvD,gBAAe,IAE7BgB,GAG0B,aAAtBb,EAASU,SACX0B,EAAS,2BAETA,EAAS,mBAQX,UACE,sBAAKT,UAAWa,IAAQwB,QAAxB,UACE,uBAAOC,QAAQ,QAAf,oBACA,uBACEC,KAAK,QACLC,YAAY,kBACZC,UAAQ,EACRC,KAAK,QACLC,IAAKrB,OAGT,sBAAKtB,UAAWa,IAAQwB,QAAxB,UACE,uBAAOC,QAAQ,WAAf,sBACA,uBACEC,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRC,KAAK,WACLC,IAAKnB,OAGT,qBAAKxB,UAAWa,IAAQsB,MAAxB,SACE,4BAAIf,MAEN,qBAAKpB,UAAWa,IAAQ+B,QAAxB,SACE,mDClEKC,MAtBf,WAaE,OACE,gCACE,4CAEA,cAAC,EAAD,CAAWX,aAhBf9D,eAA4BQ,GAC1B,MAAMP,QAAiBC,MAAM,aAAc,CACzCC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUC,KAGvB,aAAaP,EAASQ,c,MCkJXiE,MA1JY,EAAGC,uBAC5B,MAAOC,EAAcC,GAAmBhF,mBAAS,CAC/Cc,SAAU,WACVmE,YAAa,GACbC,UAAW,GACXC,SAAU,GACVnE,MAAO,GACPoE,YAAa,GACbC,QAAS,GACTC,KAAM,GACNC,MAAO,GACPC,QAAS,GACTxB,SAAU,GACVyB,gBAAiB,KAGbC,EAAgB9B,IACpB,MAAMa,EAAOb,EAAM+B,OAAOlB,KACpBnD,EAAQsC,EAAM+B,OAAOrE,MAC3B0D,EAAgB,IAAKD,EAAc,CAACN,GAAOnD,KAS7C,OACE,cAAC,EAAD,UACE,uBAAMqC,SAPYC,IACpBA,EAAMC,iBACNiB,EAAiBC,IAKf,UACE,8CACA,sBAAKhD,UAAU,eAAf,UACE,uBAAOsC,QAAQ,cAAf,0BACA,uBACEC,KAAK,OACLG,KAAK,cACLmB,GAAG,cACHrB,YAAY,qBACZjD,MAAOyD,EAAaE,YACpBY,SAAUH,OAGd,gCACE,sBAAK3D,UAAU,SAAf,UACE,uBAAOsC,QAAQ,YAAf,wBACA,uBACEC,KAAK,OACLG,KAAK,YACLnD,MAAOyD,EAAaG,UACpBU,GAAG,YACHrB,YAAY,mBACZsB,SAAUH,OAGd,sBAAK3D,UAAU,SAAf,UACE,uBAAOsC,QAAQ,WAAf,uBACA,uBACEC,KAAK,OACLG,KAAK,WACLnD,MAAOyD,EAAaI,SACpBS,GAAG,WACHrB,YAAY,kBACZsB,SAAUH,UAIhB,gCACE,sBAAK3D,UAAU,SAAf,UACE,uBAAOsC,QAAQ,QAAf,mBACA,uBACEC,KAAK,QACLG,KAAK,QACLF,YAAY,cACZsB,SAAUH,OAGd,sBAAK3D,UAAU,SAAf,UACE,uBAAOsC,QAAQ,cAAf,mBACA,uBACEC,KAAK,MACLG,KAAK,cACLmB,GAAG,cACHE,QAAQ,6BACRvB,YAAY,eACZsB,SAAUH,UAIhB,yCACA,gCACE,sBAAK3D,UAAU,eAAf,UACE,uBAAOsC,QAAQ,UAAf,4BACA,uBACEI,KAAK,UACLmB,GAAG,WACHtB,KAAK,OACLuB,SAAUH,OAId,sBAAK3D,UAAU,SAAf,UACE,uBAAOsC,QAAQ,OAAf,kBACA,uBAAOI,KAAK,OAAOmB,GAAG,OAAOtB,KAAK,OAAOuB,SAAUH,OAErD,sBAAK3D,UAAU,SAAf,UACE,uBAAOsC,QAAQ,QAAf,mBACA,uBACEI,KAAK,QACLmB,GAAG,QACHtB,KAAK,OACLuB,SAAUH,OAGd,8BACE,uBAAOrB,QAAQ,UAAf,wBAEF,uBACEI,KAAK,UACLmB,GAAG,UACHtB,KAAK,SACLuB,SAAUH,OAGd,0CAEA,gCACE,sBAAK3D,UAAU,SAAf,UACE,uBAAOsC,QAAQ,WAAf,sBACA,uBACEI,KAAK,WACLmB,GAAG,WACHtB,KAAK,WACLuB,SAAUH,OAGd,sBAAK3D,UAAU,SAAf,UACE,uBAAOsC,QAAQ,kBAAf,8BACA,uBACEI,KAAK,kBACLmB,GAAG,kBACHtB,KAAK,WACLuB,SAAUH,UAIhB,qBAAK3D,UAAU,wBAAf,SACE,wBAAQuC,KAAK,SAAb,oCC7HKyB,MAvBS,KACtB,IAAIvD,EAAWC,cAcf,OACE,gCACE,kEACA,cAAC,EAAD,CAAcqC,iBAhBO3E,iBAChBQ,EAAK8E,gBAEZpF,MAAM,qBAAsB,CAC1BC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUC,KAEvB6B,EAAS,Y,gBC+LEwD,MAxMf,SAA4BlG,GAE1B,MAAOmG,EAAsBC,GAA2BlG,mBAAS,KAC1DmG,EAAmBC,GAAwBpG,mBAAS,IAGrDwC,EAAWC,cAGX4D,EAAe/C,mBACfgD,EAAchD,mBACdD,EAAWC,mBACXC,EAAcD,mBACdiD,EAAqBjD,mBACrBkD,EAAUlD,mBACVmD,EAAanD,mBACboD,EAAWpD,mBACXqD,EAAiBrD,mBAGjBsD,EAAwBzG,UAC5B,MAAM6D,EAAWT,EAAYQ,QAAQzC,MAC/BmE,EAAkBc,EAAmBxC,QAAQzC,MAGjD4E,EADElC,IAAayB,EACS,0BAEA,KA4D5B,OACE,cAAC,EAAD,UACE,uBAAM1D,UAAWa,IAAQc,KAAMC,SA5CLxD,UAC5ByD,EAAMC,iBAEN,MAAMgD,EAAoBR,EAAatC,QAAQzC,MACzCwF,EAAmBR,EAAYvC,QAAQzC,MACvCyF,EAAgB1D,EAASU,QAAQzC,MACjC0F,EAAmBzD,EAAYQ,QAAQzC,MACvC2F,EAA0BV,EAAmBxC,QAAQzC,MACrD4F,EAAeV,EAAQzC,QAAQzC,MAC/B6F,EAAkBV,EAAW1C,QAAQzC,MACrC8F,EAAgBV,EAAS3C,QAAQzC,MACjC+F,EAAsBV,EAAe5C,QAAQzC,MAEnD,GAAI0F,IAAqBC,EAGlB,CACLf,EAAwB,IACxB,MAAMoB,EAAe,CACnBpC,UAAW2B,EACX1B,SAAU2B,EACV9F,MAAO+F,EACPzB,KAAM4B,EACN1B,QAAS2B,EACT5B,MAAO6B,EACPhC,YAAaiC,EACbrD,SAAUgD,EACVlG,SAAU,kBAGWhB,EAAMyH,oBAAoBD,IAG/ClB,EAAqB,IACrB5D,EAAS,kBAET4D,EAAqB,+CAtBvBF,EAAwB,4BA8BxB,UACE,sBAAKnE,UAAWa,IAAQwB,QAAxB,UACE,uBAAOC,QAAQ,YAAf,wBACA,uBACEC,KAAK,OACLC,YAAY,aACZC,UAAQ,EACRC,KAAK,YACLC,IAAK2B,OAGT,sBAAKtE,UAAWa,IAAQwB,QAAxB,UACE,uBAAOC,QAAQ,WAAf,uBACA,uBACEC,KAAK,OACLC,YAAY,YACZC,UAAQ,EACRC,KAAK,WACLC,IAAK4B,OAGT,sBAAKvE,UAAWa,IAAQwB,QAAxB,UACE,uBAAOC,QAAQ,QAAf,oBACA,uBACEC,KAAK,QACLC,YAAY,kBACZC,UAAQ,EACRC,KAAK,QACLC,IAAKrB,EACLwC,SAtFiB1F,UACzB,MAAMa,EAAQqC,EAASU,QAAQzC,MAEzBlB,QAAiBN,EAAM0H,eAAexG,GAG1CoF,EADe,OAAbhG,QAAkCqH,IAAbrH,EACF,GAEA,gDAiFnB,qBAAK2B,UAAWa,IAAQsB,MAAxB,SACE,4BAAIiC,MAEN,sBAAKpE,UAAWa,IAAQwB,QAAxB,UACE,uBAAOC,QAAQ,WAAf,sBACA,uBACEC,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRC,KAAK,WACLC,IAAKnB,EACLsC,SAAUe,OAGd,sBAAK7E,UAAWa,IAAQwB,QAAxB,UACE,uBAAOC,QAAQ,kBAAf,8BACA,uBACEC,KAAK,WACLC,YAAY,oBACZC,UAAQ,EACRC,KAAK,kBACLC,IAAK6B,EACLV,SAAUe,OAGd,qBAAK7E,UAAWa,IAAQsB,MAAxB,SACE,4BAAI+B,MAEN,sBAAKlE,UAAWa,IAAQwB,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLC,YAAY,YACZC,UAAQ,EACRC,KAAK,OACLC,IAAK8B,OAGT,sBAAKzE,UAAWa,IAAQwB,QAAxB,UACE,uBAAOC,QAAQ,UAAf,sBACA,uBACEC,KAAK,OACLwB,QAAQ,WACRvB,YAAY,uBACZC,UAAQ,EACRC,KAAK,UACLC,IAAK+B,OAGT,sBAAK1E,UAAWa,IAAQwB,QAAxB,UACE,uBAAOC,QAAQ,QAAf,mBACA,uBACEC,KAAK,OACLwB,QAAQ,qHACRvB,YAAY,4CACZC,UAAQ,EACRC,KAAK,QACLC,IAAKgC,OAGT,sBAAK3E,UAAWa,IAAQwB,QAAxB,UACE,uBAAOC,QAAQ,QAAf,0BACA,uBACEC,KAAK,MACLwB,QAAQ,6BACRvB,YAAY,eACZC,UAAQ,EACRC,KAAK,QACLC,IAAKiC,OAGT,qBAAK5E,UAAWa,IAAQ+B,QAAxB,SACE,4DCnKK+C,MAlCf,WAuBE,OACE,gCACE,wDACA,cAAC,EAAD,CACEH,oBA1BNpH,eAAmCQ,GACjC,MAAMP,QAAiBC,MAAM,sBAAuB,CAClDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUC,KAGvB,aAAaP,EAASQ,QAkBlB4G,eAfNrH,eAA8BQ,GAC5B,MAAMP,QAAiBC,MAAM,uBAAwB,CACnDC,OAAQ,OACRC,QAAS,CACP,eAAgB,cAElBC,KAAMG,IAER,aAAaP,EAASQ,c,gBCuEX+G,MAxFf,WACE,MAAMnF,EAAWC,cAGXe,EAAcC,qBAAWnE,GAGzBsI,EAAiBhE,IACrBjE,aAAakI,QACbrE,EAAYvD,gBAAe,GAC3BuC,EAAS,MAGX,IAAIsF,EAAc,GAuDlB,OApCItE,EAAYhE,aAAegE,EAAY/D,aACA,aAArC+D,EAAYhE,YAAYsB,UAC1BgH,EAAYC,KACV,6BACE,cAAC,IAAD,CAAMhF,GAAG,0BAAT,8BADM,2BAIV+E,EAAYC,KACV,6BACE,cAAC,IAAD,CAAMhF,GAAG,uBAAT,mBAAoCS,EAAYhE,YAAY0F,UAA5D,YAAyE1B,EAAYhE,YAAY2F,aAD3F,0BAKV2C,EAAYC,KACV,6BACE,cAAC,IAAD,CAAMhF,GAAG,gBAAT,mBAA6BS,EAAYhE,YAAYyF,gBAD/C,iBAIV6C,EAAYC,KACV,6BACE,cAAC,IAAD,CAAMhF,GAAG,uBAAT,mBAAoCS,EAAYhE,YAAY0F,UAA5D,YAAyE1B,EAAYhE,YAAY2F,aAD3F,yBAKZ2C,EAAYC,KAvCV,6BACE,wBACEhG,UAAWa,IAAQoF,OACnBC,QAASL,EACTtD,KAAK,SAHP,sBADM,YA2CVwD,EAAYC,KACV,6BACE,cAAC,IAAD,CAAMhF,GAAG,SAAT,oBADM,UAQV,yBAAQhB,UAAWa,IAAQsF,OAA3B,UACE,cAAC,IAAD,CAAMnF,GAAG,IAAT,SACE,qBAAKhB,UAAWa,IAAQuF,KAAxB,2BAEF,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMpF,GAAG,IAAT,mBADM,QAGR,6BACE,cAAC,IAAD,CAAMA,GAAG,UAAT,sBADM,UAGP+E,W,iBC3EIM,MATf,SAAgBtI,GACd,OACE,gCACE,cAAC,EAAD,IACA,sBAAMiC,UAAWa,IAAQyF,KAAzB,SAAgCvI,EAAM+B,e,gBCkJ7ByG,MAlJf,WACE,MAAOC,EAAUC,GAAexI,oBAAS,IAClCyI,EAAYC,GAAiB1I,mBAAS,QACvCqG,EAAe/C,mBACfgD,EAAchD,mBACdkD,EAAUlD,mBACVmD,EAAanD,mBACboD,EAAWpD,mBACXqD,EAAiBrD,mBAGjBE,EAAcC,qBAAWnE,GAiD/B,OACE,cAAC,EAAD,UACE,uBAAMyC,UAAWa,IAAQc,KAAMC,SAtCPC,IAC1BA,EAAMC,iBAEN,MAAMgD,EAAoBR,EAAatC,QAAQzC,MACzCwF,EAAmBR,EAAYvC,QAAQzC,MACvC4F,EAAeV,EAAQzC,QAAQzC,MAC/B6F,EAAkBV,EAAW1C,QAAQzC,MACrC8F,EAAgBV,EAAS3C,QAAQzC,MACjC+F,EAAsBV,EAAe5C,QAAQzC,MAEnD,IAAKiH,GAA2B,SAAfE,EAAuB,CACtC,MAAME,EAAsB,CAC1BzD,UAAW2B,EACX1B,SAAU2B,EACVxB,KAAM4B,EACN1B,QAAS2B,EACT5B,MAAO6B,EACPhC,YAAaiC,EACbrG,MAAOwC,EAAYhE,YAAYwB,MAC/BF,SAAU0C,EAAYhE,YAAYsB,UA7BTX,iBACvBE,MAAM,yBAA0B,CACpCC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUC,MA0BrBiI,CAAuBD,GACvBnF,EAAYzD,eAAe,IAAIyD,EAAYhE,eAAgBmJ,IAGzDJ,GACFC,GAAY,GACZE,EAAc,UAEdF,GAAY,GACZE,EAAc,UAOd,UACE,sBAAK3G,UAAWa,IAAQwB,QAAxB,UACE,uBAAOC,QAAQ,YAAf,wBACA,uBACEC,KAAK,OACLC,YAAY,aACZC,UAAQ,EACRC,KAAK,YACLoE,aAAcrF,EAAYhE,YAAY0F,UACtC4D,SAAUP,EACV7D,IAAK2B,OAGT,sBAAKtE,UAAWa,IAAQwB,QAAxB,UACE,uBAAOC,QAAQ,WAAf,uBACA,uBACEC,KAAK,OACLC,YAAY,YACZC,UAAQ,EACRC,KAAK,WACLoE,aAAcrF,EAAYhE,YAAY2F,SACtC2D,SAAUP,EACV7D,IAAK4B,OAGT,sBAAKvE,UAAWa,IAAQwB,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLC,YAAY,YACZC,UAAQ,EACRC,KAAK,OACLoE,aAAcrF,EAAYhE,YAAY8F,KACtCwD,SAAUP,EACV7D,IAAK8B,OAGT,sBAAKzE,UAAWa,IAAQwB,QAAxB,UACE,uBAAOC,QAAQ,UAAf,sBACA,uBACEC,KAAK,OACLwB,QAAQ,WACRvB,YAAY,uBACZC,UAAQ,EACRC,KAAK,UACLoE,aAAcrF,EAAYhE,YAAYgG,QACtCsD,SAAUP,EACV7D,IAAK+B,OAGT,sBAAK1E,UAAWa,IAAQwB,QAAxB,UACE,uBAAOC,QAAQ,QAAf,mBACA,uBACEC,KAAK,OACLwB,QAAQ,qHACRvB,YAAY,4CACZC,UAAQ,EACRC,KAAK,QACLoE,aAAcrF,EAAYhE,YAAY+F,MACtCuD,SAAUP,EACV7D,IAAKgC,OAGT,sBAAK3E,UAAWa,IAAQwB,QAAxB,UACE,uBAAOC,QAAQ,QAAf,0BACA,uBACEC,KAAK,MACLwB,QAAQ,6BACRvB,YAAY,eACZC,UAAQ,EACRC,KAAK,QACLoE,aAAcrF,EAAYhE,YAAY4F,YACtC0D,SAAUP,EACV7D,IAAKiC,OAGT,qBAAK5E,UAAWa,IAAQ+B,QAAxB,SACE,iCAAS8D,YCxHJM,MAtBf,WAEE,MAAMvF,EAAcC,qBAAWnE,GAE/B,YAAgCmI,IAA5BjE,EAAYhE,YAEZ,gCACE,uCAAQgE,EAAYhE,YAAY0F,UAAhC,YAA6C1B,EAAYhE,YAAY2F,YACrE,8BACE,cAAC,EAAD,SAON,8BACE,0D,gBC2KS6D,MA3Lf,SAA4BlJ,GAE1B,MAAMmJ,EAAqB3F,mBACrB4F,EAAU5F,mBACV6F,EAAsB7F,mBACtB8F,EAAc9F,mBACd+F,EAAU/F,oBAETgG,EAAkBC,GAAwBvJ,sBAC1CwJ,EAAcC,GAAmBzJ,oBAAS,IAC1C0J,EAAUC,GAAe3J,oBAAS,GAiIzC,OACE,cAAC,EAAD,UACE,uBAAM+B,UAAWa,IAAQc,KAAMC,SAhInCxD,eAAqCyD,GACnCA,EAAMC,iBAEN,MAAM+F,EAAkBX,EAAmBlF,QAAQzC,MAC7CuI,EAAOX,EAAQnF,QAAQ+F,QACvBC,EAAmBZ,EAAoBpF,QAAQzC,MAC/C0I,EAAWZ,EAAYrF,QAAQ+F,QAC/BG,EAAOZ,EAAQtF,QAAQzC,MAG7B,GAAI2I,GADU,IAAIC,MACDC,qBAEf,YADAZ,EAAqB,+BAGrBA,IAGF,MAAMa,EAAqB,CACzBC,KAAMT,EACNU,SAAUP,EACVF,KAAMA,EACNG,SAAUA,EACVC,KAAMA,SAGFnK,EAAMyK,oBAAoBH,IAuG9B,UACE,sBAAKrI,UAAWa,IAAQ4H,gBAAxB,UACE,uBAAOnG,QAAQ,OAAf,2CACA,uBAAOC,KAAK,WAAWG,KAAK,OAAOoB,SAnG3C,WACE8D,GAAaD,SAITA,EAEA,sBAAK3H,UAAWa,IAAQ6H,YAAxB,UACE,uBAAOpG,QAAQ,kBAAf,kDAGA,uBACEC,KAAK,SACLC,YAAY,mBACZC,UAAQ,EACRC,KAAK,kBACLC,IAAKuE,OAMT,uBACE3E,KAAK,SACLhD,MAAM,GACNmD,KAAK,kBACLC,IAAKuE,IA4EP,sBAAKlH,UAAWa,IAAQ4H,gBAAxB,UACE,uBAAOnG,QAAQ,WAAf,wCACA,uBACEC,KAAK,WACLG,KAAK,WACLoB,SA/GV,WACE4D,GAAiBD,SAoCbA,EAEA,sBAAKzH,UAAWa,IAAQ6H,YAAxB,UACE,uBAAOpG,QAAQ,mBAAf,uDAGA,uBACEC,KAAK,SACLC,YAAY,mBACZC,UAAQ,EACRC,KAAK,mBACLC,IAAKyE,OAMT,uBACE7E,KAAK,SACLhD,MAAM,GACNmD,KAAK,mBACLC,IAAKyE,IAyDP,uBAAMpH,UAAWa,IAAQ4H,gBAAzB,UACE,uBAAOnG,QAAQ,OAAf,oBACA,uBAAOC,KAAK,WAAWG,KAAK,OAAOC,IAAKwE,OAG1C,uBAAMnH,UAAWa,IAAQ4H,gBAAzB,UACE,uBAAOnG,QAAQ,WAAf,uBACA,uBAAOC,KAAK,WAAWG,KAAK,WAAWC,IAAK0E,OAE9C,sBAAKrH,UAAWa,IAAQ6H,YAAxB,UACE,uBAAOpG,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLE,UAAQ,EACRD,YAAY,iBACZE,KAAK,OACLC,IAAK2E,OAGT,qBAAKtH,UAAWa,IAAQsB,MAAxB,SACE,4BAAIoF,MAEN,qBAAKvH,UAAWa,IAAQ+B,QAAxB,SACE,sDAzEF7E,EAAM4K,cAAcC,OAAS,EAE7B,sBAAK5I,UAAWa,IAAQ4H,gBAAxB,UACE,2CACA,uBACElG,KAAK,QACLsB,GAAG,eACHnB,KAAK,OACLoB,SAAU/F,EAAM8K,0BAElB,uBAAOvG,QAAQ,WAAf,4BACA,uBACEC,KAAK,QACLsB,GAAG,eACHnB,KAAK,OACLoB,SAAU/F,EAAM+K,0BAElB,uBAAOxG,QAAQ,YAAf,4BACA,uBACEC,KAAK,QACLsB,GAAG,WACHnB,KAAK,OACLoB,SAAU/F,EAAMgL,sBAElB,uBAAOzG,QAAQ,WAAf,mDAIJ,QCvIN,MAAM0G,EAAoB,IAAIC,KAAKC,aAAa,QAAS,CACvDjJ,MAAO,WACPkJ,SAAU,QAGZ,IAAIC,EAAqB,GACrBC,EAAoB,GAwLTC,MAtLf,WACE,IAAIC,EAAqB,GACrBZ,EAAgB,GAEpB,MAAOa,EAAcC,GAAmBxL,sBACjCyL,EAAkBC,GAAuB1L,oBAAS,IAClD2L,EAAkBC,GAAuB5L,oBAAS,IAClD6L,EAAcC,GAAmB9L,oBAAS,GA4JjD,OAvHAmL,EAAmBY,SAASC,IAE1B,MAAMC,EAAcb,EAAkBf,KAClC2B,EAASE,eAAe7B,KAAK8B,MAAQf,EAAkBf,KACvD,EACE+B,EAAehB,EAAkBd,SACnC0B,EAASE,eAAe5B,SAAS6B,MAAQf,EAAkBd,SAC3D,EACE+B,EAAcjB,EAAkBvB,KAClCmC,EAASE,eAAerC,KAAKsC,MAC7B,EACEG,EAAelB,EAAkBpB,SACnCgC,EAASE,eAAelC,SAASmC,MACjC,EACEI,EAAYN,EAAcG,EAAeC,EAAcC,EAG7D5B,EAAc3C,KAAK,CACjB,qBAAKhG,UAAU,OAAf,SACE,cAAC,EAAD,UACE,sBAAKA,UAAU,UAAf,UACE,oBAAIA,UAAU,gCAAd,SACGiK,EAAS/G,cAEZ,qBAAKlD,UAAU,MAAf,SACE,uBAAMA,UAAU,SAAhB,UACE,4CADF,IAC2BqJ,EAAkBnB,UAG/C,sBAAKlI,UAAU,MAAf,UACE,uBAAMA,UAAU,QAAhB,UACE,6CADF,IAC4BiK,EAAShL,SAErC,uBAAMe,UAAU,QAAhB,UACE,oDADF,IACmCiK,EAAS5G,eAE5C,uBAAMrD,UAAU,QAAhB,UACE,+CADF,IAC8BiK,EAAS3G,WAEvC,uBAAMtD,UAAU,QAAhB,UACE,4CADF,IAC2BiK,EAAS1G,QAEpC,uBAAMvD,UAAU,QAAhB,UACE,6CADF,IAC4BiK,EAASzG,SAErC,uBAAMxD,UAAU,QAAhB,UACE,gDADF,IAC+BiK,EAASxG,cAG1C,sBAAKzD,UAAU,MAAf,UACE,uBAAMA,UAAU,QAAhB,UACE,oDACCgJ,EAAkByB,OAAOP,MAE5B,uBAAMlK,UAAU,QAAhB,UACE,yDACCgJ,EAAkByB,OAAOJ,MAE5B,uBAAMrK,UAAU,QAAhB,UACE,wDACCgJ,EAAkByB,OAAOH,MAE5B,uBAAMtK,UAAU,QAAhB,UACE,yDACCgJ,EAAkByB,OAAOF,SAG9B,qBAAKvK,UAAU,MAAf,SACE,sBAAMA,UAAU,6BAAhB,SACE,kDAEGgJ,EAAkByB,OAAOD,iBAOtCnB,EAAkBnB,KAClBsC,EACAP,EAASxG,aAITiG,EACFf,EAAc+B,MAAK,CAACC,EAAGC,IAAMD,EAAE,GAAKC,EAAE,KAC7BhB,GACTjB,EAAc+B,MAAK,CAACC,EAAGC,IAAMA,EAAE,GAAKD,EAAE,KAOxChC,EAAcqB,SAASlJ,IACrByI,EAAmBvD,KAAKlF,EAAK,OAG/B+J,QAAQC,IACNhB,EACA,YACAF,EACA,WACAF,EACA,YAgBA,gCACE,yDACA,sBAAK1J,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEwI,oBA9IkBpK,UAC1B,MAAMC,QAAiBC,MAAM,sBAAuB,CAClDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUC,KAGvBwK,QAA2B/K,EAASQ,OACpCwK,EAAoBzK,EAGpB6K,GAAiBD,IAkITb,cAAeA,EACfE,wBAlKV,WACEc,GAAoB,GACpBE,GAAoB,GACpBE,GAAgB,IAgKRjB,wBA7JV,WACEa,GAAoB,GACpBE,GAAoB,GACpBE,GAAgB,IA2JRhB,oBAxJV,WACEY,GAAoB,GACpBE,GAAoB,GACpBE,GAAgB,QAwJZ,qBAAK/J,UAAU,QAAf,SAxBAuJ,EAAmBX,OAAS,EACvBW,EAGL,oBAAIvJ,UAAU,yDAAd,yECmBO+K,MAzLK,EAClBC,cACAC,uBACAC,gBACAC,gBACAC,aACAC,eAGA,IAAKC,EAAgBC,GAAqBtN,mBAAS,IAAIuN,KAGvD1M,qBAAU,KACR,IAAI2M,EAAa,IAAID,IAAI,CAAC,OAAQ,YAAa,OAAQ,aAGvDE,EAAeD,GACfZ,QAAQC,IAAI,WAAYW,GACxBF,EAAkBE,KACjB,IAEH,MAAMC,EAAkBC,IACtBN,EAASrB,SAAS4B,IACZD,EAAWE,IAAID,EAAQA,UACzBD,EAAWG,OAAOF,EAAQA,aAkB1BG,EAAqBC,IACzB,MAAMpI,EAASoI,EAAEpI,OACjB,IAAIrE,EAIAA,EAFgB,aAAhBqE,EAAOlB,KACY,SAAjBkB,EAAOrE,MAMHqE,EAAOrE,MAGjB2L,EAAcF,EAAYiB,UAAWrI,EAAOlB,KAAMnD,IAwFpD,OACE,uBAAkCS,UAAU,UAAU4B,SApHtCoK,IAChBA,EAAElK,iBAG0B,KAAxBkJ,EAAYY,UAGhBX,EAAqBD,EAAYiB,UAAW,YAC5CpB,QAAQC,IAAI,SAAUE,GACtBA,EAAYkB,UAAW,EACvBd,EAAWJ,KA0GX,UACE,gCACE,uBAAO1I,QAAQ,UAAf,SACE,qDAEF,wBACEI,KAAK,UACLoB,SAAUiI,EACVxM,MAAOyL,EAAYY,QAHrB,SArFgB,MACpB,IAAIO,EAAU,IAAIX,IAYlB,OATAW,EAAQC,IACN,wBAAQ7M,MAAM,GAAGwH,UAAQ,EAACsF,UAAQ,EAAlC,+BAIFf,EAAetB,SAASyB,IACtBU,EAAQC,IAAI,wBAAQ7M,MAAOkM,EAAf,SAA4BA,QAGnCU,GA6EAG,KAEH,qBAAKtM,UAAU,gCAAf,SA5EoB,MACxB,IAAIuM,EAyDJ,MAxD4B,cAAxBvB,EAAYY,SAAmD,SAAxBZ,EAAYY,UAErDW,EAASvB,EAAYwB,SACnB,sBAAKxM,UAAU,yBAAf,UACE,uBACEA,UAAU,mBACVuC,KAAK,WACLG,KAAK,WACLmB,GACEmH,EAAYwB,SACR,yBACA,yBAENjN,MAAOyL,EAAYwB,SACnB1I,SAAUiI,EACVhE,SAAO,IAET,uBACE/H,UAAU,mBACVsC,QACE0I,EAAYwB,SACR,yBACA,yBALR,kCAaF,sBAAKxM,UAAU,yBAAf,UACE,uBACEA,UAAU,mBACVuC,KAAK,WACLG,KAAK,WACLmB,GACEmH,EAAYwB,SACR,yBACA,yBAENjN,MAAOyL,EAAYwB,SACnB1I,SAAUiI,IAEZ,uBACE/L,UAAU,mBACVsC,QACE0I,EAAYwB,SACR,yBACA,yBALR,mCAaCD,GAmBAE,QAGL,gCACE,uBAAOnK,QAAQ,GAAf,kBACA,uBACEC,KAAK,SACLmK,KAAK,OACLC,IAAI,IACJC,IAAI,MACJlK,KAAK,QACLF,YAAawI,EAAYZ,MACzBtG,SAAUiI,OAGd,sBAAK/L,UAAU,uCAAf,UACE,wBAAQuC,KAAK,SAAShD,MAAM,OAAOS,UAAU,UAA7C,kBAGA,wBAAQA,UAAU,YAAYkG,QAtHb,KACrBiF,EAAcH,EAAYiB,WAC1BhB,EAAqBD,EAAYiB,UAAW,aAoHxC,yBAhCOjB,EAAYiB,Y,MC/HZY,MApBA,EAAG7B,cAAaC,uBAAsBpH,SACnD,MAAMiJ,EAAed,IACnBf,EAAqBD,EAAYiB,UAAW,gBAG9C,OACE,sBAAMjM,UAAU,yDAAhB,SACGgL,EAAY+B,YACX,wBAAQlJ,GAAIA,EAAIqC,QAAS4G,EAAa9M,UAAU,cAAhD,oBAIA,wBAAQ6D,GAAIA,EAAIqC,QAAS4G,EAAa9M,UAAU,cAAhD,kBCgDOgN,MA1DC,EACdhC,cACAC,uBACApH,KACAsH,gBACA8B,kBAGA,MAUM5N,EACJ,gCACE,sBAAKW,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAf,SACE,yCACS,+BAAOgL,EAAYZ,aAG9B,qBAAKpK,UAAU,mCAAf,SACGgL,EAAYwB,UAAY,8CAG7B,qBAAKxM,UAAU,OAAf,SACE,sBAAKA,UAAU,uCAAf,UACE,wBAAQA,UAAU,UAAUkG,QAxBhB,KAClB+E,EAAqBD,EAAYiB,UAAW,aAuBtC,kBAGA,wBAAQjM,UAAU,YAAYkG,QAvBf,KACrBiF,EAAcH,EAAYiB,WAC1BhB,EAAqBD,EAAYiB,UAAW,aAqBtC,4BAQR,OACE,sBAAiCjM,UAAU,cAA3C,UACE,oBAAIA,UAAU,0BAAd,SACE,+BAAOgL,EAAYY,YAErB,cAAC,EAAD,CACEZ,YAAaA,EACbC,qBAAsBA,EACtBpH,GAAIA,IAELmH,EAAY+B,aAAe1N,IATpB2L,EAAYiB,YCmDXiB,MA5FE,EACf7B,WACA4B,cACAhC,uBACAC,oBAGA,MAAMC,EAAiBtH,IACrBwH,EAASrB,SAAQ,CAACmD,EAAGC,KACfD,EAAElB,YAAcpI,GAClBwH,EAASgC,OAAOD,EAAG,GAErBE,EAAYjC,MAId,IAAIkC,EAAUlC,EAASmC,KAAI,CAAC5B,EAAS6B,IAC3B7B,EAAQK,UAAYwB,IAG9BR,EAAYM,IAgBRnC,EAAahN,gBACXkP,EAAY,IAAIjC,EAAUO,KAG5B0B,EAAclP,UAClByM,QAAQC,IAAI,UAAWO,SACL/M,MAAM,sBAAuB,CAC7CC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEM,MAAOrB,aAAaqB,MAAOoM,SAAUA,OAI1DqC,EAAiBrC,EAASmC,KAAI,CAACL,EAAGC,IAClCD,EAAEjB,SAEF,cAAC,EAAD,CAEEb,SAAUA,EACVL,YAAamC,EACblC,qBAAsBA,EACtBC,cAAeA,EACfC,cAAeA,EACfC,WAAYA,GANP+B,EAAElB,WAYX,cAAC,EAAD,CAEEpI,GAAIuJ,EACJpC,YAAamC,EACblC,qBAAsBA,EACtBE,cAAeA,GAJVgC,EAAElB,aASb,OACE,gCACGyB,EACD,gCACE,0DAA6B,EAAIrC,EAASzC,UAAgB,OAE5D,sBAAK5I,UAAU,gCAAf,UACGqL,EAASzC,OAAS,GACjB,wBAAQ1C,QA9DG,KACjB2E,QAAQC,IAAI,QAASO,EAASzC,QAC9B,MAAM+E,EAAa,CACjB/B,QAAS,GACTxB,MAAO,EACPoC,UAAU,EACVP,UAAWZ,EAASzC,OACpBmE,aAAa,EACbb,UAAU,GAEZe,EAAY,IAAI5B,EAAUsC,KAoDpB,yBACC,WCPIC,MAjFM,KACnB,IAAKvC,EAAU4B,GAAehP,mBAAS,IA4DvC,OAXAa,qBAAU,KAEaV,WACnB,IAAIiN,OAlBoBjN,WAC1B,MAAMyP,QAAYvP,MAAM,mBAAoB,CAC1CC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEM,MAAOA,MAKhC,aAFsB4O,EAAIhP,QASHiP,CAAoBlQ,aAAaqB,OACtDgO,EAAY5B,IAEd0C,KACC,IAKD,8BACE,gCACE,+CACA,qBAAK/N,UAAU,MAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,kDACA,cAAC,EAAD,CACEqL,SAAUA,EACVJ,qBAlEiB,CAACpH,EAAImK,KAChC,IAAIT,EAAUlC,EAASmC,KAAK5B,IAC1B,IAAIqC,EAOJ,OALEA,EADErC,EAAQK,YAAcpI,EACf,IAAK+H,EAAS,CAACoC,IAAYpC,EAAQoC,IAEnCpC,EAGJqC,KAGThB,EAAYM,IAuDFrC,cAnDU,CAACrH,EAAIqK,EAAM3O,KAC/B,IAAIgO,EAAUlC,EAASmC,KAAKxC,IAC1B,IAAIiD,EAMJ,OAJEA,EADEjD,EAAYiB,YAAcpI,EACnB,IAAKmH,EAAa,CAACkD,GAAO3O,GAE1ByL,EAEJiD,KAGThB,EAAYM,IAyCFN,YAAaA,eCnEZkB,OARf,WACE,OACE,8BACE,0DCmCSC,OAtBf,WACE,OACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,mBAAmBC,QAAS,cAAC,EAAD,MACxC,cAAC,IAAD,CAAOD,KAAK,mBAAmBC,QAAS,cAAC,EAAD,MACxC,cAAC,IAAD,CAAOD,KAAK,uBAAuBC,QAAS,cAAC,EAAD,MAC5C,cAAC,IAAD,CACED,KAAK,0BACLC,QAAS,cAAC,EAAD,MAEX,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,EAAD,MACrC,cAAC,IAAD,CAAOD,KAAK,uBAAuBC,QAAS,cAAC,GAAD,MAC5C,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,EAAD,YCxB7CC,IAASC,OACP,cAAC1Q,EAAD,UACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJ2Q,SAASC,eAAe,W","file":"static/js/main.6e24a63a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SignUpCustomerForm_form__HR3OO\",\"error\":\"SignUpCustomerForm_error__3CD6u\",\"control\":\"SignUpCustomerForm_control__2TBwh\",\"actions\":\"SignUpCustomerForm_actions__27TDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LaundryRequestForm_form__1U8uC\",\"error\":\"LaundryRequestForm_error__33vAL\",\"textControl\":\"LaundryRequestForm_textControl__3wxwB\",\"checkBoxControl\":\"LaundryRequestForm_checkBoxControl__y2qIV\",\"actions\":\"LaundryRequestForm_actions__3ccG5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CustomerDetailsForm_form__2cVaK\",\"error\":\"CustomerDetailsForm_error__1DOLH\",\"control\":\"CustomerDetailsForm_control__ViaVh\",\"actions\":\"CustomerDetailsForm_actions__1CF6X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__1c99a\",\"error\":\"LoginForm_error__i9owo\",\"control\":\"LoginForm_control__3T3Ps\",\"actions\":\"LoginForm_actions__33BbP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"active\":\"MainNavigation_active__oN3Ka\",\"logout\":\"MainNavigation_logout__3fhIF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3_jzl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","/* MICHAEL CHANG */\n\nimport { createContext, useState, useEffect } from \"react\";\n\n// create context\nconst UserLoginContext = createContext({\n  userDetails: {},\n  loginStatus: false,\n});\n\n// check localStorage\nconst loginSuccess = localStorage.getItem(\"loginSuccess\");\n\nexport function UserLoginContextProvider(props) {\n  const [userDetails, setUserDetails] = useState({});\n  const [loginStatus, setLoginStatus] = useState(false);\n\n  function setLoginStatusCtx(bool) {\n    setLoginStatus(bool);\n  }\n\n  function setUserDetailsCtx(user) {\n    setUserDetails(user);\n  }\n\n  function addUserDetailsHandler(details) {\n    for (const [key, value] of Object.entries(details)) {\n      setUserDetails({ ...userDetails, [key]: value });\n    }\n  }\n\n  function removeUserDetailsHandler() {\n    setUserDetails();\n  }\n\n  // fetch for userDetails\n  const findUserDetails = async (data) => {\n    const response = await fetch(\"/api/findUserDetails\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n    return await response.json();\n  };\n\n  // if localStorage is \"true\" (NOTE: localStorage only stores strings)\n  useEffect(() => {\n    if (loginSuccess === \"true\") {\n      const setData = async () => {\n        const userType = localStorage.getItem(\"userType\");\n        const email = localStorage.getItem(\"email\");\n        const credentials = { email: email, userType: userType };\n        setUserDetails(await findUserDetails(credentials));\n        setLoginStatus(true);\n      };\n      setData();\n    }\n  }, []);\n\n  const context = {\n    userDetails: userDetails,\n    loginStatus: loginStatus,\n    addUserDetailsHandler: addUserDetailsHandler,\n    removeUserDetailsHandler: removeUserDetailsHandler,\n    findUserDetails: findUserDetails,\n    setLoginStatus: setLoginStatusCtx,\n    setUserDetails: setUserDetailsCtx,\n  };\n\n  return (\n    <UserLoginContext.Provider value={context}>\n      {props.children}\n    </UserLoginContext.Provider>\n  );\n}\n\nexport default UserLoginContext;\n","export default __webpack_public_path__ + \"static/media/homeLandingLaundry.315cce71.jpg\";","/* MICHAEL CHANG & DANIEL LISKO */\n\nimport homeLandingLaundry from \"../images/homeLandingLaundry.jpg\";\n\nfunction Home() {\n  return (\n    <div>\n      <h1>Hamper Dash</h1>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <p>\n            Welcome to Hamper Dash!! We connect you to the best launderers\n            around so you can save time and focus on what matters, instead of\n            laundry chores. We offer registration as a laundry provider (to\n            provide laundry services) on our platform, or as a laundry user (get\n            your laundry cleaned).\n          </p>\n        </div>\n        <div className=\"col-12\">\n          <img\n            style={{\n              height: \"100%\",\n              width: \"100%\",\n              \"object-fit\": \"contain\",\n            }}\n            src={homeLandingLaundry}\n            alt=\"Nice and neat laundry room\"\n          />\n          Picture from{\" \"}\n          <a href=\"https://www.rd.com/wp-content/uploads/2021/09/GettyImages-1181334518-MLedit.jpg?resize=700,467\">\n            rd.com\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/* MICHAEL CHANG */\n\nimport { useNavigate } from \"react-router-dom\";\n\nfunction RedirectHome() {\n  const navigate = useNavigate();\n\n  function delayedRedirectHome() {\n    setTimeout(() => {\n      navigate(\"/\");\n    }, 3000);\n  }\n\n  delayedRedirectHome();\n\n  return (\n    <div>\n      <p>Thanks! Redirecting to Home....</p>\n    </div>\n  );\n}\n\nexport default RedirectHome;\n","export default __webpack_public_path__ + \"static/media/laundryUser.542ff844.jpg\";","export default __webpack_public_path__ + \"static/media/laundryProvider.941f55cc.jpg\";","// MICHAEL CHANG & DANIEL LISKO\n\nimport classes from \"./Card.module.css\";\n\nfunction Card(props) {\n  return <div className={classes.card}>{props.children}</div>;\n}\n\nexport default Card;\n","/* MICHAEL CHANG & DANIEL LISKO*/\n\nimport laundryUser from \"../images/laundryUser.jpg\";\nimport laundryProvider from \"../images/laundryProvider.jpg\";\n\nimport { Link } from \"react-router-dom\";\nimport Card from \"../components/ui/Card\";\n\nfunction SignUp() {\n  return (\n    <div>\n      <h1>Sign Up Page</h1>\n      <div className=\"row\">\n        <div className=\"col-6 d-flex justify-content-center\">\n          <Card>\n            <div className=\"d-flex justify-content-center\">\n              <h4>I am a laundry provider! I can wash!</h4>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n              <Link to=\"/signUpProviders\">\n                <strong>Providers Sign Up</strong>\n              </Link>\n            </div>\n            <div>\n              <img\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  \"object-fit\": \"contain\",\n                }}\n                src={laundryProvider}\n                alt=\"Worker holding freshly cleaned towels at a laundry provider business\"\n              />\n              Picture from{\" \"}\n              <a href=\"https://boltlaundry.com/wp-content/uploads/2021/01/Commercial-Laundry-Service-In-Knoxville-TN.jpg\">\n                boltlaundry.com\n              </a>\n            </div>\n          </Card>\n        </div>\n        <div className=\"col-6 \">\n          <Card>\n            <div className=\"d-flex justify-content-center\">\n              <h4>I like my laundry clean and spotless!</h4>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n              <Link to=\"/signUpCustomers\">\n                <strong>Customers Sign Up</strong>\n              </Link>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n              <img\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  \"object-fit\": \"contain\",\n                }}\n                src={laundryUser}\n                alt=\"Woman doing laundry with a smile\"\n              />\n            </div>\n            <div>\n              Picture from{\" \"}\n              <a href=\"https://www.wash.com/wp-content/uploads/2019/04/woman-doing-laundry.jpg\">\n                wash.com\n              </a>\n            </div>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n","//MICHAEL CHANG\n\nimport { useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Card from \"../ui/Card\";\nimport classes from \"./LoginForm.module.css\";\n\nimport { useContext } from \"react\";\nimport UserLoginContext from \"../../store/UserLoginContext\";\n\nfunction LoginForm(props) {\n  // initailize react hooks\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n\n  // onSubmit customer form handler\n  const loginSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    const loginEmail = emailRef.current.value;\n    const loginPassword = passwordRef.current.value;\n\n    const loginData = {\n      email: loginEmail,\n      password: loginPassword,\n    };\n\n    const response = await props.loginHandler(loginData);\n\n    // if the response is an error\n    if (response.error) {\n      setErrorMessage(response.error);\n    } else {\n      // set localStorage with customer info\n      localStorage.setItem(\"email\", response.email);\n      localStorage.setItem(\"userType\", response.userType);\n      localStorage.setItem(\"loginSuccess\", true);\n\n      const setData = async () => {\n        const userType = localStorage.getItem(\"userType\");\n        const email = localStorage.getItem(\"email\");\n        const credentials = { email: email, userType: userType };\n        userContext.setUserDetails(\n          await userContext.findUserDetails(credentials)\n        );\n        userContext.setLoginStatus(true);\n      };\n      setData();\n\n      //navigate to Customer Request page or Provider Service Page\n      if (response.userType === \"customer\") {\n        navigate(\"/CustomerRequestService\");\n      } else {\n        navigate(\"/ProviderPage\");\n      }\n    }\n  };\n\n  // form component\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={loginSubmitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">E-mail</label>\n          <input\n            type=\"email\"\n            placeholder=\"email@email.com\"\n            required\n            name=\"email\"\n            ref={emailRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            name=\"password\"\n            ref={passwordRef}\n          />\n        </div>\n        <div className={classes.error}>\n          <p>{errorMessage}</p>\n        </div>\n        <div className={classes.actions}>\n          <button>Login</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default LoginForm;\n","/* MICHAEL CHANG */\n\nimport LoginForm from \"../components/login/LoginForm\";\n\nfunction Login() {\n  async function loginHandler(data) {\n    const response = await fetch(\"/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    return await response.json();\n  }\n\n  return (\n    <div>\n      <h1>Login Page</h1>\n\n      <LoginForm loginHandler={loginHandler} />\n    </div>\n  );\n}\n\nexport default Login;\n","// DANIEL LISKO\n\nimport Card from \"../ui/Card\";\nimport \"./SignUpProvide.css\";\nimport { useState } from \"react\";\n\nconst SignUpProviderForm = ({ postProviderData }) => {\n  const [providerInfo, setProviderInfo] = useState({\n    userType: \"provider\",\n    companyName: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phoneNumber: \"\",\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    zipCode: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const handleChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setProviderInfo({ ...providerInfo, [name]: value });\n  };\n\n  //Hanle submit\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    postProviderData(providerInfo);\n  };\n\n  return (\n    <Card>\n      <form onSubmit={handleSubmit}>\n        <h2>Contact Info</h2>\n        <div className=\"fullLengthIn\">\n          <label htmlFor=\"companyName\">Company Name</label>\n          <input\n            type=\"text\"\n            name=\"companyName\"\n            id=\"companyName\"\n            placeholder=\"Enter Company Name\"\n            value={providerInfo.companyName}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <div className=\"inline\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input\n              type=\"text\"\n              name=\"firstName\"\n              value={providerInfo.firstName}\n              id=\"firstName\"\n              placeholder=\"Enter First Name\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"inline\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input\n              type=\"text\"\n              name=\"lastName\"\n              value={providerInfo.lastName}\n              id=\"lastName\"\n              placeholder=\"Enter Last Name\"\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n        <div>\n          <div className=\"inline\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter Email\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"inline\">\n            <label htmlFor=\"phoneNumber\">Phone</label>\n            <input\n              type=\"tel\"\n              name=\"phoneNumber\"\n              id=\"phoneNumber\"\n              pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n              placeholder=\"XXX-XXX-XXXX\"\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n        <h2>Address</h2>\n        <div>\n          <div className=\"fullLengthIn\">\n            <label htmlFor=\"address\">Address Line 1</label>\n            <input\n              name=\"address\"\n              id=\"address1\"\n              type=\"text\"\n              onChange={handleChange}\n            />\n          </div>\n\n          <div className=\"inline\">\n            <label htmlFor=\"city\">City</label>\n            <input name=\"city\" id=\"city\" type=\"text\" onChange={handleChange} />\n          </div>\n          <div className=\"inline\">\n            <label htmlFor=\"state\">State</label>\n            <input\n              name=\"state\"\n              id=\"state\"\n              type=\"text\"\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"zipCode\">Zip Code</label>\n          </div>\n          <input\n            name=\"zipCode\"\n            id=\"zipCode\"\n            type=\"number\"\n            onChange={handleChange}\n          />\n        </div>\n        <h2>Password</h2>\n\n        <div>\n          <div className=\"inline\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              name=\"password\"\n              id=\"password\"\n              type=\"password\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"inline\">\n            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n            <input\n              name=\"confirmPassword\"\n              id=\"confirmPassword\"\n              type=\"password\"\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n        <div className=\"flex-parent jc-center\">\n          <button type=\"submit\">Create Account</button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default SignUpProviderForm;\n","/* DANIEL LISKO */\n\nimport ProviderForm from \"../components/signups/SignUpProviderForm\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst SignUpProviders = () => {\n  let navigate = useNavigate();\n  const postProviderData = async (data) => {\n    delete data.confirmPassword;\n\n    fetch(\"api/createCustomer\", {\n      method: \"POST\", // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n    navigate(\"/\");\n  };\n\n  return (\n    <div>\n      <h1>Laundry Service Provider Sign Up</h1>\n      <ProviderForm postProviderData={postProviderData} />\n    </div>\n  );\n};\n\nexport default SignUpProviders;\n","// MICHAEL CHANG\n\nimport { useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Card from \"../ui/Card\";\nimport classes from \"./SignUpCustomerForm.module.css\";\n\nfunction SignUpCustomerForm(props) {\n  // state variables\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(\"\");\n  const [emailErrorMessage, setEmailErrorMessage] = useState(\"\");\n\n  // navigate variable\n  const navigate = useNavigate();\n\n  // reference varaibles\n  const firstNameRef = useRef();\n  const lastNameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const confirmPasswordRef = useRef();\n  const cityRef = useRef();\n  const zipCodeRef = useRef();\n  const stateRef = useRef();\n  const phoneNumberRef = useRef();\n\n  // onChange password && confirmPassword input handler\n  const passwordChangeHandler = async (event) => {\n    const password = passwordRef.current.value;\n    const confirmPassword = confirmPasswordRef.current.value;\n\n    if (password !== confirmPassword) {\n      setPasswordErrorMessage(\"Passwords do not match!\");\n    } else {\n      setPasswordErrorMessage(\"\");\n    }\n  };\n\n  // onChange email input handler\n  const emailChangeHandler = async (event) => {\n    const email = emailRef.current.value;\n\n    const response = await props.findEmailFetch(email);\n\n    if (response === null || response === undefined) {\n      setEmailErrorMessage(\"\");\n    } else {\n      setEmailErrorMessage(\"Email already registered please login!\");\n    }\n  };\n\n  // onSubmit customer form handler\n  const customerSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    const customerFirstName = firstNameRef.current.value;\n    const customerLastName = lastNameRef.current.value;\n    const customerEmail = emailRef.current.value;\n    const customerPassword = passwordRef.current.value;\n    const customerConfirmPassword = confirmPasswordRef.current.value;\n    const customerCity = cityRef.current.value;\n    const customerZipCode = zipCodeRef.current.value;\n    const customerState = stateRef.current.value;\n    const customerPhoneNumber = phoneNumberRef.current.value;\n\n    if (customerPassword !== customerConfirmPassword) {\n      setPasswordErrorMessage(\"Passwords do not match!\");\n      return;\n    } else {\n      setPasswordErrorMessage(\"\");\n      const customerData = {\n        firstName: customerFirstName,\n        lastName: customerLastName,\n        email: customerEmail,\n        city: customerCity,\n        zipCode: customerZipCode,\n        state: customerState,\n        phoneNumber: customerPhoneNumber,\n        password: customerPassword,\n        userType: \"customer\",\n      };\n\n      const response = await props.createCustomerFetch(customerData);\n\n      if (response) {\n        setEmailErrorMessage(\"\");\n        navigate(\"/redirectHome\");\n      } else {\n        setEmailErrorMessage(\"Email already registered please login!\");\n      }\n    }\n  };\n\n  // form component\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={customerSubmitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"firstname\">First Name</label>\n          <input\n            type=\"text\"\n            placeholder=\"First Name\"\n            required\n            name=\"firstname\"\n            ref={firstNameRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"lastname\">Last Name</label>\n          <input\n            type=\"text\"\n            placeholder=\"Last Name\"\n            required\n            name=\"lastname\"\n            ref={lastNameRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">E-mail</label>\n          <input\n            type=\"email\"\n            placeholder=\"email@email.com\"\n            required\n            name=\"email\"\n            ref={emailRef}\n            onChange={emailChangeHandler}\n          />\n        </div>\n        <div className={classes.error}>\n          <p>{emailErrorMessage}</p>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            name=\"password\"\n            ref={passwordRef}\n            onChange={passwordChangeHandler}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"confirmPassword\">Confirm Password</label>\n          <input\n            type=\"password\"\n            placeholder=\"Re-enter Password\"\n            required\n            name=\"confirmPassword\"\n            ref={confirmPasswordRef}\n            onChange={passwordChangeHandler}\n          />\n        </div>\n        <div className={classes.error}>\n          <p>{passwordErrorMessage}</p>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"city\">City</label>\n          <input\n            type=\"text\"\n            placeholder=\"City Name\"\n            required\n            name=\"city\"\n            ref={cityRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"zipCode\">Zip Code</label>\n          <input\n            type=\"text\"\n            pattern=\"[0-9]{5}\"\n            placeholder=\"Zip Code (eg. 12345)\"\n            required\n            name=\"zipCode\"\n            ref={zipCodeRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"state\">State</label>\n          <input\n            type=\"text\"\n            pattern=\"(A[KLRZ]|C[AOT]|D[CE]|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|PA|RI|S[CD]|T[NX]|UT|V[AT]|W[AIVY])\"\n            placeholder=\"State Abbreviation (eg. CA, NY, AZ, etc.)\"\n            required\n            name=\"state\"\n            ref={stateRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"phone\">Phone Number</label>\n          <input\n            type=\"tel\"\n            pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n            placeholder=\"123-456-7890\"\n            required\n            name=\"phone\"\n            ref={phoneNumberRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          <button>Create Account</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default SignUpCustomerForm;\n","/* MICHAEL CHANG */\n\nimport SignUpCustomerForm from \"../components/signups/SignUpCustomerForm\";\n\nfunction SignUpCustomers() {\n  async function createCustomerFetch(data) {\n    const response = await fetch(\"/api/createCustomer\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    return await response.json();\n  }\n\n  async function findEmailFetch(data) {\n    const response = await fetch(\"/api/findEmailExists\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"text/plain\",\n      },\n      body: data,\n    });\n    return await response.json();\n  }\n  return (\n    <div>\n      <h1>Customers Sign Up Page</h1>\n      <SignUpCustomerForm\n        createCustomerFetch={createCustomerFetch}\n        findEmailFetch={findEmailFetch}\n      />\n    </div>\n  );\n}\n\nexport default SignUpCustomers;\n","// MICHAEL CHANG & DANIEL LISKO\n\nimport { Link, useNavigate } from \"react-router-dom\";\nimport classes from \"./MainNavigation.module.css\";\n\nimport { useContext } from \"react\";\nimport UserLoginContext from \"../../store/UserLoginContext\";\n\nfunction MainNavigation() {\n  const navigate = useNavigate();\n\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n\n  // reset states for logout and clear localStorage\n  const logoutHandler = (event) => {\n    localStorage.clear();\n    userContext.setLoginStatus(false);\n    navigate(\"/\");\n  };\n\n  let linksRender = [];\n\n  const logoutLink = () => {\n    return (\n      <li key=\"logout\">\n        <button\n          className={classes.logout}\n          onClick={logoutHandler}\n          type=\"button\"\n        >\n          Log out\n        </button>\n      </li>\n    );\n  };\n\n  // if loginSuccess state is true replace Login Link to Customer/Provider Detail Page Link\n  // !== undefined IS A HACK...REFER TO APP.js FETCH RUNS 2 times\n\n  if (userContext.userDetails && userContext.loginStatus) {\n    if (userContext.userDetails.userType === \"customer\") {\n      linksRender.push(\n        <li key=\"customerRequestService\">\n          <Link to=\"/CustomerRequestService\">Request Laundry</Link>\n        </li>\n      );\n      linksRender.push(\n        <li key=\"customerDetailsPage\">\n          <Link to=\"/CustomerDetailsPage\">{`${userContext.userDetails.firstName} ${userContext.userDetails.lastName}`}</Link>\n        </li>\n      );\n    } else {\n      linksRender.push(\n        <li key=\"providerPage\">\n          <Link to=\"/ProviderPage\">{`${userContext.userDetails.companyName}`}</Link>\n        </li>\n      );\n      linksRender.push(\n        <li key=\"providerDetailsPage\">\n          <Link to=\"/ProviderDetailsPage\">{`${userContext.userDetails.firstName} ${userContext.userDetails.lastName}`}</Link>\n        </li>\n      );\n    }\n    linksRender.push(logoutLink());\n\n    // else set default navigation bar\n  } else {\n    linksRender.push(\n      <li key=\"login\">\n        <Link to=\"/Login\">Login</Link>\n      </li>\n    );\n  }\n\n  // MainNavgiation component\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>Hamper Dash</div>\n      </Link>\n      <nav>\n        <ul>\n          <li key=\"home\">\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li key=\"signup\">\n            <Link to=\"/SignUp\">Sign Up</Link>\n          </li>\n          {linksRender}\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default MainNavigation;\n","// MICHAEL CHANG & DANIEL LISKO\n\nimport MainNavigation from \"./MainNavigation\";\nimport classes from \"./Layout.module.css\";\n\nfunction Layout(props) {\n  return (\n    <div>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </div>\n  );\n}\n\nexport default Layout;\n","/* MICHAEL CHANG */\n\nimport Card from \"../ui/Card\";\nimport classes from \"./CustomerDetailsForm.module.css\";\nimport { useState, useRef } from \"react\";\n\nimport { useContext } from \"react\";\nimport UserLoginContext from \"../../store/UserLoginContext\";\n\nfunction CustomerDetailsForm() {\n  const [formEdit, setFormEdit] = useState(true);\n  const [buttonText, setButtonText] = useState(\"Edit\");\n  const firstNameRef = useRef();\n  const lastNameRef = useRef();\n  const cityRef = useRef();\n  const zipCodeRef = useRef();\n  const stateRef = useRef();\n  const phoneNumberRef = useRef();\n\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n\n  // fetch to update userDetails in DB\n  const updateUserDetailsFetch = async (data) => {\n    await fetch(\"/api/updateUserDetails\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  };\n\n  const buttonClickHandler = (event) => {\n    event.preventDefault();\n\n    const customerFirstName = firstNameRef.current.value;\n    const customerLastName = lastNameRef.current.value;\n    const customerCity = cityRef.current.value;\n    const customerZipCode = zipCodeRef.current.value;\n    const customerState = stateRef.current.value;\n    const customerPhoneNumber = phoneNumberRef.current.value;\n\n    if (!formEdit && buttonText === \"Save\") {\n      const customerDataChanged = {\n        firstName: customerFirstName,\n        lastName: customerLastName,\n        city: customerCity,\n        zipCode: customerZipCode,\n        state: customerState,\n        phoneNumber: customerPhoneNumber,\n        email: userContext.userDetails.email,\n        userType: userContext.userDetails.userType,\n      };\n\n      updateUserDetailsFetch(customerDataChanged);\n      userContext.setUserDetails({...userContext.userDetails, ...customerDataChanged})\n    }\n\n    if (formEdit) {\n      setFormEdit(false);\n      setButtonText(\"Save\");\n    } else {\n      setFormEdit(true);\n      setButtonText(\"Edit\");\n    }\n  };\n\n  // form component\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={buttonClickHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"firstname\">First Name</label>\n          <input\n            type=\"text\"\n            placeholder=\"First Name\"\n            required\n            name=\"firstname\"\n            defaultValue={userContext.userDetails.firstName}\n            disabled={formEdit}\n            ref={firstNameRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"lastname\">Last Name</label>\n          <input\n            type=\"text\"\n            placeholder=\"Last Name\"\n            required\n            name=\"lastname\"\n            defaultValue={userContext.userDetails.lastName}\n            disabled={formEdit}\n            ref={lastNameRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"city\">City</label>\n          <input\n            type=\"text\"\n            placeholder=\"City Name\"\n            required\n            name=\"city\"\n            defaultValue={userContext.userDetails.city}\n            disabled={formEdit}\n            ref={cityRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"zipCode\">Zip Code</label>\n          <input\n            type=\"text\"\n            pattern=\"[0-9]{5}\"\n            placeholder=\"Zip Code (eg. 12345)\"\n            required\n            name=\"zipCode\"\n            defaultValue={userContext.userDetails.zipCode}\n            disabled={formEdit}\n            ref={zipCodeRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"state\">State</label>\n          <input\n            type=\"text\"\n            pattern=\"(A[KLRZ]|C[AOT]|D[CE]|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|PA|RI|S[CD]|T[NX]|UT|V[AT]|W[AIVY])\"\n            placeholder=\"State Abbreviation (eg. CA, NY, AZ, etc.)\"\n            required\n            name=\"state\"\n            defaultValue={userContext.userDetails.state}\n            disabled={formEdit}\n            ref={stateRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"phone\">Phone Number</label>\n          <input\n            type=\"tel\"\n            pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n            placeholder=\"123-456-7890\"\n            required\n            name=\"phone\"\n            defaultValue={userContext.userDetails.phoneNumber}\n            disabled={formEdit}\n            ref={phoneNumberRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          <button>{buttonText}</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default CustomerDetailsForm;\n","// MICHAEL CHANG\n\nimport CustomerDetailsForm from \"../components/customer/CustomerDetailsForm\";\nimport { useContext } from \"react\";\nimport UserLoginContext from \"../store/UserLoginContext\";\n\nfunction CustomerDetailsPage() {\n  //intialize useContext\n  const userContext = useContext(UserLoginContext);\n\n  if (userContext.userDetails !== undefined) {\n    return (\n      <div>\n        <h1>{`${userContext.userDetails.firstName} ${userContext.userDetails.lastName}`}</h1>\n        <div>\n          <CustomerDetailsForm />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h1>Customer Details Page</h1>\n    </div>\n  );\n}\n\nexport default CustomerDetailsPage;\n","// MICHAEL CHANG\n\nimport { useRef, useState } from \"react\";\n\nimport Card from \"../ui/Card\";\nimport classes from \"./LaundryRequestForm.module.css\";\n\nfunction LaundryRequestForm(props) {\n  // initailize react hooks\n  const poundsOfLaundryRef = useRef();\n  const foldRef = useRef();\n  const poundsOfDryCleanRef = useRef();\n  const deliveryRef = useRef();\n  const dateRef = useRef();\n\n  const [dateErrorMessage, setDateErrorMesssage] = useState();\n  const [dryCleanForm, setDryCleanForm] = useState(false);\n  const [washForm, setWashForm] = useState(false);\n\n  // onSubmit customer form handler\n  async function laundryRequestHandler(event) {\n    event.preventDefault();\n\n    const poundsOfLaundry = poundsOfLaundryRef.current.value;\n    const fold = foldRef.current.checked;\n    const poundsOfDryClean = poundsOfDryCleanRef.current.value;\n    const delivery = deliveryRef.current.checked;\n    const date = dateRef.current.value;\n\n    const today = new Date();\n    if (date < today.toLocaleDateString()) {\n      setDateErrorMesssage(\"Date can not be in the past\");\n      return;\n    } else {\n      setDateErrorMesssage();\n    }\n\n    const laundryRequestData = {\n      wash: poundsOfLaundry,\n      dryClean: poundsOfDryClean,\n      fold: fold,\n      delivery: delivery,\n      date: date,\n    };\n\n    await props.laundryRequestFetch(laundryRequestData);\n  }\n\n  function setDryCleanFormFunc() {\n    setDryCleanForm(!dryCleanForm);\n  }\n\n  function setWashFormFunc() {\n    setWashForm(!washForm);\n  }\n\n  function showWashForm() {\n    if (washForm) {\n      return (\n        <div className={classes.textControl}>\n          <label htmlFor=\"poundsOfLaundry\">\n            Estimated Pounds of Laundry for Wash\n          </label>\n          <input\n            type=\"number\"\n            placeholder=\"Estimated pounds\"\n            required\n            name=\"poundsOfLaundry\"\n            ref={poundsOfLaundryRef}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <input\n          type=\"hidden\"\n          value=\"\"\n          name=\"poundsOfLaundry\"\n          ref={poundsOfLaundryRef}\n        />\n      );\n    }\n  }\n\n  function showDryCleanForm() {\n    if (dryCleanForm) {\n      return (\n        <div className={classes.textControl}>\n          <label htmlFor=\"poundsOfDryClean\">\n            Estimated Pounds of Laundry for Dry Clean\n          </label>\n          <input\n            type=\"number\"\n            placeholder=\"Estimated pounds\"\n            required\n            name=\"poundsOfDryClean\"\n            ref={poundsOfDryCleanRef}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <input\n          type=\"hidden\"\n          value=\"\"\n          name=\"poundsOfDryClean\"\n          ref={poundsOfDryCleanRef}\n        />\n      );\n    }\n  }\n\n  function showSortOptions() {\n    if (props.providerCards.length > 0) {\n      return (\n        <div className={classes.checkBoxControl}>\n          <div>Sort By:</div>\n          <input\n            type=\"radio\"\n            id=\"priceLowHigh\"\n            name=\"sort\"\n            onChange={props.setSortPriceLowHighFunc}\n          />\n          <label htmlFor=\"priceAsc\">Price Low-High</label>\n          <input\n            type=\"radio\"\n            id=\"priceHighLow\"\n            name=\"sort\"\n            onChange={props.setSortPriceHighLowFunc}\n          />\n          <label htmlFor=\"priceDesc\">Price High-Low</label>\n          <input\n            type=\"radio\"\n            id=\"distance\"\n            name=\"sort\"\n            onChange={props.setSortDistanceFunc}\n          />\n          <label htmlFor=\"distance\">Distance (not functional yet)</label>\n        </div>\n      );\n    } else {\n      return;\n    }\n  }\n\n  // form component\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={laundryRequestHandler}>\n        <div className={classes.checkBoxControl}>\n          <label htmlFor=\"wash\">Need Laundry Wash (per lbs.)?</label>\n          <input type=\"checkbox\" name=\"wash\" onChange={setWashFormFunc} />\n        </div>\n        {showWashForm()}\n        <div className={classes.checkBoxControl}>\n          <label htmlFor=\"dryClean\">Need Dry Clean? (per lbs.)</label>\n          <input\n            type=\"checkbox\"\n            name=\"dryClean\"\n            onChange={setDryCleanFormFunc}\n          />\n        </div>\n        {showDryCleanForm()}\n        <span className={classes.checkBoxControl}>\n          <label htmlFor=\"fold\">Folded</label>\n          <input type=\"checkbox\" name=\"fold\" ref={foldRef} />\n        </span>\n\n        <span className={classes.checkBoxControl}>\n          <label htmlFor=\"delivery\">Delivered</label>\n          <input type=\"checkbox\" name=\"delivery\" ref={deliveryRef} />\n        </span>\n        <div className={classes.textControl}>\n          <label htmlFor=\"date\">Date</label>\n          <input\n            type=\"text\"\n            required\n            placeholder=\"eg. 01/31/2021\"\n            name=\"date\"\n            ref={dateRef}\n          />\n        </div>\n        <div className={classes.error}>\n          <p>{dateErrorMessage}</p>\n        </div>\n        <div className={classes.actions}>\n          <button>Ready to Wash!</button>\n        </div>\n        {showSortOptions()}\n      </form>\n    </Card>\n  );\n}\n\nexport default LaundryRequestForm;\n","/* MICHAEL CHANG */\n\nimport LaundryRequestForm from \"../components/customer/LaundryRequestForm\";\nimport { useState } from \"react\";\nimport Card from \"../components/ui/Card\";\n\nconst currencyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n});\n\nlet availableProviders = [];\nlet servicesRequested = {};\n\nfunction CustomerRequestService() {\n  let providerCardRender = [];\n  let providerCards = [];\n\n  const [gotProivders, setGotProivders] = useState();\n  const [sortPriceLowHigh, setSortPriceLowHigh] = useState(false);\n  const [sortPriceHighLow, setSortPriceHighLow] = useState(false);\n  const [sortDistance, setSortDistance] = useState(false);\n\n  function setSortPriceLowHighFunc() {\n    setSortPriceLowHigh(true);\n    setSortPriceHighLow(false);\n    setSortDistance(false);\n  }\n\n  function setSortPriceHighLowFunc() {\n    setSortPriceLowHigh(false);\n    setSortPriceHighLow(true);\n    setSortDistance(false);\n  }\n\n  function setSortDistanceFunc() {\n    setSortPriceLowHigh(false);\n    setSortPriceHighLow(false);\n    setSortDistance(true);\n  }\n\n  const laundryRequestFetch = async (data) => {\n    const response = await fetch(\"/api/laundryRequest\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    availableProviders = await response.json();\n    servicesRequested = data;\n\n    //I'm just setting true false back and forth for component to re-render\n    setGotProivders(!gotProivders);\n  };\n\n  // loop through the providers returned from backend\n  availableProviders.forEach((provider) => {\n    // calculate each costs\n    const laundryCost = servicesRequested.wash\n      ? provider.serviceObjects.wash.price * servicesRequested.wash\n      : 0;\n    const dryCleanCost = servicesRequested.dryClean\n      ? provider.serviceObjects.dryClean.price * servicesRequested.dryClean\n      : 0;\n    const foldingCost = servicesRequested.fold\n      ? provider.serviceObjects.fold.price\n      : 0;\n    const deliveryCost = servicesRequested.delivery\n      ? provider.serviceObjects.delivery.price\n      : 0;\n    const totalCost = laundryCost + dryCleanCost + foldingCost + deliveryCost;\n\n    // push into providerCards array\n    providerCards.push([\n      <div className=\"mt-2\">\n        <Card>\n          <div className=\"row p-4\">\n            <h3 className=\"d-flex justify-content-center\">\n              {provider.companyName}\n            </h3>\n            <div className=\"row\">\n              <span className=\"col-12\">\n                <strong>Date: </strong> {servicesRequested.date}\n              </span>\n            </div>\n            <div className=\"row\">\n              <span className=\"col-6\">\n                <strong>Email: </strong> {provider.email}\n              </span>\n              <span className=\"col-6\">\n                <strong>Phone Number: </strong> {provider.phoneNumber}\n              </span>\n              <span className=\"col-6\">\n                <strong>Address: </strong> {provider.address}\n              </span>\n              <span className=\"col-6\">\n                <strong>City: </strong> {provider.city}\n              </span>\n              <span className=\"col-6\">\n                <strong>State: </strong> {provider.state}\n              </span>\n              <span className=\"col-6\">\n                <strong>Zip Code: </strong> {provider.zipCode}\n              </span>\n            </div>\n            <div className=\"row\">\n              <span className=\"col-6\">\n                <strong>Laundry Cost: </strong>\n                {currencyFormatter.format(laundryCost)}\n              </span>\n              <span className=\"col-6\">\n                <strong>Dry Cleaning Cost: </strong>\n                {currencyFormatter.format(dryCleanCost)}\n              </span>\n              <span className=\"col-6\">\n                <strong>Cost for Folding: </strong>\n                {currencyFormatter.format(foldingCost)}\n              </span>\n              <span className=\"col-6\">\n                <strong>Cost for Delivery: </strong>\n                {currencyFormatter.format(deliveryCost)}\n              </span>\n            </div>\n            <div className=\"row\">\n              <span className=\"d-flex justify-content-end\">\n                <strong>\n                  Total Costs:\n                  {currencyFormatter.format(totalCost)}\n                </strong>\n              </span>\n            </div>\n          </div>\n        </Card>\n      </div>,\n      servicesRequested.date,\n      totalCost,\n      provider.zipCode,\n    ]);\n  });\n\n  if (sortPriceLowHigh) {\n    providerCards.sort((a, b) => a[2] - b[2]);\n  } else if (sortPriceHighLow) {\n    providerCards.sort((a, b) => b[2] - a[2]);\n  } else if (sortDistance) {\n    //put in code to sort by zipCode....how to calculate absolute value of zipCode difference\n  }\n\n  //providerCards - [0] is provider Object [1] is date [2] is cost [3] is zipCode\n  // push cards[0] into an array to render in the react component\n  providerCards.forEach((card) => {\n    providerCardRender.push(card[0]);\n  });\n\n  console.log(\n    sortDistance,\n    \"-Distance\",\n    sortPriceHighLow,\n    \"-HighLow\",\n    sortPriceLowHigh,\n    \"-LowHigh\"\n  );\n\n  function showCards() {\n    if (providerCardRender.length > 0) {\n      return providerCardRender;\n    } else {\n      return (\n        <h2 className=\"d-flex h-100 align-items-center justify-content-center\">\n          Go have fun! Let us do the chores! Request Today!!\n        </h2>\n      );\n    }\n  }\n\n  return (\n    <div>\n      <h1>Request Laundry Service</h1>\n      <div className=\"row\">\n        <div className=\"col-4\">\n          <LaundryRequestForm\n            laundryRequestFetch={laundryRequestFetch}\n            providerCards={providerCards}\n            setSortPriceLowHighFunc={setSortPriceLowHighFunc}\n            setSortPriceHighLowFunc={setSortPriceHighLowFunc}\n            setSortDistanceFunc={setSortDistanceFunc}\n          />\n        </div>\n        <div className=\"col-8\">{showCards()}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default CustomerRequestService;\n","// DANIEL LISKO\n\nimport { useState, useEffect } from \"react\";\n\nconst EditService = ({\n  serviceItem,\n  modifyServiceDisplay,\n  onServiceEdit,\n  deleteService,\n  submitEdit,\n  services,\n}) => {\n  //Set up default service Options\n  let [serviceOptions, setServiceOptions] = useState(new Set());\n\n  //This will render every time we open create or decide to edit a service.\n  useEffect(() => {\n    let serviceOpt = new Set([\"Wash\", \"Dry Clean\", \"Fold\", \"Delivery\"]);\n\n    //Remove services that we're already submitted to the database.\n    updateServices(serviceOpt);\n    console.log(\"SERVICES\", serviceOpt);\n    setServiceOptions(serviceOpt);\n  }, []);\n\n  const updateServices = (serivceOpt) => {\n    services.forEach((service) => {\n      if (serivceOpt.has(service.service)) {\n        serivceOpt.delete(service.service);\n      }\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    //Prevents user from submitting the default display.\n    if (serviceItem.service === \"\") {\n      return;\n    }\n    modifyServiceDisplay(serviceItem.serviceID, \"showEdit\");\n    console.log(\"SUBMIT\", serviceItem);\n    serviceItem.showEdit = false;\n    submitEdit(serviceItem);\n  };\n\n  const handleInputChange = (e) => {\n    const target = e.target;\n    let value;\n\n    if (target.name === \"perPound\") {\n      if (target.value === \"true\") {\n        value = false;\n      } else {\n        value = true;\n      }\n    } else {\n      value = target.value;\n    }\n\n    onServiceEdit(serviceItem.serviceID, target.name, value);\n  };\n\n  const handleOnDelete = () => {\n    deleteService(serviceItem.serviceID);\n    modifyServiceDisplay(serviceItem.serviceID, \"showEdit\");\n  };\n\n  //Used to render options from dropdown service\n  const renderOptions = () => {\n    let options = new Set();\n    //Filter options that are already being useing\n\n    options.add(\n      <option value=\"\" disabled selected>\n        Select a service\n      </option>\n    );\n    serviceOptions.forEach((serviceOpt) => {\n      options.add(<option value={serviceOpt}>{serviceOpt}</option>);\n    });\n\n    return options;\n  };\n\n  const renderPerPoundBox = () => {\n    let output;\n    if (serviceItem.service === \"Dry Clean\" || serviceItem.service === \"Wash\") {\n      //Checks return if service item IS charging per pound\n      output = serviceItem.perPound ? (\n        <div className=\"form-check form-switch\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"perPound\"\n            id={\n              serviceItem.perPound\n                ? \"flexSwitchCheckChecked\"\n                : \"flexSwitchCheckDefault\"\n            }\n            value={serviceItem.perPound}\n            onChange={handleInputChange}\n            checked\n          />\n          <label\n            className=\"form-check-label\"\n            htmlFor={\n              serviceItem.perPound\n                ? \"flexSwitchCheckChecked\"\n                : \"flexSwitchCheckDefault\"\n            }\n          >\n            Charge per Pound?\n          </label>\n        </div>\n      ) : (\n        //Checks return if service item isn't charging per pound\n        <div className=\"form-check form-switch\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"perPound\"\n            id={\n              serviceItem.perPound\n                ? \"flexSwitchCheckChecked\"\n                : \"flexSwitchCheckDefault\"\n            }\n            value={serviceItem.perPound}\n            onChange={handleInputChange}\n          />\n          <label\n            className=\"form-check-label\"\n            htmlFor={\n              serviceItem.perPound\n                ? \"flexSwitchCheckChecked\"\n                : \"flexSwitchCheckDefault\"\n            }\n          >\n            Charge per Pound?\n          </label>\n        </div>\n      );\n    }\n    return output;\n  };\n\n  //-------------------To Render the Page--------\n\n  return (\n    <form key={serviceItem.serviceID} className=\"service\" onSubmit={onSubmit}>\n      <div>\n        <label htmlFor=\"service\">\n          <span>Select Service:</span>\n        </label>\n        <select\n          name=\"service\"\n          onChange={handleInputChange}\n          value={serviceItem.service}\n        >\n          {renderOptions()}\n        </select>\n        <div className=\"d-flex justify-content-center\">\n          {renderPerPoundBox()}\n        </div>\n      </div>\n      <div>\n        <label htmlFor=\"\">Fee:</label>\n        <input\n          type=\"number\"\n          step=\"0.01\"\n          min=\"0\"\n          max=\"100\"\n          name=\"price\"\n          placeholder={serviceItem.price}\n          onChange={handleInputChange}\n        />\n      </div>\n      <div className=\"col-12 d-flex justify-content-center\">\n        <button type=\"submit\" value=\"Save\" className=\"editBtn\">\n          Save\n        </button>\n        <button className=\"deleteBtn\" onClick={handleOnDelete}>\n          Delete\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default EditService;\n","// DANIEL LISKO\n\nconst Button = ({ serviceItem, modifyServiceDisplay, id }) => {\n  const handleClick = (e) => {\n    modifyServiceDisplay(serviceItem.serviceID, \"showDetails\");\n  };\n\n  return (\n    <span className=\"col-4 d-flex justify-content-center align-items-center\">\n      {serviceItem.showDetails ? (\n        <button id={id} onClick={handleClick} className=\"collapseBtn\">\n          &#8722;\n        </button>\n      ) : (\n        <button id={id} onClick={handleClick} className=\"collapseBtn\">\n          &#43;\n        </button>\n      )}\n    </span>\n  );\n};\n\nexport default Button;\n","// DANIEL LISKO\n\nimport Button from \"./Button.js\";\n\nconst Service = ({\n  serviceItem,\n  modifyServiceDisplay,\n  id,\n  deleteService,\n  setServices,\n}) => {\n  // handle edit button\n  const onEditClick = () => {\n    modifyServiceDisplay(serviceItem.serviceID, \"showEdit\");\n  };\n\n  const handleOnDelete = () => {\n    deleteService(serviceItem.serviceID);\n    modifyServiceDisplay(serviceItem.serviceID, \"showEdit\");\n  };\n\n  // //Details to display\n  const details = (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-7 pl-0\">\n          <h6>\n            Cost: $<span>{serviceItem.price}</span>\n          </h6>\n        </div>\n        <div className=\"col-5 d-flex justify-content-end\">\n          {serviceItem.perPound && <h6>Per lb.</h6>}\n        </div>\n      </div>\n      <div className=\"row \">\n        <div className=\"col-12 d-flex justify-content-center\">\n          <button className=\"editBtn\" onClick={onEditClick}>\n            Edit\n          </button>\n          <button className=\"deleteBtn\" onClick={handleOnDelete}>\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div key={serviceItem.serviceID} className=\"service row\">\n      <h5 className=\"serviceTitle col-8 pb-0\">\n        <span>{serviceItem.service}</span>\n      </h5>\n      <Button\n        serviceItem={serviceItem}\n        modifyServiceDisplay={modifyServiceDisplay}\n        id={id}\n      />\n      {serviceItem.showDetails && details}\n    </div>\n  );\n};\n\nexport default Service;\n","// DANIEL LISKO\n\nimport EditService from \"./EditService.js\";\nimport \"./providerPage.css\";\nimport Service from \"./Service\";\n// import { useState } from \"react\";\n\nconst Services = ({\n  services,\n  setServices,\n  modifyServiceDisplay,\n  onServiceEdit,\n}) => {\n  //Used to delete a service\n  const deleteService = (id) => {\n    services.forEach((s, i) => {\n      if (s.serviceID === id) {\n        services.splice(i, 1);\n      }\n      postService(services);\n    });\n\n    //Need to reset indexes or else keys will be off.\n    let updated = services.map((service, index) => {\n      return (service.serviceID = index);\n    });\n\n    setServices(updated);\n  };\n\n  const addService = () => {\n    console.log(\"ID =>\", services.length);\n    const newService = {\n      service: \"\",\n      price: 0.0,\n      perPound: false,\n      serviceID: services.length,\n      showDetails: false,\n      showEdit: true,\n    };\n    setServices([...services, newService]);\n  };\n\n  const submitEdit = async (service) => {\n    await postService([...services, service]);\n  };\n\n  const postService = async (services) => {\n    console.log(\"Posting\", services);\n    const res = await fetch(\"/api/updateServices\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email: localStorage.email, services: services }),\n    });\n  };\n\n  const renderServices = services.map((s, i) => {\n    if (s.showEdit) {\n      return (\n        <EditService\n          key={s.serviceID}\n          services={services}\n          serviceItem={s}\n          modifyServiceDisplay={modifyServiceDisplay}\n          onServiceEdit={onServiceEdit}\n          deleteService={deleteService}\n          submitEdit={submitEdit}\n        />\n      );\n    }\n\n    return (\n      <Service\n        key={s.serviceID}\n        id={i}\n        serviceItem={s}\n        modifyServiceDisplay={modifyServiceDisplay}\n        deleteService={deleteService}\n      />\n    );\n  });\n\n  return (\n    <div>\n      {renderServices}\n      <div>\n        <small> Services Remaining: {4 - services.length}</small>{\" \"}\n      </div>\n      <div className=\"d-flex justify-content-center\">\n        {services.length < 4 && (\n          <button onClick={addService}>Add Service</button>\n        )}{\" \"}\n      </div>\n    </div>\n  );\n};\n\nexport default Services;\n","// DANIEL LISKO\n\nimport { useState, useEffect } from \"react\";\nimport Services from \"../components/provider/Services.js\";\n\nconst ProviderPage = () => {\n  let [services, setServices] = useState([]);\n\n  //Changes the displays to either being visibile or not visibile\n  const modifyServiceDisplay = (id, toModify) => {\n    let updated = services.map((service) => {\n      let update;\n      if (service.serviceID === id) {\n        update = { ...service, [toModify]: !service[toModify] };\n      } else {\n        update = service;\n      }\n\n      return update;\n    });\n\n    setServices(updated);\n  };\n\n  //Handle Service Edits\n  const onServiceEdit = (id, item, value) => {\n    let updated = services.map((serviceItem) => {\n      let update;\n      if (serviceItem.serviceID === id) {\n        update = { ...serviceItem, [item]: value };\n      } else {\n        update = serviceItem;\n      }\n      return update;\n    });\n\n    setServices(updated);\n  };\n\n  //----------Handling Post-----------------//\n  const getProviderServices = async (email) => {\n    const res = await fetch(\"/api/getServices\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email: email }),\n    });\n\n    const resJSON = await res.json();\n\n    return resJSON;\n  };\n\n  // //Display only on page\n  useEffect(() => {\n    //Get services offered -> set display to false\n    const loadServices = async () => {\n      let services = await getProviderServices(localStorage.email);\n      setServices(services);\n    };\n    loadServices();\n  }, []);\n\n  // Sending and Recieving services\n\n  return (\n    <div>\n      <div>\n        <h1>Provider Page</h1>\n        <div className=\"row\">\n          <div className=\"serviceDetails col-3\">\n            <h3>Services By You:</h3>\n            <Services\n              services={services}\n              modifyServiceDisplay={modifyServiceDisplay}\n              onServiceEdit={onServiceEdit}\n              setServices={setServices}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProviderPage;\n","// DANIEL LISKO\n\nfunction ProviderDetailsPage() {\n  return (\n    <div>\n      <h1>Proivder Details Page</h1>\n    </div>\n  );\n}\n\nexport default ProviderDetailsPage;\n","/* MICHAEL CHANG & DANIEL LISKO */\n\nimport \"./App.css\";\n\nimport { Routes, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport RedirectHome from \"./pages/RedirectHome.js\";\nimport SignUp from \"./pages/SignUp\";\nimport Login from \"./pages/Login\";\nimport SignUpProviders from \"./pages/SignUpProviders\";\nimport SignUpCustomers from \"./pages/SignUpCustomers\";\nimport Layout from \"./components/layout/Layout\";\nimport CustomerDetailsPage from \"./pages/CustomerDetailsPage\";\nimport CustomerRequestService from \"./pages/CustomerRequestService\";\nimport ProviderPage from \"./pages/ProviderPage\";\nimport ProviderDetailsPage from \"./pages/ProviderDetailsPage\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/SignUp\" element={<SignUp />} />\n        <Route path=\"/Login\" element={<Login />} />\n        <Route path=\"/signUpProviders\" element={<SignUpProviders />} />\n        <Route path=\"/signUpCustomers\" element={<SignUpCustomers />} />\n        <Route path=\"/CustomerDetailspage\" element={<CustomerDetailsPage />} />\n        <Route\n          path=\"/CustomerRequestService\"\n          element={<CustomerRequestService />}\n        />\n        <Route path=\"/ProviderPage\" element={<ProviderPage />} />\n        <Route path=\"/ProviderDetailspage\" element={<ProviderDetailsPage />} />\n        <Route path=\"/redirectHome\" element={<RedirectHome />} />\n      </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n","/* MICHAEL CHANG & DANIEL LISKO */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { UserLoginContextProvider } from \"./store/UserLoginContext\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <UserLoginContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </UserLoginContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}